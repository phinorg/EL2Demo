2025-10-07 09:45:37,982 - semgrep.run_scan - DEBUG - semgrep version 1.8.3
2025-10-07 09:45:37,996 - semgrep.config_resolver - DEBUG - Loading local config from /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/sast_rules
2025-10-07 09:45:38,014 - semgrep.config_resolver - DEBUG - Done loading local config from /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/sast_rules
2025-10-07 09:45:38,015 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-obp93pl3.rules
2025-10-07 09:45:38,022 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-a1xg3yh_.rules
2025-10-07 09:45:38,022 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-vy89a1hb.rules
2025-10-07 09:45:38,024 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2vcyaijp.rules
2025-10-07 09:45:38,027 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-re2r397f.rules
2025-10-07 09:45:38,030 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-jnjjb82w.rules
2025-10-07 09:45:38,037 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4cpvnaym.rules
2025-10-07 09:45:38,037 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-qee7ezpw.rules
2025-10-07 09:45:38,062 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-szgnh8ua.rules
2025-10-07 09:45:38,074 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-npgmjy3i.rules
2025-10-07 09:45:38,074 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-jw6gx5ya.rules
2025-10-07 09:45:38,111 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1vugl77v.rules
2025-10-07 09:45:38,298 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,299 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,299 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,300 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-tl8_htab.rules
2025-10-07 09:45:38,307 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,307 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,307 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,307 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,307 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,307 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,313 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-nw_kyvqk.rules
2025-10-07 09:45:38,319 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ddoth1o8.rules
2025-10-07 09:45:38,332 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,333 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,335 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,340 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1hxox6a3.rules
2025-10-07 09:45:38,353 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,354 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,354 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,358 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,358 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-30ckwgp_.rules
2025-10-07 09:45:38,359 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,366 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,378 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,378 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,378 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,381 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,382 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,382 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_crh1g47.rules
2025-10-07 09:45:38,382 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,382 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,397 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,398 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,382 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-e4q57sgq.rules
2025-10-07 09:45:38,411 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-f14ubptv.rules
2025-10-07 09:45:38,411 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-s2xc0jf7.rules
2025-10-07 09:45:38,426 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,432 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,436 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,436 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,441 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,442 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,442 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,442 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,442 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,443 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9t1h9jjf.rules
2025-10-07 09:45:38,444 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-qk6uupn8.rules
2025-10-07 09:45:38,458 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-h6an2geu.rules
2025-10-07 09:45:38,480 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,486 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,487 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,487 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,492 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,492 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,504 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,500 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,503 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,504 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,499 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,504 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,504 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,509 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,508 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-bcyhoybq.rules
2025-10-07 09:45:38,508 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,510 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0v1silp5.rules
2025-10-07 09:45:38,523 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fcdf1am8.rules
2025-10-07 09:45:38,529 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-03ea_7gw.rules
2025-10-07 09:45:38,552 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,559 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,560 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,566 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,568 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-8zktmnjm.rules
2025-10-07 09:45:38,570 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,570 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,572 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,577 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,607 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,584 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,604 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,606 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,609 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,610 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,608 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-x93mkum4.rules
2025-10-07 09:45:38,610 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-i5jdoa4f.rules
2025-10-07 09:45:38,610 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-z4wfmy_s.rules
2025-10-07 09:45:38,597 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,609 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-cb_lqv77.rules
2025-10-07 09:45:38,621 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,633 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,652 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,664 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,665 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hxt_ycf_.rules
2025-10-07 09:45:38,656 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-bqr3sfmc.rules
2025-10-07 09:45:38,656 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,688 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,688 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,689 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-b_crlmfx.rules
2025-10-07 09:45:38,694 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,707 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,707 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,699 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,699 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,713 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,720 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,721 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-inw0pk_3.rules
2025-10-07 09:45:38,712 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,718 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-27oylaw7.rules
2025-10-07 09:45:38,698 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,741 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,755 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,755 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,755 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,755 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-z4k_p_v1.rules
2025-10-07 09:45:38,732 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,764 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-c0i5zl44.rules
2025-10-07 09:45:38,774 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,774 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,774 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,776 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-s95dfv2n.rules
2025-10-07 09:45:38,805 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,814 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,821 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,821 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,827 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,833 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,828 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,828 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-rql1d3ca.rules
2025-10-07 09:45:38,829 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,829 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,827 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,834 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,834 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,841 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,843 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,844 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-gghe6rxf.rules
2025-10-07 09:45:38,844 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,850 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,849 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,849 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-pyuorihh.rules
2025-10-07 09:45:38,857 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,849 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5vkbxz4q.rules
2025-10-07 09:45:38,864 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-l7q50jeo.rules
2025-10-07 09:45:38,865 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-670vvxep.rules
2025-10-07 09:45:38,865 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,898 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,898 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,898 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,910 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,910 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,909 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,917 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,917 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2fpvaup2.rules
2025-10-07 09:45:38,879 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5396c5fa.rules
2025-10-07 09:45:38,904 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,917 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-icdf3gpm.rules
2025-10-07 09:45:38,947 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,948 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,948 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,947 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,958 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,962 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,955 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-64ulveim.rules
2025-10-07 09:45:38,968 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:38,976 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:38,976 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:38,977 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1w47h1xm.rules
2025-10-07 09:45:38,957 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hfnuqfeo.rules
2025-10-07 09:45:39,007 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,007 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,007 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,029 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-v1iyfu58.rules
2025-10-07 09:45:39,029 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,034 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-l_r0xo5k.rules
2025-10-07 09:45:39,052 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,052 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,052 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,060 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,067 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,075 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,075 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,078 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,080 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,078 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,078 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,079 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,080 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fnbd3295.rules
2025-10-07 09:45:39,078 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,080 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,080 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,080 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,090 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,097 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-dql06_i4.rules
2025-10-07 09:45:39,108 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,110 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-zjoaa_iz.rules
2025-10-07 09:45:39,110 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_7loliq9.rules
2025-10-07 09:45:39,111 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_bq3715v.rules
2025-10-07 09:45:39,119 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,125 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-7i495fxs.rules
2025-10-07 09:45:39,138 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,163 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,175 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,175 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,176 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,190 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,209 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,223 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,226 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-oczu27n5.rules
2025-10-07 09:45:39,226 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,227 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,227 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,227 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,228 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,228 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,235 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,236 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,237 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,237 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,237 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,242 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,243 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-h1b2aqx9.rules
2025-10-07 09:45:39,243 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,243 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-b5k69dcd.rules
2025-10-07 09:45:39,244 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-6uzosnaq.rules
2025-10-07 09:45:39,244 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,244 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3xt466ay.rules
2025-10-07 09:45:39,251 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-rq37v0bb.rules
2025-10-07 09:45:39,269 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-bjpg4pbk.rules
2025-10-07 09:45:39,294 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,294 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,300 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-gt2f6euk.rules
2025-10-07 09:45:39,301 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,325 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,364 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,358 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,381 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,359 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,385 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,385 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,385 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-mxrvzex1.rules
2025-10-07 09:45:39,334 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,401 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,391 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-s48pe5t1.rules
2025-10-07 09:45:39,365 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,405 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,405 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,380 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-dzl_ryfh.rules
2025-10-07 09:45:39,426 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-pf97vqwx.rules
2025-10-07 09:45:39,427 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-cpzrp510.rules
2025-10-07 09:45:39,427 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,433 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,433 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,446 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,446 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,446 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,446 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,452 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,462 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,455 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,461 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,461 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,461 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,458 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,465 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,464 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,464 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-cyogg971.rules
2025-10-07 09:45:39,465 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ee5zw7g3.rules
2025-10-07 09:45:39,465 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,466 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-jg6n379b.rules
2025-10-07 09:45:39,464 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,474 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-998qsir4.rules
2025-10-07 09:45:39,504 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_no4isz6.rules
2025-10-07 09:45:39,516 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,543 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,544 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,522 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,549 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2h4m0pua.rules
2025-10-07 09:45:39,553 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,574 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,574 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,574 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-dgz2lst_.rules
2025-10-07 09:45:39,575 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,580 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,581 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,581 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,581 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-gia_q59i.rules
2025-10-07 09:45:39,582 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,588 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,592 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,593 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,598 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,609 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,610 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,610 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,616 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5is3_2pq.rules
2025-10-07 09:45:39,618 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,620 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,619 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fc1meoqp.rules
2025-10-07 09:45:39,618 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2a9msfkk.rules
2025-10-07 09:45:39,626 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-634r1sii.rules
2025-10-07 09:45:39,655 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-agunv6dp.rules
2025-10-07 09:45:39,665 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,679 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,688 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,696 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,704 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,709 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,710 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,709 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,710 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,710 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,710 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,710 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,710 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,710 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,710 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,714 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-94hsfg24.rules
2025-10-07 09:45:39,711 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-too3xe4i.rules
2025-10-07 09:45:39,733 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,734 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-p9zb8w8p.rules
2025-10-07 09:45:39,734 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-g7b6exhl.rules
2025-10-07 09:45:39,734 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,734 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3l82adij.rules
2025-10-07 09:45:39,734 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,780 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,780 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,754 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,807 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-7ejl2iqn.rules
2025-10-07 09:45:39,805 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-l9yphlo3.rules
2025-10-07 09:45:39,818 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,833 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,868 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,841 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,853 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,868 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,868 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,853 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,869 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,869 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,868 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,868 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,869 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,869 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,868 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,870 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-yf9awnvb.rules
2025-10-07 09:45:39,870 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-72bmyyry.rules
2025-10-07 09:45:39,870 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-gx76zstj.rules
2025-10-07 09:45:39,884 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-41hxkv0o.rules
2025-10-07 09:45:39,878 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,870 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-yl887_u3.rules
2025-10-07 09:45:39,900 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,918 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,921 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,943 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,929 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,944 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,942 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,946 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-t0erq1cq.rules
2025-10-07 09:45:39,948 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,949 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,949 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-tjlt0bqp.rules
2025-10-07 09:45:39,957 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:39,962 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-qbp_1456.rules
2025-10-07 09:45:39,967 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:39,976 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:39,995 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,000 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,003 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9maevqz5.rules
2025-10-07 09:45:40,012 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3hxmqah1.rules
2025-10-07 09:45:40,066 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,067 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,067 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,068 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-bjbl2zb8.rules
2025-10-07 09:45:40,104 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,105 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,105 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,106 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-icuvigj5.rules
2025-10-07 09:45:40,136 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,137 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,137 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,137 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-nz__e3q7.rules
2025-10-07 09:45:40,152 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,152 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,152 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,152 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-afl83mzz.rules
2025-10-07 09:45:40,164 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,164 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,164 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,166 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-8yuyi_r0.rules
2025-10-07 09:45:40,186 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,186 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,186 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,187 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1xg0maxf.rules
2025-10-07 09:45:40,209 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,209 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,209 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,211 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-agtnpn1b.rules
2025-10-07 09:45:40,240 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,241 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,241 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,242 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9r8sixlf.rules
2025-10-07 09:45:40,255 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,255 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,256 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,256 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,256 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,256 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,257 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fk6np2v4.rules
2025-10-07 09:45:40,274 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,274 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ezycfklo.rules
2025-10-07 09:45:40,274 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,282 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,282 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,294 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,294 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,297 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,301 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,301 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-rhgx7xql.rules
2025-10-07 09:45:40,302 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,302 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,302 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-z9l9eo_m.rules
2025-10-07 09:45:40,309 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,313 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,313 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,314 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,321 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,328 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,329 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,329 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-6cjwqsb8.rules
2025-10-07 09:45:40,329 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,329 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-n1oj8b68.rules
2025-10-07 09:45:40,329 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,329 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,337 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,341 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,348 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,356 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ro61w_ng.rules
2025-10-07 09:45:40,357 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,362 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-85n7nltu.rules
2025-10-07 09:45:40,362 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-njfhop0r.rules
2025-10-07 09:45:40,362 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,367 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,387 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,392 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,397 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,399 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-s15nosx1.rules
2025-10-07 09:45:40,400 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,421 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0beecej8.rules
2025-10-07 09:45:40,433 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,434 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,434 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,435 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ek93y966.rules
2025-10-07 09:45:40,434 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,442 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,442 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,443 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-rf9hob3o.rules
2025-10-07 09:45:40,460 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-t2yz1poh.rules
2025-10-07 09:45:40,485 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,485 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,485 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,486 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-rakpq1yc.rules
2025-10-07 09:45:40,499 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,500 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,509 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,510 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hcllj84i.rules
2025-10-07 09:45:40,522 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,522 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,523 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,524 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-529ajzii.rules
2025-10-07 09:45:40,539 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,539 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,539 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,553 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-aqg22k0l.rules
2025-10-07 09:45:40,554 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,561 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,561 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,555 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,568 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5axtd7xu.rules
2025-10-07 09:45:40,573 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,590 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,590 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_k_uar9u.rules
2025-10-07 09:45:40,555 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,599 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,599 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,599 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-dj6swp5i.rules
2025-10-07 09:45:40,598 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,580 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,623 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,623 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,622 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,625 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,623 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,625 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,626 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,626 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,627 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,627 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,626 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-xluswbwy.rules
2025-10-07 09:45:40,625 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-99kjkhzs.rules
2025-10-07 09:45:40,639 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,645 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,645 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,645 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-aeqsyn9p.rules
2025-10-07 09:45:40,645 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,661 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,649 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,651 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-m28jdbnh.rules
2025-10-07 09:45:40,650 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,685 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,692 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,679 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1e1p0fcb.rules
2025-10-07 09:45:40,691 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hzju3d35.rules
2025-10-07 09:45:40,684 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,708 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9f0myrl7.rules
2025-10-07 09:45:40,708 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,722 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,735 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,738 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,738 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,754 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,741 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,749 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,753 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,754 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,745 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,754 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,754 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,754 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,757 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-cc7dkdgz.rules
2025-10-07 09:45:40,756 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-yaaeo6qs.rules
2025-10-07 09:45:40,756 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4yuf00jh.rules
2025-10-07 09:45:40,756 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-m1sgbluz.rules
2025-10-07 09:45:40,783 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-34_8ry5r.rules
2025-10-07 09:45:40,793 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,817 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,817 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,826 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,827 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,838 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,838 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,836 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,837 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hdlg8jkl.rules
2025-10-07 09:45:40,846 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,846 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,853 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,854 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,857 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,860 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,857 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-w6zvo8ut.rules
2025-10-07 09:45:40,854 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-lita_mgi.rules
2025-10-07 09:45:40,864 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-zt0fl_nx.rules
2025-10-07 09:45:40,854 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,954 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,954 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,959 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,959 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,960 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,960 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,960 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,963 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-etothk5g.rules
2025-10-07 09:45:40,964 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,964 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,965 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,966 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,966 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,966 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,966 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,967 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:40,975 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:40,982 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,983 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,985 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,985 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,986 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,986 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,988 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4ca_zvis.rules
2025-10-07 09:45:40,987 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-b5j0u1yu.rules
2025-10-07 09:45:40,987 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-dahcm82u.rules
2025-10-07 09:45:40,988 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-scm5_s2u.rules
2025-10-07 09:45:40,988 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-j8igarqh.rules
2025-10-07 09:45:40,989 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-nt95yvw7.rules
2025-10-07 09:45:40,986 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,041 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:40,996 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1qlbw88m.rules
2025-10-07 09:45:41,055 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-pwidwq8v.rules
2025-10-07 09:45:41,070 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,079 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,082 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,086 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,087 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,103 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-oe8aqvuf.rules
2025-10-07 09:45:41,087 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,120 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,120 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,121 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-nlseg7a6.rules
2025-10-07 09:45:41,097 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,137 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-q7g_z4no.rules
2025-10-07 09:45:41,152 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,152 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,152 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,153 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-g_5l1215.rules
2025-10-07 09:45:41,168 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,168 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,168 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,170 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,170 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,170 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,171 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-88vtdpp7.rules
2025-10-07 09:45:41,176 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-qj6bhu2x.rules
2025-10-07 09:45:41,207 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,207 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,207 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,208 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,208 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,208 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,208 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-okycmhu0.rules
2025-10-07 09:45:41,214 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,214 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,214 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,215 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ls3u2fvg.rules
2025-10-07 09:45:41,238 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0k48zdpl.rules
2025-10-07 09:45:41,241 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,247 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,247 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,254 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,254 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,260 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,269 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,270 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,273 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,274 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,276 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,275 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0fg56lbk.rules
2025-10-07 09:45:41,275 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,276 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,275 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,289 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ylj34p47.rules
2025-10-07 09:45:41,290 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,296 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-73d7pr60.rules
2025-10-07 09:45:41,301 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1tiln68q.rules
2025-10-07 09:45:41,310 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hxrns26y.rules
2025-10-07 09:45:41,310 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,319 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,330 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,343 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,358 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,365 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,383 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-7g5v40zt.rules
2025-10-07 09:45:41,374 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,379 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,375 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,394 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,394 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,394 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,397 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,401 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,398 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,401 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,400 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-l8u1xpu8.rules
2025-10-07 09:45:41,401 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-29ymcz1v.rules
2025-10-07 09:45:41,401 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,398 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,400 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,420 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,419 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,411 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-xn2zwef6.rules
2025-10-07 09:45:41,420 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_ih2cdxp.rules
2025-10-07 09:45:41,433 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2rj2ymt3.rules
2025-10-07 09:45:41,434 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,434 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,469 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,469 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2r6v309w.rules
2025-10-07 09:45:41,476 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,476 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,477 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,484 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,489 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,489 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,501 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,502 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,502 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-g00pu9rv.rules
2025-10-07 09:45:41,503 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,508 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,508 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,516 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,508 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,515 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,517 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-8maml48z.rules
2025-10-07 09:45:41,508 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-yjtcvt70.rules
2025-10-07 09:45:41,517 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,527 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-lcferu26.rules
2025-10-07 09:45:41,541 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-oq4r4pog.rules
2025-10-07 09:45:41,541 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,552 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-c1ol55p8.rules
2025-10-07 09:45:41,557 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,560 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,581 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,582 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,581 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,596 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-sfqc8lyw.rules
2025-10-07 09:45:41,606 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,607 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,607 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,608 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,612 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,608 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,612 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,612 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,613 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0qbm209v.rules
2025-10-07 09:45:41,612 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,612 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3to7ip7t.rules
2025-10-07 09:45:41,608 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-wayulura.rules
2025-10-07 09:45:41,632 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,645 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-yhta2wgd.rules
2025-10-07 09:45:41,664 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,668 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,696 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,696 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,694 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,697 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-r207z5vs.rules
2025-10-07 09:45:41,670 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,703 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-j2zzy41a.rules
2025-10-07 09:45:41,719 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,720 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,720 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,720 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,727 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,738 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,743 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,743 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,743 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,743 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,747 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,750 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,750 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,750 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,750 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,751 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,752 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-vq7l3978.rules
2025-10-07 09:45:41,752 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,752 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-l32zanhl.rules
2025-10-07 09:45:41,752 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-x5dvw998.rules
2025-10-07 09:45:41,752 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_ta3lp41.rules
2025-10-07 09:45:41,767 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-n7a3kynz.rules
2025-10-07 09:45:41,776 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-pcozjyt0.rules
2025-10-07 09:45:41,805 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,805 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,809 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,815 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,843 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,845 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,846 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,853 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,849 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,854 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,850 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,855 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,852 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,852 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,856 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,856 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-t84ajn97.rules
2025-10-07 09:45:41,856 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_iz0hv15.rules
2025-10-07 09:45:41,873 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-jue3qfds.rules
2025-10-07 09:45:41,874 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-70cba25d.rules
2025-10-07 09:45:41,888 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,895 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,895 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-89jkvmv_.rules
2025-10-07 09:45:41,904 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,916 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,919 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,937 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,937 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,937 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,947 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,947 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hpychc05.rules
2025-10-07 09:45:41,948 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,959 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,952 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,952 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,950 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:41,972 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:41,972 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-icdnrmx0.rules
2025-10-07 09:45:41,973 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hbfhf8tb.rules
2025-10-07 09:45:41,973 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-q3stzjny.rules
2025-10-07 09:45:41,972 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,973 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,987 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-l4p2p1e6.rules
2025-10-07 09:45:41,988 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:41,990 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,003 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,010 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,018 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,019 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,019 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,024 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,028 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,031 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,035 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,031 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,036 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,036 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-xaisghxs.rules
2025-10-07 09:45:42,036 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0k_33s0t.rules
2025-10-07 09:45:42,036 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5sy1un_o.rules
2025-10-07 09:45:42,037 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0mni0opy.rules
2025-10-07 09:45:42,037 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_muxxc8y.rules
2025-10-07 09:45:42,100 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,113 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,141 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,123 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,130 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,136 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,137 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,141 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,141 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,123 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,144 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,146 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,147 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,149 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,149 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,150 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,150 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,150 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,150 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-v68bjv1z.rules
2025-10-07 09:45:42,150 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,151 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,151 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,152 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9h_s5mpa.rules
2025-10-07 09:45:42,157 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-12ynv7fd.rules
2025-10-07 09:45:42,158 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-138_edh7.rules
2025-10-07 09:45:42,165 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-laimjgoe.rules
2025-10-07 09:45:42,170 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-u3ti8w_2.rules
2025-10-07 09:45:42,188 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-b0ahhfxw.rules
2025-10-07 09:45:42,227 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,244 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,247 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,251 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,271 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,272 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,272 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-7qx5qggv.rules
2025-10-07 09:45:42,257 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-yjlp13kz.rules
2025-10-07 09:45:42,259 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,280 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,269 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,307 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,308 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,297 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,309 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,310 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2ltu4mr9.rules
2025-10-07 09:45:42,309 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-uuz1587k.rules
2025-10-07 09:45:42,285 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,328 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,328 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,329 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-vlxumr44.rules
2025-10-07 09:45:42,308 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,367 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,361 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,366 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,378 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,378 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,379 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,379 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,378 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4dtr6wv0.rules
2025-10-07 09:45:42,377 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,379 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,388 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-c73pwqx_.rules
2025-10-07 09:45:42,389 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,394 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,411 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,418 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,413 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,422 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,423 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,396 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,426 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,426 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,427 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ssxz7ta2.rules
2025-10-07 09:45:42,418 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-dy02ci3x.rules
2025-10-07 09:45:42,422 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5m3fy1cz.rules
2025-10-07 09:45:42,444 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,482 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,482 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,483 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-r_cfcnnc.rules
2025-10-07 09:45:42,455 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-52kk32jp.rules
2025-10-07 09:45:42,500 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,478 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-joyybr8g.rules
2025-10-07 09:45:42,513 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,514 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,536 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,536 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,536 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,537 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_aui6k17.rules
2025-10-07 09:45:42,549 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,549 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,549 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,550 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-qgyf8tta.rules
2025-10-07 09:45:42,559 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,559 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,559 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,559 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_6y1gzo_.rules
2025-10-07 09:45:42,579 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ygbriln6.rules
2025-10-07 09:45:42,709 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,710 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,710 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,710 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-026qej9o.rules
2025-10-07 09:45:42,741 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,741 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,741 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,741 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-kw0td7_q.rules
2025-10-07 09:45:42,798 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,798 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,798 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,798 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-o43u5td_.rules
2025-10-07 09:45:42,814 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,814 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,814 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,815 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-n67mqxjn.rules
2025-10-07 09:45:42,822 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,822 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,822 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,823 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4udu7u9h.rules
2025-10-07 09:45:42,832 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,832 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,832 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,834 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-zeikadto.rules
2025-10-07 09:45:42,881 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,882 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,882 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,882 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,882 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,882 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,883 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-wv20a9bz.rules
2025-10-07 09:45:42,890 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fi_4f8n5.rules
2025-10-07 09:45:42,900 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,900 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,900 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,903 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-wecarxch.rules
2025-10-07 09:45:42,904 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,911 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,905 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,918 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,918 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,917 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,925 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-tt9hipnl.rules
2025-10-07 09:45:42,918 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,941 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,941 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,942 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-v8vwer7i.rules
2025-10-07 09:45:42,951 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-d6d2mtgo.rules
2025-10-07 09:45:42,958 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:42,963 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:42,963 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:42,965 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-a7lk8ol8.rules
2025-10-07 09:45:43,032 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,032 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,032 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,033 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1q68r2qq.rules
2025-10-07 09:45:43,044 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,045 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,045 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,048 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1zy1m_u0.rules
2025-10-07 09:45:43,088 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,089 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,089 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,090 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-g3lhrdp_.rules
2025-10-07 09:45:43,096 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,096 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,097 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,102 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ha_2bqrw.rules
2025-10-07 09:45:43,119 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,119 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,119 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,127 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ix6xa5cm.rules
2025-10-07 09:45:43,135 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,136 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,136 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,147 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,147 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,147 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,148 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,148 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,148 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,151 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-vp5g1ah8.rules
2025-10-07 09:45:43,152 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,159 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,159 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,163 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-nndkvkfd.rules
2025-10-07 09:45:43,165 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,165 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,166 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-8uzk47v4.rules
2025-10-07 09:45:43,175 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,176 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,177 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,181 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_0e5u02t.rules
2025-10-07 09:45:43,182 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,212 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,212 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,199 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,205 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,183 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,199 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,220 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,230 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-v983fgye.rules
2025-10-07 09:45:43,233 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,236 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,239 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fw4cu84r.rules
2025-10-07 09:45:43,240 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,248 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,249 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-cwrof2dh.rules
2025-10-07 09:45:43,250 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,250 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-tdeb9jcz.rules
2025-10-07 09:45:43,250 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,280 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,271 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,271 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,280 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,281 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-vio3r61l.rules
2025-10-07 09:45:43,261 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,289 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,306 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,295 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ajsietf4.rules
2025-10-07 09:45:43,296 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,290 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,336 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,308 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5xpc_r0g.rules
2025-10-07 09:45:43,335 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,321 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ftm9g29f.rules
2025-10-07 09:45:43,338 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-80h6y3cj.rules
2025-10-07 09:45:43,361 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,361 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,371 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,368 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,373 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,373 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,370 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,380 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-e8gjt175.rules
2025-10-07 09:45:43,382 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,397 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,397 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,407 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1iftqxw1.rules
2025-10-07 09:45:43,388 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-o98q2z6_.rules
2025-10-07 09:45:43,370 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-yuhijtpt.rules
2025-10-07 09:45:43,382 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,420 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,473 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,473 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,436 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,486 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,486 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,486 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-dk2x4r3v.rules
2025-10-07 09:45:43,468 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,521 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,521 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,521 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-c990k539.rules
2025-10-07 09:45:43,460 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,542 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0yq4dh97.rules
2025-10-07 09:45:43,468 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,552 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,552 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,554 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-odj7g7sm.rules
2025-10-07 09:45:43,513 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,580 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,580 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,581 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-j27v2408.rules
2025-10-07 09:45:43,565 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,607 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,607 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,608 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-sosw9u92.rules
2025-10-07 09:45:43,504 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,476 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5zv83001.rules
2025-10-07 09:45:43,602 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,621 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,618 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,621 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,619 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,635 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,642 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,643 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,643 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,644 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,644 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-efphci_7.rules
2025-10-07 09:45:43,644 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,644 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,644 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,645 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-w3qydf7g.rules
2025-10-07 09:45:43,651 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,651 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,672 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-epuwwhe2.rules
2025-10-07 09:45:43,682 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,682 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ah_wdlbg.rules
2025-10-07 09:45:43,688 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_i7g0wam.rules
2025-10-07 09:45:43,699 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,699 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,724 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,725 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,732 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,732 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,738 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,742 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,742 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,743 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,743 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-d3h37qk8.rules
2025-10-07 09:45:43,743 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,746 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,747 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,747 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,748 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,757 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,757 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-7annqss6.rules
2025-10-07 09:45:43,757 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,757 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,764 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,772 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-l6xaaepm.rules
2025-10-07 09:45:43,772 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-54tco1w0.rules
2025-10-07 09:45:43,778 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ilxkhwoq.rules
2025-10-07 09:45:43,786 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-519mb611.rules
2025-10-07 09:45:43,786 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-k11curpp.rules
2025-10-07 09:45:43,811 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,816 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,841 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,864 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,869 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,869 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,871 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,871 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,869 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,869 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,872 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,869 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,870 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,873 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,872 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,873 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-s4le9ip6.rules
2025-10-07 09:45:43,873 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-qxhoofe6.rules
2025-10-07 09:45:43,874 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-v27omctx.rules
2025-10-07 09:45:43,881 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-jfrz257o.rules
2025-10-07 09:45:43,895 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-aku_bas5.rules
2025-10-07 09:45:43,905 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,942 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,947 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,953 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,966 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,966 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,966 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,975 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,976 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,979 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,982 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,985 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:43,985 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,985 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,985 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,985 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,986 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,986 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:43,986 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,987 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-bphc5kn6.rules
2025-10-07 09:45:43,987 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,988 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:43,988 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-l84j3xpa.rules
2025-10-07 09:45:43,988 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4moqjufa.rules
2025-10-07 09:45:43,988 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ij4cl196.rules
2025-10-07 09:45:44,000 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,000 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-aat9w12r.rules
2025-10-07 09:45:44,015 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-l6pc6nau.rules
2025-10-07 09:45:44,027 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-z5bjctnw.rules
2025-10-07 09:45:44,027 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,072 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,072 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,078 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,078 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,081 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,082 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,082 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,093 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,094 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,094 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,095 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,095 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,095 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,095 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-xe6q3frd.rules
2025-10-07 09:45:44,096 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-84n84hva.rules
2025-10-07 09:45:44,096 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-twekil2m.rules
2025-10-07 09:45:44,119 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-7xkreqdy.rules
2025-10-07 09:45:44,120 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,130 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-avdmcd2c.rules
2025-10-07 09:45:44,130 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,154 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,171 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,171 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,171 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,172 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-38fxdgg6.rules
2025-10-07 09:45:44,181 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-jkcsz67m.rules
2025-10-07 09:45:44,213 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,213 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,213 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,215 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,215 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,215 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,221 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4m9oemiy.rules
2025-10-07 09:45:44,238 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,238 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,238 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,238 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,239 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ndve1ezl.rules
2025-10-07 09:45:44,239 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,239 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,250 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,251 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,255 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-akvek47m.rules
2025-10-07 09:45:44,256 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,277 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-pxii37rq.rules
2025-10-07 09:45:44,289 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,289 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-cnhg142v.rules
2025-10-07 09:45:44,289 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,295 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,295 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,306 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,315 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,319 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-nvqzqux_.rules
2025-10-07 09:45:44,321 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hgdds7cz.rules
2025-10-07 09:45:44,338 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,352 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,352 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,345 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,352 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,353 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,352 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,353 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,353 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,354 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-y8hkngpv.rules
2025-10-07 09:45:44,354 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-uhzeut9j.rules
2025-10-07 09:45:44,354 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-j7t7flo6.rules
2025-10-07 09:45:44,367 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,395 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,395 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,396 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,400 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,401 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,403 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,410 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-qg5_0atc.rules
2025-10-07 09:45:44,412 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,412 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,416 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-k2__zsnr.rules
2025-10-07 09:45:44,430 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,430 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,439 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,443 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,473 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,444 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,469 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,477 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,470 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,477 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-m6g3zqli.rules
2025-10-07 09:45:44,456 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,478 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-s5it68xh.rules
2025-10-07 09:45:44,478 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-wj_4ixs8.rules
2025-10-07 09:45:44,478 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,485 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,493 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,521 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,522 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,529 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,530 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,530 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-vp5nvxkm.rules
2025-10-07 09:45:44,530 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-urmv92k3.rules
2025-10-07 09:45:44,531 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,534 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,538 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,539 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,556 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,561 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,562 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,568 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,572 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-qrdlr89g.rules
2025-10-07 09:45:44,571 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9hx04lmy.rules
2025-10-07 09:45:44,571 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,588 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,589 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,589 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,589 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hp3ngiu9.rules
2025-10-07 09:45:44,590 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0utvf94b.rules
2025-10-07 09:45:44,590 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,616 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,625 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ng6go9ad.rules
2025-10-07 09:45:44,594 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,645 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,646 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,659 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,659 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,594 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-eadfy_yy.rules
2025-10-07 09:45:44,654 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,660 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-j0cwkpng.rules
2025-10-07 09:45:44,660 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-y3625d_6.rules
2025-10-07 09:45:44,666 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,667 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,700 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,700 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,714 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,714 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,713 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,722 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,723 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_43pzz2a.rules
2025-10-07 09:45:44,706 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,720 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-befi0k5e.rules
2025-10-07 09:45:44,730 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,712 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,743 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,744 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,747 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,748 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,767 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,768 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,768 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-zn60iq85.rules
2025-10-07 09:45:44,768 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-19yh5_u_.rules
2025-10-07 09:45:44,768 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,771 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,772 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,773 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,788 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,793 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,801 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,803 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-iics0s4s.rules
2025-10-07 09:45:44,801 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-htqwcc3e.rules
2025-10-07 09:45:44,802 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-v1x681n6.rules
2025-10-07 09:45:44,802 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,816 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,822 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,824 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,832 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-otf55c2m.rules
2025-10-07 09:45:44,833 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,834 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,852 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,837 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,853 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,853 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-cdxffiqk.rules
2025-10-07 09:45:44,841 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,872 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,873 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ziyq05th.rules
2025-10-07 09:45:44,859 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9pmq5j8r.rules
2025-10-07 09:45:44,861 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-bghhwlyz.rules
2025-10-07 09:45:44,895 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,926 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,927 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,920 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,929 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,929 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,907 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,934 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,935 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,933 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,937 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,937 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,937 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-vc7qgi2u.rules
2025-10-07 09:45:44,936 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-zlcx9hng.rules
2025-10-07 09:45:44,937 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-dglsepng.rules
2025-10-07 09:45:44,930 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fu2gqzli.rules
2025-10-07 09:45:44,981 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:44,986 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:44,986 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:44,987 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4h0tharz.rules
2025-10-07 09:45:45,010 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,019 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,020 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,010 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,025 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-i4vgauwa.rules
2025-10-07 09:45:45,025 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,032 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,039 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-smakq0rp.rules
2025-10-07 09:45:45,100 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,100 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,100 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,102 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-27cn7cfr.rules
2025-10-07 09:45:45,109 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,112 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,112 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,113 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,113 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,113 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,122 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-cgplsycm.rules
2025-10-07 09:45:45,132 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1mihu9r1.rules
2025-10-07 09:45:45,168 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,168 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,169 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,169 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,169 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,173 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,174 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,177 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,177 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,177 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-8l7ottjd.rules
2025-10-07 09:45:45,178 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1pzxlepj.rules
2025-10-07 09:45:45,189 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-yrbjb7x_.rules
2025-10-07 09:45:45,200 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,201 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,205 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,206 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,217 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,207 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,215 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,216 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,219 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,211 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,218 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,217 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,219 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,219 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-xq1gp9qd.rules
2025-10-07 09:45:45,219 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-pux6rpip.rules
2025-10-07 09:45:45,219 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,219 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,220 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,232 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,246 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,246 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-jt_bfybv.rules
2025-10-07 09:45:45,256 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-g2ir4tk6.rules
2025-10-07 09:45:45,262 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,269 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,269 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,268 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-y6lixvl5.rules
2025-10-07 09:45:45,282 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0pc_y3qy.rules
2025-10-07 09:45:45,282 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,299 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1ph285_c.rules
2025-10-07 09:45:45,299 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,321 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,322 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,307 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,322 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,332 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-pg9152fu.rules
2025-10-07 09:45:45,332 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,343 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,349 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,352 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,352 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,353 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,360 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,365 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3qziq0mk.rules
2025-10-07 09:45:45,365 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,376 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,376 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-vqj4a5cx.rules
2025-10-07 09:45:45,383 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,383 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3glf2fd1.rules
2025-10-07 09:45:45,388 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,398 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,405 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0za8e04k.rules
2025-10-07 09:45:45,418 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,429 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,429 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,441 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,461 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,489 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,489 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,474 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,483 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,484 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,488 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,490 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,474 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,489 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-sop9vhiu.rules
2025-10-07 09:45:45,465 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,489 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,496 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,490 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ojm6f73e.rules
2025-10-07 09:45:45,489 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,490 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,490 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-rlq2x6yk.rules
2025-10-07 09:45:45,490 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,496 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_qlj7jpp.rules
2025-10-07 09:45:45,489 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,505 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,508 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,509 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-a2nyswl0.rules
2025-10-07 09:45:45,515 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,545 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,550 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-br3rob6a.rules
2025-10-07 09:45:45,550 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,564 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ua42y3fh.rules
2025-10-07 09:45:45,567 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,580 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-wdan6ci_.rules
2025-10-07 09:45:45,588 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,593 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-khvsscq6.rules
2025-10-07 09:45:45,609 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,610 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,610 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,623 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,635 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,657 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,657 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,663 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,663 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,667 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,668 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5pxl6h_x.rules
2025-10-07 09:45:45,668 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,668 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,668 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,669 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,669 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,669 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,676 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,676 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5qc655c0.rules
2025-10-07 09:45:45,680 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,691 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-gwxgmn3v.rules
2025-10-07 09:45:45,706 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5463zxzp.rules
2025-10-07 09:45:45,712 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,713 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,719 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,719 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-s8c3srx2.rules
2025-10-07 09:45:45,719 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-s40f7dcz.rules
2025-10-07 09:45:45,720 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-__f96lzy.rules
2025-10-07 09:45:45,722 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,752 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,727 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,761 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,724 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,763 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,770 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ahfaw0t6.rules
2025-10-07 09:45:45,770 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,773 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,776 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,776 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,786 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,776 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,785 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,786 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,791 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-k3p3jfc2.rules
2025-10-07 09:45:45,790 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,777 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-uvwtli6d.rules
2025-10-07 09:45:45,793 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2utah4rb.rules
2025-10-07 09:45:45,818 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fzzqzjh2.rules
2025-10-07 09:45:45,825 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-gkiy6flq.rules
2025-10-07 09:45:45,837 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,844 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,850 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,850 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,853 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,883 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,883 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,884 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-q0gd7bcf.rules
2025-10-07 09:45:45,859 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,889 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,874 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,883 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,896 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,896 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,882 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4kg9spw8.rules
2025-10-07 09:45:45,890 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,905 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,905 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,897 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-powobn8f.rules
2025-10-07 09:45:45,895 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,898 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-lwl7k34z.rules
2025-10-07 09:45:45,917 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-52qumzud.rules
2025-10-07 09:45:45,924 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,925 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,971 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:45,972 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:45,970 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0538rioj.rules
2025-10-07 09:45:45,974 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-qb4u6t6f.rules
2025-10-07 09:45:45,975 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,010 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,010 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,017 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,023 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,023 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,024 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:45,992 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,023 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,024 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,026 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,026 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,029 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-m1sk3nzp.rules
2025-10-07 09:45:46,030 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,031 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,035 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,035 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-vb04_p5u.rules
2025-10-07 09:45:46,035 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,057 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-xeq9g_15.rules
2025-10-07 09:45:46,043 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,043 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,080 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5ufy3w47.rules
2025-10-07 09:45:46,087 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,088 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-xnylbjur.rules
2025-10-07 09:45:46,096 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,096 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,096 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ya0a7lzm.rules
2025-10-07 09:45:46,102 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,108 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,108 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,110 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,110 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,136 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-z8kr70ry.rules
2025-10-07 09:45:46,149 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,160 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,160 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,168 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,174 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,177 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,183 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,184 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,184 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-xkz85um9.rules
2025-10-07 09:45:46,184 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,185 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,185 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,185 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,185 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,186 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-o9c2q2cu.rules
2025-10-07 09:45:46,197 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,197 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,197 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,197 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,197 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-v2amb9z5.rules
2025-10-07 09:45:46,197 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,205 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,206 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-y8zqwicj.rules
2025-10-07 09:45:46,206 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,218 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ul31vvsz.rules
2025-10-07 09:45:46,226 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,228 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-r99bv3ad.rules
2025-10-07 09:45:46,229 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,229 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hrr1oi2s.rules
2025-10-07 09:45:46,260 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,281 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-luvyjvpv.rules
2025-10-07 09:45:46,286 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,300 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,301 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,301 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,306 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,307 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,309 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-19hu1x0z.rules
2025-10-07 09:45:46,311 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,312 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,332 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,315 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,331 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,335 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-pbzkzhm0.rules
2025-10-07 09:45:46,315 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,335 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,336 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-auaqpqvw.rules
2025-10-07 09:45:46,336 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,353 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-yzhj3zu8.rules
2025-10-07 09:45:46,367 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0pjle4vl.rules
2025-10-07 09:45:46,383 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,383 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,394 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,401 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,404 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-58gc7vbv.rules
2025-10-07 09:45:46,387 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,430 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,412 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,433 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,433 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,431 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_zfe4c7n.rules
2025-10-07 09:45:46,434 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-cauh03tn.rules
2025-10-07 09:45:46,388 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-v2x0orkg.rules
2025-10-07 09:45:46,435 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,450 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,456 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,479 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,489 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,479 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,480 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,494 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,485 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,495 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,479 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,494 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,496 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,494 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-zuf9xzxb.rules
2025-10-07 09:45:46,496 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,496 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-nsczfs7v.rules
2025-10-07 09:45:46,495 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-mzoe2483.rules
2025-10-07 09:45:46,509 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,511 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-g2y486sx.rules
2025-10-07 09:45:46,530 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,532 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,567 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,567 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,553 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,561 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-19_gy83b.rules
2025-10-07 09:45:46,561 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,556 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,581 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,581 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,579 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,570 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-b4ung4ly.rules
2025-10-07 09:45:46,592 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9ig41f6w.rules
2025-10-07 09:45:46,571 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,594 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,595 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-u1kjfmlt.rules
2025-10-07 09:45:46,613 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,613 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,614 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,619 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,636 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,636 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,637 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,637 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,637 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,639 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,637 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-6ki5yhi9.rules
2025-10-07 09:45:46,638 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-rjdda7ie.rules
2025-10-07 09:45:46,637 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,640 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,639 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-blmp517b.rules
2025-10-07 09:45:46,640 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hsf8kycc.rules
2025-10-07 09:45:46,672 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,672 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,675 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3yz_yzp3.rules
2025-10-07 09:45:46,676 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,696 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,696 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,697 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,697 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,709 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,709 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,697 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9dwb3in9.rules
2025-10-07 09:45:46,712 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-h2w84lf4.rules
2025-10-07 09:45:46,743 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,745 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,745 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,743 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-axp03rum.rules
2025-10-07 09:45:46,762 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,762 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,762 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,768 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-t5qizzbz.rules
2025-10-07 09:45:46,769 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,791 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,770 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9s_j6bir.rules
2025-10-07 09:45:46,769 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,791 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,813 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,813 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,825 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,835 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,832 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,834 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,836 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,837 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-5l1sbihk.rules
2025-10-07 09:45:46,827 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,839 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,840 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,841 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-pnba3727.rules
2025-10-07 09:45:46,842 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,852 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,852 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-51aa4syk.rules
2025-10-07 09:45:46,852 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,861 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,863 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fvn4y9g5.rules
2025-10-07 09:45:46,863 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,875 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,875 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,875 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,887 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2frmml6g.rules
2025-10-07 09:45:46,888 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,889 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fg75ufws.rules
2025-10-07 09:45:46,893 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,894 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,902 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,905 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,918 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,938 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-y2vobw3j.rules
2025-10-07 09:45:46,943 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-es5symti.rules
2025-10-07 09:45:46,942 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,939 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,956 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:46,963 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,960 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:46,960 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:46,969 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2dcq3r2_.rules
2025-10-07 09:45:46,960 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-g88i2r_k.rules
2025-10-07 09:45:46,967 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1qfgncld.rules
2025-10-07 09:45:46,965 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,011 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,023 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,023 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,023 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,024 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-yiqr5miy.rules
2025-10-07 09:45:47,022 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,047 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,050 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,034 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,054 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,059 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,065 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,060 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-glscrk14.rules
2025-10-07 09:45:47,063 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,060 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,065 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,066 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-32odlx_b.rules
2025-10-07 09:45:47,069 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,069 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,084 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,085 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,099 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,099 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9ge3__oh.rules
2025-10-07 09:45:47,103 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,104 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,105 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-avgbtnt7.rules
2025-10-07 09:45:47,105 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,105 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-r96nd6y6.rules
2025-10-07 09:45:47,107 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,114 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,116 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,117 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,129 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,147 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,150 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,162 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,164 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,163 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-lf_jpw8l.rules
2025-10-07 09:45:47,163 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,165 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-i_1h605g.rules
2025-10-07 09:45:47,166 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-wi4ewpzj.rules
2025-10-07 09:45:47,173 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,173 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-7i7xo9jk.rules
2025-10-07 09:45:47,176 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,177 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fvo4jemf.rules
2025-10-07 09:45:47,190 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,201 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,235 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,235 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,216 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,235 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,243 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,245 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-cp7rpwwe.rules
2025-10-07 09:45:47,237 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-57om91l5.rules
2025-10-07 09:45:47,241 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3wsfgcv9.rules
2025-10-07 09:45:47,243 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,269 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,219 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,275 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,286 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,280 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,288 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,289 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,286 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,284 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,290 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,294 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fez4dlf4.rules
2025-10-07 09:45:47,295 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ioqy3728.rules
2025-10-07 09:45:47,326 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-wjqxae7u.rules
2025-10-07 09:45:47,326 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fg3enox3.rules
2025-10-07 09:45:47,337 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,349 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,378 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,383 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,384 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,384 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,387 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,389 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,390 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,390 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,397 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,396 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,397 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,397 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,394 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,398 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,398 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-b_l8yzjq.rules
2025-10-07 09:45:47,398 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,398 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,398 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-i6r0u_ke.rules
2025-10-07 09:45:47,398 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,399 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ce7597l_.rules
2025-10-07 09:45:47,412 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-yke6aoyf.rules
2025-10-07 09:45:47,412 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,412 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,412 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2rq31f_c.rules
2025-10-07 09:45:47,446 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,447 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-rsh7kq2h.rules
2025-10-07 09:45:47,459 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,482 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,461 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,464 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,587 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,587 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,587 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,588 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,588 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,588 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,588 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,588 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-u7v4k3bc.rules
2025-10-07 09:45:47,587 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,481 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,588 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-uychrej4.rules
2025-10-07 09:45:47,584 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,587 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,588 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-dux5fkyn.rules
2025-10-07 09:45:47,589 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,591 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,591 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-rpb4bkrv.rules
2025-10-07 09:45:47,591 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,599 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,601 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,611 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,613 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,621 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,632 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,636 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,636 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-vtwksl3h.rules
2025-10-07 09:45:47,641 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,643 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-u77_tz5o.rules
2025-10-07 09:45:47,644 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0h_qu2st.rules
2025-10-07 09:45:47,650 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-37nphhw7.rules
2025-10-07 09:45:47,656 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_pzo0hbx.rules
2025-10-07 09:45:47,681 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ymtl_eql.rules
2025-10-07 09:45:47,695 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,695 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,700 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,719 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,719 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,729 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,736 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,743 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,740 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,741 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,736 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,747 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-nqeoc1z4.rules
2025-10-07 09:45:47,748 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-m7rhp6fv.rules
2025-10-07 09:45:47,748 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-bpiunzoo.rules
2025-10-07 09:45:47,748 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,749 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,784 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,782 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:47,795 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:47,797 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,796 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-uej6aruu.rules
2025-10-07 09:45:47,776 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:47,791 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,005 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-xy1f3b5_.rules
2025-10-07 09:45:47,999 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-oatkcvll.rules
2025-10-07 09:45:48,019 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,154 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,161 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-89enoxgu.rules
2025-10-07 09:45:48,164 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,171 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,180 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,187 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,194 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,195 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,195 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,206 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,203 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,206 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,196 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,208 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-yh65zf54.rules
2025-10-07 09:45:48,208 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,208 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-l45dtkrq.rules
2025-10-07 09:45:48,242 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_8orl4gs.rules
2025-10-07 09:45:48,246 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,257 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-l0d1i8rf.rules
2025-10-07 09:45:48,258 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,264 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,283 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-g9bjnvfi.rules
2025-10-07 09:45:48,440 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,440 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,440 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,441 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-znrrt1_c.rules
2025-10-07 09:45:48,449 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,454 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,458 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,461 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,462 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,462 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,462 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-812uo263.rules
2025-10-07 09:45:48,476 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-z256m9i8.rules
2025-10-07 09:45:48,477 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,487 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,493 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,494 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,494 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,497 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,500 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-edgx93l0.rules
2025-10-07 09:45:48,501 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-89qs9b7o.rules
2025-10-07 09:45:48,545 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,545 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,551 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,551 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,549 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,559 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,559 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-h5owbqcp.rules
2025-10-07 09:45:48,560 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-j45yzmtk.rules
2025-10-07 09:45:48,591 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,591 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,605 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,605 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,605 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,610 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4gseh0tt.rules
2025-10-07 09:45:48,611 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,613 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,633 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,635 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,639 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-y8ks7zzv.rules
2025-10-07 09:45:48,646 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,646 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,646 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,653 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-s5vvk_hv.rules
2025-10-07 09:45:48,659 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-16ahdzor.rules
2025-10-07 09:45:48,677 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,677 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,685 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,692 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,692 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,696 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,701 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,702 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,702 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,702 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,704 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,704 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,705 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-d7meja4_.rules
2025-10-07 09:45:48,706 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-r9rkw8ci.rules
2025-10-07 09:45:48,706 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-t553lj72.rules
2025-10-07 09:45:48,708 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-04a225xo.rules
2025-10-07 09:45:48,756 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,756 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,765 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,768 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,774 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,781 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,780 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,781 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,781 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,781 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,774 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,783 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,783 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-dvj_ezly.rules
2025-10-07 09:45:48,783 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-tfdyeisu.rules
2025-10-07 09:45:48,799 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,809 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,824 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,825 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,841 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,847 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,846 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,825 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-e2i33igg.rules
2025-10-07 09:45:48,841 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-o8e9ciev.rules
2025-10-07 09:45:48,848 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,852 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,853 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9oxncajv.rules
2025-10-07 09:45:48,867 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-imcfv3ob.rules
2025-10-07 09:45:48,881 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,898 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,883 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,896 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,905 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,905 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,905 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,882 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,910 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,913 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-mwgcaae2.rules
2025-10-07 09:45:48,913 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,914 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,914 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,914 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-pzx75pie.rules
2025-10-07 09:45:48,914 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,926 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,929 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:48,937 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-mirrefpf.rules
2025-10-07 09:45:48,941 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-s8wz6iss.rules
2025-10-07 09:45:48,942 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-pgse9zwq.rules
2025-10-07 09:45:48,950 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:48,950 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-im_o_avt.rules
2025-10-07 09:45:48,975 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:48,975 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,026 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,026 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,039 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,039 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,026 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,034 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,039 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,040 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,029 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,026 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,042 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,042 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,043 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,044 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-cd_aqaf9.rules
2025-10-07 09:45:49,043 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-wz0bq372.rules
2025-10-07 09:45:49,043 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,055 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,060 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-oa47g273.rules
2025-10-07 09:45:49,060 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-u7lry07e.rules
2025-10-07 09:45:49,067 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,067 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-u72qdf8g.rules
2025-10-07 09:45:49,081 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-piyrkl6q.rules
2025-10-07 09:45:49,083 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,108 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,098 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,097 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,131 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,133 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,140 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,147 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,144 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,149 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,149 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,149 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_v1_ttal.rules
2025-10-07 09:45:49,146 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ep154ekv.rules
2025-10-07 09:45:49,149 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-t6x5ltqk.rules
2025-10-07 09:45:49,145 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,150 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4nkbjv8v.rules
2025-10-07 09:45:49,182 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,192 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,224 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,224 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,213 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,226 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,226 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,225 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,227 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,231 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,214 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,233 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4_u07zci.rules
2025-10-07 09:45:49,234 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-o5abpfhf.rules
2025-10-07 09:45:49,244 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,244 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,244 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-gt6y30_e.rules
2025-10-07 09:45:49,252 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,259 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-kj3blgdq.rules
2025-10-07 09:45:49,259 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,276 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,295 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,295 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,286 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,295 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-tlq6zwtg.rules
2025-10-07 09:45:49,291 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,297 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,296 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,313 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,313 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-eqdmtglt.rules
2025-10-07 09:45:49,332 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,332 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,354 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-_b353e54.rules
2025-10-07 09:45:49,354 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,357 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-frjb0ota.rules
2025-10-07 09:45:49,364 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,366 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,366 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,367 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,386 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,393 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,393 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,395 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,395 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,399 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,400 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,400 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,408 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,409 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,409 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-8ia8rjno.rules
2025-10-07 09:45:49,409 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,409 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,410 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,410 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2hbg0b74.rules
2025-10-07 09:45:49,410 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,410 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3mhzbr4r.rules
2025-10-07 09:45:49,410 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,430 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,430 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2tv4nvun.rules
2025-10-07 09:45:49,448 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-8ieazosp.rules
2025-10-07 09:45:49,450 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-g9i9203w.rules
2025-10-07 09:45:49,450 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,468 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,488 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-cufq0bd0.rules
2025-10-07 09:45:49,507 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,507 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,519 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,520 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,521 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-e_e7zkml.rules
2025-10-07 09:45:49,554 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,565 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,565 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,565 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,567 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,567 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,581 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,576 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,576 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,577 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,581 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,581 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,567 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,582 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,582 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,582 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,583 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-z7w8ntko.rules
2025-10-07 09:45:49,583 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2i7jolpg.rules
2025-10-07 09:45:49,583 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-eu1u_8w5.rules
2025-10-07 09:45:49,584 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ry34zjzs.rules
2025-10-07 09:45:49,584 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-y6jmg59p.rules
2025-10-07 09:45:49,585 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-rj48xn2v.rules
2025-10-07 09:45:49,604 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,608 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-6fmuehnf.rules
2025-10-07 09:45:49,628 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,640 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,691 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,692 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,683 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,683 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,646 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,698 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,683 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,700 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,700 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,700 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-edgush10.rules
2025-10-07 09:45:49,696 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,693 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,711 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,699 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-86wcaljc.rules
2025-10-07 09:45:49,693 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-kjsdn6nl.rules
2025-10-07 09:45:49,712 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3mm8z2cl.rules
2025-10-07 09:45:49,763 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,764 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,764 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,764 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ir_9zig1.rules
2025-10-07 09:45:49,780 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-kh_ngcxb.rules
2025-10-07 09:45:49,794 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,795 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,795 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,798 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2l9__3p4.rules
2025-10-07 09:45:49,803 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,809 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,810 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,809 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,815 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,815 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,815 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3yp780h7.rules
2025-10-07 09:45:49,829 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hsspzzu9.rules
2025-10-07 09:45:49,833 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,841 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,847 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,849 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,850 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,850 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,851 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9u7_zuq1.rules
2025-10-07 09:45:49,851 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-oliytxya.rules
2025-10-07 09:45:49,947 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,947 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,947 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,948 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-tccjxrt8.rules
2025-10-07 09:45:49,966 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,966 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,966 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,967 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-7d4mn0g5.rules
2025-10-07 09:45:49,980 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,980 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,980 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,981 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:49,986 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:49,987 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:49,988 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3yj2xkud.rules
2025-10-07 09:45:49,982 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hwo9_6eh.rules
2025-10-07 09:45:49,982 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,044 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,044 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,029 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,045 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,046 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,045 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-4phs3x6e.rules
2025-10-07 09:45:50,042 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,045 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,046 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,060 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,060 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-jfofv4zm.rules
2025-10-07 09:45:50,060 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,066 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,066 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,067 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,080 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,081 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,085 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,086 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,090 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,094 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,092 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,094 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-2ovzmjqs.rules
2025-10-07 09:45:50,094 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ujpiuks9.rules
2025-10-07 09:45:50,091 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,095 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-3f83hdyb.rules
2025-10-07 09:45:50,101 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-0ak8_923.rules
2025-10-07 09:45:50,114 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-8slaqa2r.rules
2025-10-07 09:45:50,115 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,126 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,126 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,157 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,158 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,163 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,163 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,164 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,176 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,169 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,176 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,174 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,164 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,178 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,175 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-hg1i2zrl.rules
2025-10-07 09:45:50,188 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-inz67s5g.rules
2025-10-07 09:45:50,189 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ioy37vh6.rules
2025-10-07 09:45:50,189 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-bscxn7xm.rules
2025-10-07 09:45:50,190 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-30dq5xaq.rules
2025-10-07 09:45:50,197 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,234 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,240 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,254 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,266 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,266 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,265 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,274 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,275 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,275 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,276 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,276 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-vhwuu389.rules
2025-10-07 09:45:50,276 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,284 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ue675m3x.rules
2025-10-07 09:45:50,285 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,285 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,285 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,285 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,291 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-lbnd6x6_.rules
2025-10-07 09:45:50,294 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-fr5zx8in.rules
2025-10-07 09:45:50,294 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,295 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,300 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-kg0758z3.rules
2025-10-07 09:45:50,313 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,324 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,349 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,349 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,349 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-8uegc9m3.rules
2025-10-07 09:45:50,352 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-9t917jlz.rules
2025-10-07 09:45:50,325 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,378 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,411 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,411 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,411 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,411 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,411 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,393 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,405 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,415 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,419 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,419 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-q6ywz7dv.rules
2025-10-07 09:45:50,419 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,419 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,423 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,424 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,424 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-7bg0s4pz.rules
2025-10-07 09:45:50,431 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,436 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,436 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,449 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,452 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-351pazx5.rules
2025-10-07 09:45:50,452 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,453 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-1_xispij.rules
2025-10-07 09:45:50,453 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-ueeuu58v.rules
2025-10-07 09:45:50,457 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,459 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,460 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,471 - semgrep.config_resolver - DEBUG - Saving rules to /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/semgrep-atbp6b23.rules
2025-10-07 09:45:50,484 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,518 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,519 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,491 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,495 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,522 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,524 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,525 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,524 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,531 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,532 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,532 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,542 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,542 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,542 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,576 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,576 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,576 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,590 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,590 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,590 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,598 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,598 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,598 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,604 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,604 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,604 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,611 - semgrep.rule_lang - DEBUG - semgrep-core validation response: valid=True
2025-10-07 09:45:50,611 - semgrep.rule_lang - DEBUG - semgrep-core validation succeeded
2025-10-07 09:45:50,611 - semgrep.rule_lang - DEBUG - RPC validation succeeded
2025-10-07 09:45:50,614 - semgrep.config_resolver - DEBUG - loaded 600 configs in 12.618450403213501
2025-10-07 09:45:50,652 - semgrep.run_scan - VERBOSE - running 600 rules from 600 configs
2025-10-07 09:45:50,652 - semgrep.run_scan - VERBOSE - No .semgrepignore found. Using default .semgrepignore rules. See the docs for the list of default ignores: https://semgrep.dev/docs/cli-usage/#ignore-files
2025-10-07 09:45:50,654 - semgrep.run_scan - VERBOSE - Rules:
2025-10-07 09:45:50,654 - semgrep.run_scan - VERBOSE - <SKIPPED DATA (too many entries; use --max-log-list-entries)>
2025-10-07 09:45:50,712 - semgrep.ignores - VERBOSE - Ignoring /Users/roberthaynes/endor/EL2Demo/app/src/main/webapp/resources/js/bootstrap.min.js due to .semgrepignore
2025-10-07 09:45:50,712 - semgrep.ignores - VERBOSE - Ignoring /Users/roberthaynes/endor/EL2Demo/app/src/main/webapp/resources/js/jquery-1.11.2.min.js due to .semgrepignore
2025-10-07 09:45:50,733 - semgrep.ignores - VERBOSE - Ignoring /Users/roberthaynes/endor/EL2Demo/app/src/main/webapp/resources/js/bootstrap.min.js due to .semgrepignore
2025-10-07 09:45:50,733 - semgrep.ignores - VERBOSE - Ignoring /Users/roberthaynes/endor/EL2Demo/app/src/main/webapp/resources/js/jquery-1.11.2.min.js due to .semgrepignore
2025-10-07 09:45:50,751 - semgrep.core_runner - DEBUG - Passing whole rules directly to semgrep_core
2025-10-07 09:45:50,832 - semgrep.core_runner - DEBUG - Running Semgrep engine with command:
2025-10-07 09:45:50,832 - semgrep.core_runner - DEBUG - /Users/roberthaynes/.cache/opengrep/v1.8.3/semgrep/bin/opengrep-core -json -rules /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/tmpb94y0h8s.json -j 4 -targets /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/tmpjzfw403_ -timeout 5 -timeout_threshold 3 -max_memory 0 -max_match_per_file 10000 -fast
2025-10-07 09:45:55,975 - semgrep.core_runner - DEBUG - --- semgrep-core stderr ---
[00.05][[34mINFO[0m]: Executed as: /Users/roberthaynes/.cache/opengrep/v1.8.3/semgrep/bin/opengrep-core -json -rules /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/tmpb94y0h8s.json -j 4 -targets /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/tmpjzfw403_ -timeout 5 -timeout_threshold 3 -max_memory 0 -max_match_per_file 10000 -fast
[00.05][[34mINFO[0m]: Version: 1.8.3
[00.05][[34mINFO[0m]: Parsing rules in /var/folders/s2/y382qgd553n2j43yly4y01hm0000gn/T/tmpb94y0h8s.json
[00.29][[33mWARNING[0m]: Skipping unknown field 'pattern-not' in rule "java-deprecated-cipher-use"
[0m[00.29][[33mWARNING[0m]: Skipping unknown field 'metavariable-regex' in rule "python_exec_rule-linux-command-wildcard-injection"
[0m[00.30][[33mWARNING[0m]: Skipping unknown field 'pattern-not' in rule "vue-xss-unsafe-marked-usage"
[0m[00.30][[33mWARNING[0m]: Skipping unknown field 'pattern-not' in rule "angular-sce-url-trust-bypass"
[0m[00.33][[33mWARNING[0m]: Skipping unknown field 'focus-metavariable' in rule "scala-path-traversal"
[0m[00.36][[33mWARNING[0m]: Skipping unknown field 'pattern-not' in rule "angular-sce-js-trust-bypass"
[0m[00.36][[33mWARNING[0m]: Skipping unknown field 'focus-metavariable' in rule "scala-open-redirect"
[0m[00.36][[33mWARNING[0m]: Skipping unknown field 'focus-metavariable' in rule "js-detect-classic-pg-promise-sql-injection"
[0m[00.37][[33mWARNING[0m]: Skipping unknown field 'metavariable-pattern' in rule "python_ftplib_unencrypted"
[0m[00.37][[33mWARNING[0m]: Skipping unknown field 'focus-metavariable' in rule "python-flask-open-redirect"
[0m[00.37][[33mWARNING[0m]: Skipping unknown field 'metavariable-regex' in rule "python-path-traversal"
[0m[00.38][[33mWARNING[0m]: Skipping unknown field 'pattern-not' in rule "angular-sce-html-trust-bypass"
[0m[00.38][[33mWARNING[0m]: Skipping unknown field 'pattern-not' in rule "java-weak-rsa-key"
[0m[00.40][[33mWARNING[0m]: Skipping unknown field 'pattern-inside' in rule "express-directory-listing-enabled"
[0m[00.40][[33mWARNING[0m]: Skipping unknown field 'pattern-inside-either' in rule "express-directory-listing-enabled"
[0m[00.41][[33mWARNING[0m]: Skipping unknown field 'pattern-not' in rule "angular-sce-trust-bypass"
[0m[00.41][[33mWARNING[0m]: Skipping unknown field 'pattern-not' in rule "angular-sce-css-trust-bypass"
[0m[00.43][[33mWARNING[0m]: Skipping unknown field 'focus-metavariable' in rule "scala-command-injection"
[0m[00.43][[33mWARNING[0m]: Skipping unknown field 'pattern-not' in rule "java-cbc-padding-oracle"
[0m[00.43][[33mWARNING[0m]: Skipping unknown field 'pattern-not' in rule "angular-sce-resource-url-trust-bypass"
[0m[00.43][[34mINFO[0m]: scan: processing 134 files (skipping 0), with 261 rules (skipping 0 )
[00.74][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-spring-dto-sql-injection file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/ResetController.java func: processReset:-1]
[0m[00.74][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-spring-dto-sql-injection file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: showFeed:-1]
[0m[00.81][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-spring-dto-sql-injection file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: getMoreFeed:-1]
[0m[00.89][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-spring-dto-sql-injection file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: showBlab:-1]
[0m[00.99][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-spring-dto-sql-injection file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: showBlabbers:-1]
[0m[01.04][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-cleartext-sensitive-info file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/ResetController.java func: processReset:-1]
[0m[01.24][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-formatted-sql-string file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/ResetController.java func: processReset:-1]
[0m[01.31][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-formatted-sql-string file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: showFeed:-1]
[0m[01.38][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-formatted-sql-string file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: getMoreFeed:-1]
[0m[01.44][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-formatted-sql-string file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: showBlab:-1]
[0m[01.56][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-formatted-sql-string-spring file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/ResetController.java func: processReset:-1]
[0m[01.56][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-formatted-sql-string file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: showBlabbers:-1]
[0m[01.75][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-formatted-sql-string-spring file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: showFeed:-1]
[0m[01.84][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-formatted-sql-string-spring file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: getMoreFeed:-1]
[0m[01.92][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-formatted-sql-string-spring file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: showBlab:-1]
[0m[01.95][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-spring-sql-injection-comprehensive file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/ResetController.java func: processReset:-1]
[0m[02.02][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-formatted-sql-string-spring file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: showBlabbers:-1]
[0m[02.28][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-spring-sql-injection-comprehensive file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: showFeed:-1]
[0m[02.37][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-spring-sql-injection-comprehensive file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: getMoreFeed:-1]
[0m[02.56][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-spring-sql-injection-comprehensive file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/BlabController.java func: showBlabbers:-1]
[0m[03.36][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-spring-dto-sql-injection file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/UserController.java func: processLogin:-1]
[0m[03.91][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-cleartext-sensitive-info file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/UserController.java func: processLogin:-1]
[0m[04.11][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-formatted-sql-string file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/UserController.java func: processLogin:-1]
[0m[04.38][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-formatted-sql-string-spring file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/UserController.java func: processLogin:-1]
[0m[04.74][[33mWARNING[0m]: Fixpoint timeout while performing taint analysis [rule: java-spring-sql-injection-comprehensive file: /Users/roberthaynes/endor/EL2Demo/app/src/main/java/com/veracode/verademo/controller/UserController.java func: processLogin:-1]
[0m--- end semgrep-core stderr ---
2025-10-07 09:45:55,993 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-formatted-sql-string') match_id = c70bd539d8edb09e73c9a337b5f8dd2313163b4f796cff43e160dd754d517b65b26d4ecf2de1d09e87d91f4109ac25fff38973e4f0f133514f0efc9598ad9854_0
2025-10-07 09:45:55,994 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-formatted-sql-string') match_id = 51bf6c6b488752e9952fbfc7002e3529b2e87eefbc6d534deabe3bb800259bed12478c642dafdd1cff8d899bfb474029bea4dd095a91b569bd67267eb3cd07ef_0
2025-10-07 09:45:55,994 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-formatted-sql-string') match_id = 51bf6c6b488752e9952fbfc7002e3529b2e87eefbc6d534deabe3bb800259bed12478c642dafdd1cff8d899bfb474029bea4dd095a91b569bd67267eb3cd07ef_0
2025-10-07 09:45:55,995 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-formatted-sql-string') match_id = 51bf6c6b488752e9952fbfc7002e3529b2e87eefbc6d534deabe3bb800259bed12478c642dafdd1cff8d899bfb474029bea4dd095a91b569bd67267eb3cd07ef_0
2025-10-07 09:45:55,995 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-dto-sql-injection') match_id = 91a336f4e34672b95fde528023fd2043efb73d132751567cf712ab3924c45d2d456925416da471c888f54ad81f23ef1fbd1f8f4e258b680ecafb474f4a051cf8_0
2025-10-07 09:45:55,995 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-dto-sql-injection') match_id = b095a1fa2de8182bdef8fea120071372e4c4131aea496ae920c829a2ba8546d800bbf128dbcb03f854057c8a25ab6c6e0a13e4b21a03b67de05c75b4419a877d_0
2025-10-07 09:45:55,996 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-dto-sql-injection') match_id = b095a1fa2de8182bdef8fea120071372e4c4131aea496ae920c829a2ba8546d800bbf128dbcb03f854057c8a25ab6c6e0a13e4b21a03b67de05c75b4419a877d_0
2025-10-07 09:45:55,996 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-dto-sql-injection') match_id = b095a1fa2de8182bdef8fea120071372e4c4131aea496ae920c829a2ba8546d800bbf128dbcb03f854057c8a25ab6c6e0a13e4b21a03b67de05c75b4419a877d_0
2025-10-07 09:45:55,996 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = e85660fc879b8cfe95afa3392b23a0cdb12f12a04558a091efbd165e0fac5dcf671b0d6eda6fed64cd1a9e1dd63d7e5f59f94dcb699af6f97e19e1d4b65c48f8_0
2025-10-07 09:45:55,997 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 99a3404278afbe87b4314edd719f5e0c6c052f868a53e9dc377de3dfc492bdc3a0fe484f7d72a08deb57692b0b932390a8808f0538dc273e72bbe59a003d4816_0
2025-10-07 09:45:55,997 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 99a3404278afbe87b4314edd719f5e0c6c052f868a53e9dc377de3dfc492bdc3a0fe484f7d72a08deb57692b0b932390a8808f0538dc273e72bbe59a003d4816_0
2025-10-07 09:45:55,997 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 99a3404278afbe87b4314edd719f5e0c6c052f868a53e9dc377de3dfc492bdc3a0fe484f7d72a08deb57692b0b932390a8808f0538dc273e72bbe59a003d4816_0
2025-10-07 09:45:55,998 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-formatted-sql-string') match_id = c70bd539d8edb09e73c9a337b5f8dd2313163b4f796cff43e160dd754d517b65b26d4ecf2de1d09e87d91f4109ac25fff38973e4f0f133514f0efc9598ad9854_0
2025-10-07 09:45:55,998 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-formatted-sql-string') match_id = 51bf6c6b488752e9952fbfc7002e3529b2e87eefbc6d534deabe3bb800259bed12478c642dafdd1cff8d899bfb474029bea4dd095a91b569bd67267eb3cd07ef_0
2025-10-07 09:45:55,998 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-formatted-sql-string') match_id = 51bf6c6b488752e9952fbfc7002e3529b2e87eefbc6d534deabe3bb800259bed12478c642dafdd1cff8d899bfb474029bea4dd095a91b569bd67267eb3cd07ef_0
2025-10-07 09:45:55,998 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-formatted-sql-string') match_id = 51bf6c6b488752e9952fbfc7002e3529b2e87eefbc6d534deabe3bb800259bed12478c642dafdd1cff8d899bfb474029bea4dd095a91b569bd67267eb3cd07ef_1
2025-10-07 09:45:55,999 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-dto-sql-injection') match_id = 91a336f4e34672b95fde528023fd2043efb73d132751567cf712ab3924c45d2d456925416da471c888f54ad81f23ef1fbd1f8f4e258b680ecafb474f4a051cf8_0
2025-10-07 09:45:55,999 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-dto-sql-injection') match_id = b095a1fa2de8182bdef8fea120071372e4c4131aea496ae920c829a2ba8546d800bbf128dbcb03f854057c8a25ab6c6e0a13e4b21a03b67de05c75b4419a877d_0
2025-10-07 09:45:55,999 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-dto-sql-injection') match_id = b095a1fa2de8182bdef8fea120071372e4c4131aea496ae920c829a2ba8546d800bbf128dbcb03f854057c8a25ab6c6e0a13e4b21a03b67de05c75b4419a877d_0
2025-10-07 09:45:56,000 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-dto-sql-injection') match_id = b095a1fa2de8182bdef8fea120071372e4c4131aea496ae920c829a2ba8546d800bbf128dbcb03f854057c8a25ab6c6e0a13e4b21a03b67de05c75b4419a877d_1
2025-10-07 09:45:56,000 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = e85660fc879b8cfe95afa3392b23a0cdb12f12a04558a091efbd165e0fac5dcf671b0d6eda6fed64cd1a9e1dd63d7e5f59f94dcb699af6f97e19e1d4b65c48f8_0
2025-10-07 09:45:56,000 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 99a3404278afbe87b4314edd719f5e0c6c052f868a53e9dc377de3dfc492bdc3a0fe484f7d72a08deb57692b0b932390a8808f0538dc273e72bbe59a003d4816_0
2025-10-07 09:45:56,001 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 99a3404278afbe87b4314edd719f5e0c6c052f868a53e9dc377de3dfc492bdc3a0fe484f7d72a08deb57692b0b932390a8808f0538dc273e72bbe59a003d4816_0
2025-10-07 09:45:56,001 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/IgnoreCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 99a3404278afbe87b4314edd719f5e0c6c052f868a53e9dc377de3dfc492bdc3a0fe484f7d72a08deb57692b0b932390a8808f0538dc273e72bbe59a003d4816_1
2025-10-07 09:45:56,001 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-formatted-sql-string') match_id = 7f3e7157c9b4a98f80f5604d3ea9d22d453806b6a55228d1df580cd1d602f9da246af90eb5b6740dbd2da9ab99a54fb2575c50210c224c1cf8ada0a59417e768_0
2025-10-07 09:45:56,001 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-formatted-sql-string') match_id = 44234f5855d005141b2cbd09bc0aab239139e3daca753d17d25a002c58bdcf3c85eb285d33a191eea66e0c3affdb6d6629109f1ec44a0cff892e8d8f2aba2f28_0
2025-10-07 09:45:56,002 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-formatted-sql-string') match_id = 44234f5855d005141b2cbd09bc0aab239139e3daca753d17d25a002c58bdcf3c85eb285d33a191eea66e0c3affdb6d6629109f1ec44a0cff892e8d8f2aba2f28_0
2025-10-07 09:45:56,002 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-formatted-sql-string') match_id = 44234f5855d005141b2cbd09bc0aab239139e3daca753d17d25a002c58bdcf3c85eb285d33a191eea66e0c3affdb6d6629109f1ec44a0cff892e8d8f2aba2f28_0
2025-10-07 09:45:56,002 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 36cef97b0c0c9c2b788807f2a5ab55ddbd361e9a8fb36a7de661f97c1f47876fe36156937914b43d349dda5544340f56825a0038232a3be0078059e2a058feb2_0
2025-10-07 09:45:56,002 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = ba01aae4757cf3d1c61d11cba258c659c7c754df6c97e7b81e37dc9f2a6f95448409ca6205784821609eccbb0ec3b3817dc3ddcea371eebc94537178025a1a75_0
2025-10-07 09:45:56,003 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = ba01aae4757cf3d1c61d11cba258c659c7c754df6c97e7b81e37dc9f2a6f95448409ca6205784821609eccbb0ec3b3817dc3ddcea371eebc94537178025a1a75_0
2025-10-07 09:45:56,003 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = ba01aae4757cf3d1c61d11cba258c659c7c754df6c97e7b81e37dc9f2a6f95448409ca6205784821609eccbb0ec3b3817dc3ddcea371eebc94537178025a1a75_0
2025-10-07 09:45:56,003 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-dto-sql-injection') match_id = aac02baac40606956553862fb88ac60e07c1444d75a626209ca4bb9e918b54473d3d6ca6964dbf1c005533c5252582673734330dbae5d1c5aa86e15d05f22785_0
2025-10-07 09:45:56,006 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-dto-sql-injection') match_id = 2d1e5c311b513a301f602e1ee10ddb2296b34793a3f12287ea1d4b21bb17210c50b16f5121aa3dcd6e4174b27c8a381840f550a45dec680d05ad07db4ad64bc8_0
2025-10-07 09:45:56,006 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-dto-sql-injection') match_id = 2d1e5c311b513a301f602e1ee10ddb2296b34793a3f12287ea1d4b21bb17210c50b16f5121aa3dcd6e4174b27c8a381840f550a45dec680d05ad07db4ad64bc8_0
2025-10-07 09:45:56,006 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-dto-sql-injection') match_id = 2d1e5c311b513a301f602e1ee10ddb2296b34793a3f12287ea1d4b21bb17210c50b16f5121aa3dcd6e4174b27c8a381840f550a45dec680d05ad07db4ad64bc8_0
2025-10-07 09:45:56,007 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-formatted-sql-string') match_id = 7f3e7157c9b4a98f80f5604d3ea9d22d453806b6a55228d1df580cd1d602f9da246af90eb5b6740dbd2da9ab99a54fb2575c50210c224c1cf8ada0a59417e768_0
2025-10-07 09:45:56,007 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-formatted-sql-string') match_id = 44234f5855d005141b2cbd09bc0aab239139e3daca753d17d25a002c58bdcf3c85eb285d33a191eea66e0c3affdb6d6629109f1ec44a0cff892e8d8f2aba2f28_0
2025-10-07 09:45:56,007 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-formatted-sql-string') match_id = 44234f5855d005141b2cbd09bc0aab239139e3daca753d17d25a002c58bdcf3c85eb285d33a191eea66e0c3affdb6d6629109f1ec44a0cff892e8d8f2aba2f28_0
2025-10-07 09:45:56,008 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-formatted-sql-string') match_id = 44234f5855d005141b2cbd09bc0aab239139e3daca753d17d25a002c58bdcf3c85eb285d33a191eea66e0c3affdb6d6629109f1ec44a0cff892e8d8f2aba2f28_1
2025-10-07 09:45:56,008 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 36cef97b0c0c9c2b788807f2a5ab55ddbd361e9a8fb36a7de661f97c1f47876fe36156937914b43d349dda5544340f56825a0038232a3be0078059e2a058feb2_0
2025-10-07 09:45:56,008 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = ba01aae4757cf3d1c61d11cba258c659c7c754df6c97e7b81e37dc9f2a6f95448409ca6205784821609eccbb0ec3b3817dc3ddcea371eebc94537178025a1a75_0
2025-10-07 09:45:56,008 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = ba01aae4757cf3d1c61d11cba258c659c7c754df6c97e7b81e37dc9f2a6f95448409ca6205784821609eccbb0ec3b3817dc3ddcea371eebc94537178025a1a75_0
2025-10-07 09:45:56,009 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = ba01aae4757cf3d1c61d11cba258c659c7c754df6c97e7b81e37dc9f2a6f95448409ca6205784821609eccbb0ec3b3817dc3ddcea371eebc94537178025a1a75_1
2025-10-07 09:45:56,009 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-dto-sql-injection') match_id = aac02baac40606956553862fb88ac60e07c1444d75a626209ca4bb9e918b54473d3d6ca6964dbf1c005533c5252582673734330dbae5d1c5aa86e15d05f22785_0
2025-10-07 09:45:56,009 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-dto-sql-injection') match_id = 2d1e5c311b513a301f602e1ee10ddb2296b34793a3f12287ea1d4b21bb17210c50b16f5121aa3dcd6e4174b27c8a381840f550a45dec680d05ad07db4ad64bc8_0
2025-10-07 09:45:56,010 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-dto-sql-injection') match_id = 2d1e5c311b513a301f602e1ee10ddb2296b34793a3f12287ea1d4b21bb17210c50b16f5121aa3dcd6e4174b27c8a381840f550a45dec680d05ad07db4ad64bc8_0
2025-10-07 09:45:56,010 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/ListenCommand.java'), 'java-spring-dto-sql-injection') match_id = 2d1e5c311b513a301f602e1ee10ddb2296b34793a3f12287ea1d4b21bb17210c50b16f5121aa3dcd6e4174b27c8a381840f550a45dec680d05ad07db4ad64bc8_1
2025-10-07 09:45:56,010 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-formatted-sql-string') match_id = 05147616da0931f66b50dfdc88987ca109e58a2d2f14dab956044d3488fb58d644d1ecaee694acd919b974f6fe89822650ca1757425418b9441e9794d6d8c117_0
2025-10-07 09:45:56,011 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-formatted-sql-string') match_id = d49392f9f3c42d748f3cfa2ae09055563d70cab1632f641092af3b080aaeb2ff441335bf7472701075fd06064a59629b8c6a104c012920d042df3308c18b5078_0
2025-10-07 09:45:56,011 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-formatted-sql-string') match_id = d49392f9f3c42d748f3cfa2ae09055563d70cab1632f641092af3b080aaeb2ff441335bf7472701075fd06064a59629b8c6a104c012920d042df3308c18b5078_0
2025-10-07 09:45:56,011 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-formatted-sql-string') match_id = d49392f9f3c42d748f3cfa2ae09055563d70cab1632f641092af3b080aaeb2ff441335bf7472701075fd06064a59629b8c6a104c012920d042df3308c18b5078_0
2025-10-07 09:45:56,012 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 275d940e18d3bfac9638c50dffc3626ed1039feb76f5ed0bec70d01b9faa4b5bf52ef90677af1e846dfea89b4246f7e06bfead910f5680f9d9a8961e479d0a20_0
2025-10-07 09:45:56,012 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 755f46e93ed6d93a5a6a2b3d0392688e5e78634f0030b355b0d4b4fa63f355137cd104342df3eb6b079039016c06ba9532b32546d23b20edd37f42a671bccede_0
2025-10-07 09:45:56,012 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 755f46e93ed6d93a5a6a2b3d0392688e5e78634f0030b355b0d4b4fa63f355137cd104342df3eb6b079039016c06ba9532b32546d23b20edd37f42a671bccede_0
2025-10-07 09:45:56,012 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 755f46e93ed6d93a5a6a2b3d0392688e5e78634f0030b355b0d4b4fa63f355137cd104342df3eb6b079039016c06ba9532b32546d23b20edd37f42a671bccede_0
2025-10-07 09:45:56,013 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-dto-sql-injection') match_id = 88fd76873687141a4b342340601a5a0e7576905910f4c8cf29e73e953f7de16f8745036f03d2c970bc46aa106428aefc84897db05472b8e2d61289b5e833627d_0
2025-10-07 09:45:56,013 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-dto-sql-injection') match_id = 805acb52685ecb886778ca03df83bb4c255fca4c437d282bc1be09b512d6fce0c2cb71e04932988213096f26ac8a81f90938966d054dddc5117fc247edb9328b_0
2025-10-07 09:45:56,013 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-dto-sql-injection') match_id = 805acb52685ecb886778ca03df83bb4c255fca4c437d282bc1be09b512d6fce0c2cb71e04932988213096f26ac8a81f90938966d054dddc5117fc247edb9328b_0
2025-10-07 09:45:56,014 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-dto-sql-injection') match_id = 805acb52685ecb886778ca03df83bb4c255fca4c437d282bc1be09b512d6fce0c2cb71e04932988213096f26ac8a81f90938966d054dddc5117fc247edb9328b_0
2025-10-07 09:45:56,014 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-formatted-sql-string') match_id = 05147616da0931f66b50dfdc88987ca109e58a2d2f14dab956044d3488fb58d644d1ecaee694acd919b974f6fe89822650ca1757425418b9441e9794d6d8c117_0
2025-10-07 09:45:56,014 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-formatted-sql-string') match_id = d49392f9f3c42d748f3cfa2ae09055563d70cab1632f641092af3b080aaeb2ff441335bf7472701075fd06064a59629b8c6a104c012920d042df3308c18b5078_0
2025-10-07 09:45:56,014 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-formatted-sql-string') match_id = d49392f9f3c42d748f3cfa2ae09055563d70cab1632f641092af3b080aaeb2ff441335bf7472701075fd06064a59629b8c6a104c012920d042df3308c18b5078_0
2025-10-07 09:45:56,015 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-formatted-sql-string') match_id = d49392f9f3c42d748f3cfa2ae09055563d70cab1632f641092af3b080aaeb2ff441335bf7472701075fd06064a59629b8c6a104c012920d042df3308c18b5078_1
2025-10-07 09:45:56,015 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 275d940e18d3bfac9638c50dffc3626ed1039feb76f5ed0bec70d01b9faa4b5bf52ef90677af1e846dfea89b4246f7e06bfead910f5680f9d9a8961e479d0a20_0
2025-10-07 09:45:56,015 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 755f46e93ed6d93a5a6a2b3d0392688e5e78634f0030b355b0d4b4fa63f355137cd104342df3eb6b079039016c06ba9532b32546d23b20edd37f42a671bccede_0
2025-10-07 09:45:56,016 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 755f46e93ed6d93a5a6a2b3d0392688e5e78634f0030b355b0d4b4fa63f355137cd104342df3eb6b079039016c06ba9532b32546d23b20edd37f42a671bccede_0
2025-10-07 09:45:56,016 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 755f46e93ed6d93a5a6a2b3d0392688e5e78634f0030b355b0d4b4fa63f355137cd104342df3eb6b079039016c06ba9532b32546d23b20edd37f42a671bccede_1
2025-10-07 09:45:56,016 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-dto-sql-injection') match_id = 88fd76873687141a4b342340601a5a0e7576905910f4c8cf29e73e953f7de16f8745036f03d2c970bc46aa106428aefc84897db05472b8e2d61289b5e833627d_0
2025-10-07 09:45:56,016 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-dto-sql-injection') match_id = 805acb52685ecb886778ca03df83bb4c255fca4c437d282bc1be09b512d6fce0c2cb71e04932988213096f26ac8a81f90938966d054dddc5117fc247edb9328b_0
2025-10-07 09:45:56,017 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-dto-sql-injection') match_id = 805acb52685ecb886778ca03df83bb4c255fca4c437d282bc1be09b512d6fce0c2cb71e04932988213096f26ac8a81f90938966d054dddc5117fc247edb9328b_0
2025-10-07 09:45:56,017 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-dto-sql-injection') match_id = 805acb52685ecb886778ca03df83bb4c255fca4c437d282bc1be09b512d6fce0c2cb71e04932988213096f26ac8a81f90938966d054dddc5117fc247edb9328b_1
2025-10-07 09:45:56,017 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-formatted-sql-string') match_id = 05147616da0931f66b50dfdc88987ca109e58a2d2f14dab956044d3488fb58d644d1ecaee694acd919b974f6fe89822650ca1757425418b9441e9794d6d8c117_0
2025-10-07 09:45:56,017 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-formatted-sql-string') match_id = d49392f9f3c42d748f3cfa2ae09055563d70cab1632f641092af3b080aaeb2ff441335bf7472701075fd06064a59629b8c6a104c012920d042df3308c18b5078_0
2025-10-07 09:45:56,018 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-formatted-sql-string') match_id = d49392f9f3c42d748f3cfa2ae09055563d70cab1632f641092af3b080aaeb2ff441335bf7472701075fd06064a59629b8c6a104c012920d042df3308c18b5078_0
2025-10-07 09:45:56,018 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-formatted-sql-string') match_id = d49392f9f3c42d748f3cfa2ae09055563d70cab1632f641092af3b080aaeb2ff441335bf7472701075fd06064a59629b8c6a104c012920d042df3308c18b5078_2
2025-10-07 09:45:56,018 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 275d940e18d3bfac9638c50dffc3626ed1039feb76f5ed0bec70d01b9faa4b5bf52ef90677af1e846dfea89b4246f7e06bfead910f5680f9d9a8961e479d0a20_0
2025-10-07 09:45:56,019 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 755f46e93ed6d93a5a6a2b3d0392688e5e78634f0030b355b0d4b4fa63f355137cd104342df3eb6b079039016c06ba9532b32546d23b20edd37f42a671bccede_0
2025-10-07 09:45:56,019 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 755f46e93ed6d93a5a6a2b3d0392688e5e78634f0030b355b0d4b4fa63f355137cd104342df3eb6b079039016c06ba9532b32546d23b20edd37f42a671bccede_0
2025-10-07 09:45:56,019 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-sql-injection-comprehensive') match_id = 755f46e93ed6d93a5a6a2b3d0392688e5e78634f0030b355b0d4b4fa63f355137cd104342df3eb6b079039016c06ba9532b32546d23b20edd37f42a671bccede_2
2025-10-07 09:45:56,019 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-dto-sql-injection') match_id = 88fd76873687141a4b342340601a5a0e7576905910f4c8cf29e73e953f7de16f8745036f03d2c970bc46aa106428aefc84897db05472b8e2d61289b5e833627d_0
2025-10-07 09:45:56,020 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-dto-sql-injection') match_id = 805acb52685ecb886778ca03df83bb4c255fca4c437d282bc1be09b512d6fce0c2cb71e04932988213096f26ac8a81f90938966d054dddc5117fc247edb9328b_0
2025-10-07 09:45:56,020 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-dto-sql-injection') match_id = 805acb52685ecb886778ca03df83bb4c255fca4c437d282bc1be09b512d6fce0c2cb71e04932988213096f26ac8a81f90938966d054dddc5117fc247edb9328b_0
2025-10-07 09:45:56,020 - semgrep.rule_match - DEBUG - match_key = ('blabberUsername.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(blabberUsername) "SELECT blab_name FROM users WHERE username = \'" + blabberUsername "SELECT blab_name FROM users WHERE username = \'" += blabberUsername (String sqlStatementTR).concat(blabberUsername) String.format(..., blabberUsername, ...) String.join(..., blabberUsername, ...) new sqlStatementTRB(..., blabberUsername, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/commands/RemoveAccountCommand.java'), 'java-spring-dto-sql-injection') match_id = 805acb52685ecb886778ca03df83bb4c255fca4c437d282bc1be09b512d6fce0c2cb71e04932988213096f26ac8a81f90938966d054dddc5117fc247edb9328b_2
2025-10-07 09:45:56,021 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-formatted-sql-string') match_id = e310b4cb70233dd0c8062d472a19fb7ddbbe13bdd99e0e92455265632922130b314d3f7658acc69565395fa242fd306892a2422f1d503d88be5ea5cbaf2c2a4d_0
2025-10-07 09:45:56,021 - semgrep.rule_match - DEBUG - match_key = ('"FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ".concat(...) $STRB.append("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " + "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " += "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " (String $STR).concat("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") String.format(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) String.join(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) new $STRB(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement createNativeQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-formatted-sql-string') match_id = 053f1789b4e42343c89c6a335851273e2ac0068e5ed3de13bf95f436a9ba67d18d4391ebb01c17b4d41211570e182f56af419c975b992cc04efe91e3fe44ae59_0
2025-10-07 09:45:56,021 - semgrep.rule_match - DEBUG - match_key = ('"FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ".concat(...) $STRB.append("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " + "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " += "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " (String $STR).concat("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") String.format(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) String.join(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) new $STRB(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement createNativeQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-formatted-sql-string') match_id = 053f1789b4e42343c89c6a335851273e2ac0068e5ed3de13bf95f436a9ba67d18d4391ebb01c17b4d41211570e182f56af419c975b992cc04efe91e3fe44ae59_0
2025-10-07 09:45:56,022 - semgrep.rule_match - DEBUG - match_key = ('"FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ".concat(...) $STRB.append("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " + "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " += "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " (String $STR).concat("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") String.format(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) String.join(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) new $STRB(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement createNativeQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-formatted-sql-string') match_id = 053f1789b4e42343c89c6a335851273e2ac0068e5ed3de13bf95f436a9ba67d18d4391ebb01c17b4d41211570e182f56af419c975b992cc04efe91e3fe44ae59_0
2025-10-07 09:45:56,022 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-sql-injection-comprehensive') match_id = b0e4af6a3739d71a02fc52389ced06073853d286ab1f890aa75a8f7998dc6476306061933a2c136f8a5af5eaefb0f272d9178dd87c66323179009d9116016625_0
2025-10-07 09:45:56,022 - semgrep.rule_match - DEBUG - match_key = ('"FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ".concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " + "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " += "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " (String $STR).concat("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") String.format(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) String.join(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) new $STRB(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0ec572607c0fd1735910534044030c03e56219335ef2975c224361c29d3a98c7e6e9c6bfca6859d3b2c845dea0d2f2e25c4592bc7af23a7017d4cd4c677d1199_0
2025-10-07 09:45:56,022 - semgrep.rule_match - DEBUG - match_key = ('"FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ".concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " + "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " += "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " (String $STR).concat("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") String.format(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) String.join(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) new $STRB(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0ec572607c0fd1735910534044030c03e56219335ef2975c224361c29d3a98c7e6e9c6bfca6859d3b2c845dea0d2f2e25c4592bc7af23a7017d4cd4c677d1199_0
2025-10-07 09:45:56,023 - semgrep.rule_match - DEBUG - match_key = ('"FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ".concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " + "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " += "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " (String $STR).concat("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") String.format(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) String.join(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) new $STRB(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0ec572607c0fd1735910534044030c03e56219335ef2975c224361c29d3a98c7e6e9c6bfca6859d3b2c845dea0d2f2e25c4592bc7af23a7017d4cd4c677d1199_0
2025-10-07 09:45:56,023 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-dto-sql-injection') match_id = 0b49e31f81ba62a7daddf9b6aa831d693e0202e74fee9c4e6814400c730daeb57449dc06db1cb6d8e4c34f01c182e9f34a8c723cee27fcf8a0dce782d6f16a20_0
2025-10-07 09:45:56,024 - semgrep.rule_match - DEBUG - match_key = ('"FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ".concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " + "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " += "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " (String $STR).concat("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") String.format(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) String.join(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) new $STRB(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) $S.prepareStatement("...") prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-dto-sql-injection') match_id = 31f3b7886bf4eb101b65ca9a0451e1df16507c97b195f998cb098a234487cf8f1b4c893880064abb8bd3b6f87066b5ee15a799cd9f073f7e2ce1e747ab0e237f_0
2025-10-07 09:45:56,024 - semgrep.rule_match - DEBUG - match_key = ('"FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ".concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " + "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " += "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " (String $STR).concat("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") String.format(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) String.join(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) new $STRB(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) $S.prepareStatement("...") prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-dto-sql-injection') match_id = 31f3b7886bf4eb101b65ca9a0451e1df16507c97b195f998cb098a234487cf8f1b4c893880064abb8bd3b6f87066b5ee15a799cd9f073f7e2ce1e747ab0e237f_0
2025-10-07 09:45:56,024 - semgrep.rule_match - DEBUG - match_key = ('"FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ".concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " + "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " "SELECT users.username, users.blab_name, blabs.content, blabs.timestamp, COUNT(comments.blabber), blabs.blabid " += "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber " (String $STR).concat("FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ") String.format(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) String.join(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) new $STRB(..., "FROM blabs INNER JOIN users ON blabs.blabber = users.username INNER JOIN listeners ON blabs.blabber = listeners.blabber ", ...) $S.prepareStatement("...") prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-dto-sql-injection') match_id = 31f3b7886bf4eb101b65ca9a0451e1df16507c97b195f998cb098a234487cf8f1b4c893880064abb8bd3b6f87066b5ee15a799cd9f073f7e2ce1e747ab0e237f_0
2025-10-07 09:45:56,025 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-formatted-sql-string') match_id = e310b4cb70233dd0c8062d472a19fb7ddbbe13bdd99e0e92455265632922130b314d3f7658acc69565395fa242fd306892a2422f1d503d88be5ea5cbaf2c2a4d_0
2025-10-07 09:45:56,025 - semgrep.rule_match - DEBUG - match_key = ('" users.blab_name,".concat(...) $STRB.append(" users.blab_name,") "SELECT users.username," + " users.blab_name," "SELECT users.username," += " users.blab_name," (String $STR).concat(" users.blab_name,") String.format(..., " users.blab_name,", ...) String.join(..., " users.blab_name,", ...) new $STRB(..., " users.blab_name,", ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement createNativeQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-formatted-sql-string') match_id = 5df8bf02a2fc1ec81c5142c9e528b97ca32d4f698190ce3b1a3a3b01aa8e90602a4041235f7c3617cb926f44ebb66659e6108ebabf81d4a5e1d9a3bf5d8f19ae_0
2025-10-07 09:45:56,025 - semgrep.rule_match - DEBUG - match_key = ('" users.blab_name,".concat(...) $STRB.append(" users.blab_name,") "SELECT users.username," + " users.blab_name," "SELECT users.username," += " users.blab_name," (String $STR).concat(" users.blab_name,") String.format(..., " users.blab_name,", ...) String.join(..., " users.blab_name,", ...) new $STRB(..., " users.blab_name,", ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement createNativeQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-formatted-sql-string') match_id = 5df8bf02a2fc1ec81c5142c9e528b97ca32d4f698190ce3b1a3a3b01aa8e90602a4041235f7c3617cb926f44ebb66659e6108ebabf81d4a5e1d9a3bf5d8f19ae_0
2025-10-07 09:45:56,026 - semgrep.rule_match - DEBUG - match_key = ('" users.blab_name,".concat(...) $STRB.append(" users.blab_name,") "SELECT users.username," + " users.blab_name," "SELECT users.username," += " users.blab_name," (String $STR).concat(" users.blab_name,") String.format(..., " users.blab_name,", ...) String.join(..., " users.blab_name,", ...) new $STRB(..., " users.blab_name,", ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement createNativeQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-formatted-sql-string') match_id = 5df8bf02a2fc1ec81c5142c9e528b97ca32d4f698190ce3b1a3a3b01aa8e90602a4041235f7c3617cb926f44ebb66659e6108ebabf81d4a5e1d9a3bf5d8f19ae_0
2025-10-07 09:45:56,026 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-sql-injection-comprehensive') match_id = b0e4af6a3739d71a02fc52389ced06073853d286ab1f890aa75a8f7998dc6476306061933a2c136f8a5af5eaefb0f272d9178dd87c66323179009d9116016625_0
2025-10-07 09:45:56,026 - semgrep.rule_match - DEBUG - match_key = ('" users.blab_name,".concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append(" users.blab_name,") "SELECT users.username," + " users.blab_name," "SELECT users.username," += " users.blab_name," (String $STR).concat(" users.blab_name,") String.format(..., " users.blab_name,", ...) String.join(..., " users.blab_name,", ...) new $STRB(..., " users.blab_name,", ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-sql-injection-comprehensive') match_id = 6e3fbd6b8bf843ceec85bae87017427635b4008030e533f55d70bcbad17e1b7081221141713f89978506a64742a79c29234585297ccc4713c163787f38b66faf_0
2025-10-07 09:45:56,027 - semgrep.rule_match - DEBUG - match_key = ('" users.blab_name,".concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append(" users.blab_name,") "SELECT users.username," + " users.blab_name," "SELECT users.username," += " users.blab_name," (String $STR).concat(" users.blab_name,") String.format(..., " users.blab_name,", ...) String.join(..., " users.blab_name,", ...) new $STRB(..., " users.blab_name,", ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-sql-injection-comprehensive') match_id = 6e3fbd6b8bf843ceec85bae87017427635b4008030e533f55d70bcbad17e1b7081221141713f89978506a64742a79c29234585297ccc4713c163787f38b66faf_0
2025-10-07 09:45:56,027 - semgrep.rule_match - DEBUG - match_key = ('" users.blab_name,".concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append(" users.blab_name,") "SELECT users.username," + " users.blab_name," "SELECT users.username," += " users.blab_name," (String $STR).concat(" users.blab_name,") String.format(..., " users.blab_name,", ...) String.join(..., " users.blab_name,", ...) new $STRB(..., " users.blab_name,", ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-sql-injection-comprehensive') match_id = 6e3fbd6b8bf843ceec85bae87017427635b4008030e533f55d70bcbad17e1b7081221141713f89978506a64742a79c29234585297ccc4713c163787f38b66faf_0
2025-10-07 09:45:56,027 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-dto-sql-injection') match_id = 0b49e31f81ba62a7daddf9b6aa831d693e0202e74fee9c4e6814400c730daeb57449dc06db1cb6d8e4c34f01c182e9f34a8c723cee27fcf8a0dce782d6f16a20_0
2025-10-07 09:45:56,028 - semgrep.rule_match - DEBUG - match_key = ('" users.blab_name,".concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append(" users.blab_name,") "SELECT users.username," + " users.blab_name," "SELECT users.username," += " users.blab_name," (String $STR).concat(" users.blab_name,") String.format(..., " users.blab_name,", ...) String.join(..., " users.blab_name,", ...) new $STRB(..., " users.blab_name,", ...) $S.prepareStatement("...") prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-dto-sql-injection') match_id = 51832dfc93844a7b4d3231bdd438a02ba1b62939eaec2e18d75526cc41224176b4eb1b9e595e87980d3cbd6f9c644d7f09886d01a97dc6e8b72e139199fd28be_0
2025-10-07 09:45:56,028 - semgrep.rule_match - DEBUG - match_key = ('" users.blab_name,".concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append(" users.blab_name,") "SELECT users.username," + " users.blab_name," "SELECT users.username," += " users.blab_name," (String $STR).concat(" users.blab_name,") String.format(..., " users.blab_name,", ...) String.join(..., " users.blab_name,", ...) new $STRB(..., " users.blab_name,", ...) $S.prepareStatement("...") prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-dto-sql-injection') match_id = 51832dfc93844a7b4d3231bdd438a02ba1b62939eaec2e18d75526cc41224176b4eb1b9e595e87980d3cbd6f9c644d7f09886d01a97dc6e8b72e139199fd28be_0
2025-10-07 09:45:56,028 - semgrep.rule_match - DEBUG - match_key = ('" users.blab_name,".concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append(" users.blab_name,") "SELECT users.username," + " users.blab_name," "SELECT users.username," += " users.blab_name," (String $STR).concat(" users.blab_name,") String.format(..., " users.blab_name,", ...) String.join(..., " users.blab_name,", ...) new $STRB(..., " users.blab_name,", ...) $S.prepareStatement("...") prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/BlabController.java'), 'java-spring-dto-sql-injection') match_id = 51832dfc93844a7b4d3231bdd438a02ba1b62939eaec2e18d75526cc41224176b4eb1b9e595e87980d3cbd6f9c644d7f09886d01a97dc6e8b72e139199fd28be_0
2025-10-07 09:45:56,029 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/ResetController.java'), 'java-formatted-sql-string') match_id = 20f9bf7a7b10b39bb89c93a9577c3fd3d17d3b32892775da6df4bc5a4efa9aa3a6dd92356213120dd0587026b2b96678cc44f5fae38a3e6de9f010a42d6f564a_0
2025-10-07 09:45:56,029 - semgrep.rule_match - DEBUG - match_key = ('{"--""/*"}.concat(...) String.append({"--""/*"}) $X + {"--""/*"} $X += {"--""/*"} (String stmtTR).concat({"--""/*"}) String.format(..., {"--""/*"}, ...) String.join(..., {"--""/*"}, ...) new String(..., {"--""/*"}, ...) stmt.stmtQLFUNC("...") stmt.stmtQLFUNC(<... "=~/.*TABLE %s$/" ...>) stmt.stmtQLFUNC(<... "=~/.*TABLE *$/" ...>) stmtQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .stmtQLFUNC(...) (java.sql.Statement stmt). ... .stmtQLFUNC(...) stmtQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .stmtQLFUNC(...) stmtQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .stmtQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ResetController.java'), 'java-formatted-sql-string') match_id = 7484755f338d40d60e7b888b249c0763c4fadd2c5e9f6755132160128fa116804f81452db2f72f4382fc0681519ba360d8f3d99c44049cfea53ce193936ab2f6_0
2025-10-07 09:45:56,029 - semgrep.rule_match - DEBUG - match_key = ('{"--""/*"}.concat(...) String.append({"--""/*"}) $X + {"--""/*"} $X += {"--""/*"} (String stmtTR).concat({"--""/*"}) String.format(..., {"--""/*"}, ...) String.join(..., {"--""/*"}, ...) new String(..., {"--""/*"}, ...) stmt.stmtQLFUNC("...") stmt.stmtQLFUNC(<... "=~/.*TABLE %s$/" ...>) stmt.stmtQLFUNC(<... "=~/.*TABLE *$/" ...>) stmtQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .stmtQLFUNC(...) (java.sql.Statement stmt). ... .stmtQLFUNC(...) stmtQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .stmtQLFUNC(...) stmtQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .stmtQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ResetController.java'), 'java-formatted-sql-string') match_id = 7484755f338d40d60e7b888b249c0763c4fadd2c5e9f6755132160128fa116804f81452db2f72f4382fc0681519ba360d8f3d99c44049cfea53ce193936ab2f6_0
2025-10-07 09:45:56,030 - semgrep.rule_match - DEBUG - match_key = ('{"--""/*"}.concat(...) String.append({"--""/*"}) $X + {"--""/*"} $X += {"--""/*"} (String stmtTR).concat({"--""/*"}) String.format(..., {"--""/*"}, ...) String.join(..., {"--""/*"}, ...) new String(..., {"--""/*"}, ...) stmt.stmtQLFUNC("...") stmt.stmtQLFUNC(<... "=~/.*TABLE %s$/" ...>) stmt.stmtQLFUNC(<... "=~/.*TABLE *$/" ...>) stmtQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .stmtQLFUNC(...) (java.sql.Statement stmt). ... .stmtQLFUNC(...) stmtQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .stmtQLFUNC(...) stmtQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .stmtQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ResetController.java'), 'java-formatted-sql-string') match_id = 7484755f338d40d60e7b888b249c0763c4fadd2c5e9f6755132160128fa116804f81452db2f72f4382fc0681519ba360d8f3d99c44049cfea53ce193936ab2f6_0
2025-10-07 09:45:56,030 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/ResetController.java'), 'java-spring-dto-sql-injection') match_id = f9b22a8cc63e8001a45a74ff3fc1e376f7c66ab6bdecaffa7a79d5e35720df6224d0784685986f41b4b0df50134f7f479cd15c89ac8d4a7871ff1316904fd410_0
2025-10-07 09:45:56,030 - semgrep.rule_match - DEBUG - match_key = ('{"--""/*"}.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() String.append({"--""/*"}) $X + {"--""/*"} $X += {"--""/*"} (String stmtTR).concat({"--""/*"}) String.format(..., {"--""/*"}, ...) String.join(..., {"--""/*"}, ...) new String(..., {"--""/*"}, ...) stmt.stmtQLFUNC("...") stmtQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .stmtQLFUNC(...) (java.sql.Statement stmt). ... .stmtQLFUNC(...) stmtQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .stmtQLFUNC(...) stmtQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .stmtQLFUNC(...) stmtQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .stmtQLFUNC(...) stmtQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .stmtQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ResetController.java'), 'java-spring-dto-sql-injection') match_id = e2a0221f33e7b1731a074bf2fb63ded9e54a63be03c144d71d073384cc38947e3d43adef73df9b6bb652fa3061b6485264e9ff46e9c388166e05b1e6bb54ea0e_0
2025-10-07 09:45:56,031 - semgrep.rule_match - DEBUG - match_key = ('{"--""/*"}.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() String.append({"--""/*"}) $X + {"--""/*"} $X += {"--""/*"} (String stmtTR).concat({"--""/*"}) String.format(..., {"--""/*"}, ...) String.join(..., {"--""/*"}, ...) new String(..., {"--""/*"}, ...) stmt.stmtQLFUNC("...") stmtQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .stmtQLFUNC(...) (java.sql.Statement stmt). ... .stmtQLFUNC(...) stmtQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .stmtQLFUNC(...) stmtQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .stmtQLFUNC(...) stmtQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .stmtQLFUNC(...) stmtQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .stmtQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ResetController.java'), 'java-spring-dto-sql-injection') match_id = e2a0221f33e7b1731a074bf2fb63ded9e54a63be03c144d71d073384cc38947e3d43adef73df9b6bb652fa3061b6485264e9ff46e9c388166e05b1e6bb54ea0e_0
2025-10-07 09:45:56,031 - semgrep.rule_match - DEBUG - match_key = ('{"--""/*"}.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() String.append({"--""/*"}) $X + {"--""/*"} $X += {"--""/*"} (String stmtTR).concat({"--""/*"}) String.format(..., {"--""/*"}, ...) String.join(..., {"--""/*"}, ...) new String(..., {"--""/*"}, ...) stmt.stmtQLFUNC("...") stmtQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .stmtQLFUNC(...) (java.sql.Statement stmt). ... .stmtQLFUNC(...) stmtQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .stmtQLFUNC(...) stmtQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .stmtQLFUNC(...) stmtQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .stmtQLFUNC(...) stmtQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .stmtQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ResetController.java'), 'java-spring-dto-sql-injection') match_id = e2a0221f33e7b1731a074bf2fb63ded9e54a63be03c144d71d073384cc38947e3d43adef73df9b6bb652fa3061b6485264e9ff46e9c388166e05b1e6bb54ea0e_0
2025-10-07 09:45:56,031 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/ResetController.java'), 'java-spring-sql-injection-comprehensive') match_id = 3c165501411796d01f520303ad248943b2df034ebc0d443658a56704bc3a4171154c164a8c0dbaa58424ed76a11ab3634b43f14cf67d7cce8dd07577e46ad76c_0
2025-10-07 09:45:56,032 - semgrep.rule_match - DEBUG - match_key = ('{"--""/*"}.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() String.append({"--""/*"}) $X + {"--""/*"} $X += {"--""/*"} (String stmtTR).concat({"--""/*"}) String.format(..., {"--""/*"}, ...) String.join(..., {"--""/*"}, ...) new String(..., {"--""/*"}, ...) stmt.stmtQLFUNC("...") stmt.stmtQLFUNC(<... "=~/.*TABLE %s$/" ...>) stmt.stmtQLFUNC(<... "=~/.*TABLE *$/" ...>) stmtQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .stmtQLFUNC(...) stmtQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .stmtQLFUNC(...) (java.sql.Statement stmt). ... .stmtQLFUNC(...) stmtQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .stmtQLFUNC(...) stmtQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .stmtQLFUNC(...) stmtQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .stmtQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ResetController.java'), 'java-spring-sql-injection-comprehensive') match_id = ebd797183e3a7a6329ac95f6d3ee1a6e41a744e9bd3c965710a41b939150273cf7061c844e898862afbe44433aa9501618c1cf2516ce9ec4d72569b97ac7ecee_0
2025-10-07 09:45:56,032 - semgrep.rule_match - DEBUG - match_key = ('{"--""/*"}.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() String.append({"--""/*"}) $X + {"--""/*"} $X += {"--""/*"} (String stmtTR).concat({"--""/*"}) String.format(..., {"--""/*"}, ...) String.join(..., {"--""/*"}, ...) new String(..., {"--""/*"}, ...) stmt.stmtQLFUNC("...") stmt.stmtQLFUNC(<... "=~/.*TABLE %s$/" ...>) stmt.stmtQLFUNC(<... "=~/.*TABLE *$/" ...>) stmtQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .stmtQLFUNC(...) stmtQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .stmtQLFUNC(...) (java.sql.Statement stmt). ... .stmtQLFUNC(...) stmtQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .stmtQLFUNC(...) stmtQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .stmtQLFUNC(...) stmtQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .stmtQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ResetController.java'), 'java-spring-sql-injection-comprehensive') match_id = ebd797183e3a7a6329ac95f6d3ee1a6e41a744e9bd3c965710a41b939150273cf7061c844e898862afbe44433aa9501618c1cf2516ce9ec4d72569b97ac7ecee_0
2025-10-07 09:45:56,032 - semgrep.rule_match - DEBUG - match_key = ('{"--""/*"}.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() String.append({"--""/*"}) $X + {"--""/*"} $X += {"--""/*"} (String stmtTR).concat({"--""/*"}) String.format(..., {"--""/*"}, ...) String.join(..., {"--""/*"}, ...) new String(..., {"--""/*"}, ...) stmt.stmtQLFUNC("...") stmt.stmtQLFUNC(<... "=~/.*TABLE %s$/" ...>) stmt.stmtQLFUNC(<... "=~/.*TABLE *$/" ...>) stmtQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .stmtQLFUNC(...) stmtQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .stmtQLFUNC(...) (java.sql.Statement stmt). ... .stmtQLFUNC(...) stmtQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .stmtQLFUNC(...) stmtQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .stmtQLFUNC(...) stmtQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .stmtQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ResetController.java'), 'java-spring-sql-injection-comprehensive') match_id = ebd797183e3a7a6329ac95f6d3ee1a6e41a744e9bd3c965710a41b939150273cf7061c844e898862afbe44433aa9501618c1cf2516ce9ec4d72569b97ac7ecee_0
2025-10-07 09:45:56,032 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/ToolsController.java'), 'java-external-search-path') match_id = 4b24c694abf778bb53516115325fa566dc804758028f470046fccf07f5335b089ecb705e48fffa66200320dd06c146289eb0c78789026769d723a6698eee54f5_0
2025-10-07 09:45:56,033 - semgrep.rule_match - DEBUG - match_key = ('bash ^(?!\\.|\\[|\\[\\[|alias|builtin|case|command|compgen|complete|compopt|echo|eval|exec|false|fc|for|getopts|help|history|if|kill|printf|pwd|select|source|test|time|times|trap|true|type|typeset|ulimit|until|while$)[^\\/].*$ Runtime.getRuntime().exec( new String[] {"bash", ...}, ...) Runtime.getRuntime().exec("bash", ...) new ProcessBuilder("bash", ...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ToolsController.java'), 'java-external-search-path') match_id = d77df50158a2aafa8af679c590caf559927ea2ab52d3dcae20262f9f72a932553309dddfc7460354e7820a4e2b02a7f76ce983981b029601659951a94f971bff_0
2025-10-07 09:45:56,033 - semgrep.rule_match - DEBUG - match_key = ('bash ^(?!\\.|\\[|\\[\\[|alias|builtin|case|command|compgen|complete|compopt|echo|eval|exec|false|fc|for|getopts|help|history|if|kill|printf|pwd|select|source|test|time|times|trap|true|type|typeset|ulimit|until|while$)[^\\/].*$ Runtime.getRuntime().exec( new String[] {"bash", ...}, ...) Runtime.getRuntime().exec("bash", ...) new ProcessBuilder("bash", ...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ToolsController.java'), 'java-external-search-path') match_id = d77df50158a2aafa8af679c590caf559927ea2ab52d3dcae20262f9f72a932553309dddfc7460354e7820a4e2b02a7f76ce983981b029601659951a94f971bff_0
2025-10-07 09:45:56,033 - semgrep.rule_match - DEBUG - match_key = ('bash ^(?!\\.|\\[|\\[\\[|alias|builtin|case|command|compgen|complete|compopt|echo|eval|exec|false|fc|for|getopts|help|history|if|kill|printf|pwd|select|source|test|time|times|trap|true|type|typeset|ulimit|until|while$)[^\\/].*$ Runtime.getRuntime().exec( new String[] {"bash", ...}, ...) Runtime.getRuntime().exec("bash", ...) new ProcessBuilder("bash", ...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ToolsController.java'), 'java-external-search-path') match_id = d77df50158a2aafa8af679c590caf559927ea2ab52d3dcae20262f9f72a932553309dddfc7460354e7820a4e2b02a7f76ce983981b029601659951a94f971bff_0
2025-10-07 09:45:56,033 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/ToolsController.java'), 'java-external-search-path') match_id = 4b24c694abf778bb53516115325fa566dc804758028f470046fccf07f5335b089ecb705e48fffa66200320dd06c146289eb0c78789026769d723a6698eee54f5_0
2025-10-07 09:45:56,034 - semgrep.rule_match - DEBUG - match_key = ('bash ^(?!\\.|\\[|\\[\\[|alias|builtin|case|command|compgen|complete|compopt|echo|eval|exec|false|fc|for|getopts|help|history|if|kill|printf|pwd|select|source|test|time|times|trap|true|type|typeset|ulimit|until|while$)[^\\/].*$ Runtime.getRuntime().exec( new String[] {"bash", ...}, ...) Runtime.getRuntime().exec("bash", ...) new ProcessBuilder("bash", ...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ToolsController.java'), 'java-external-search-path') match_id = d77df50158a2aafa8af679c590caf559927ea2ab52d3dcae20262f9f72a932553309dddfc7460354e7820a4e2b02a7f76ce983981b029601659951a94f971bff_0
2025-10-07 09:45:56,034 - semgrep.rule_match - DEBUG - match_key = ('bash ^(?!\\.|\\[|\\[\\[|alias|builtin|case|command|compgen|complete|compopt|echo|eval|exec|false|fc|for|getopts|help|history|if|kill|printf|pwd|select|source|test|time|times|trap|true|type|typeset|ulimit|until|while$)[^\\/].*$ Runtime.getRuntime().exec( new String[] {"bash", ...}, ...) Runtime.getRuntime().exec("bash", ...) new ProcessBuilder("bash", ...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ToolsController.java'), 'java-external-search-path') match_id = d77df50158a2aafa8af679c590caf559927ea2ab52d3dcae20262f9f72a932553309dddfc7460354e7820a4e2b02a7f76ce983981b029601659951a94f971bff_0
2025-10-07 09:45:56,034 - semgrep.rule_match - DEBUG - match_key = ('bash ^(?!\\.|\\[|\\[\\[|alias|builtin|case|command|compgen|complete|compopt|echo|eval|exec|false|fc|for|getopts|help|history|if|kill|printf|pwd|select|source|test|time|times|trap|true|type|typeset|ulimit|until|while$)[^\\/].*$ Runtime.getRuntime().exec( new String[] {"bash", ...}, ...) Runtime.getRuntime().exec("bash", ...) new ProcessBuilder("bash", ...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/ToolsController.java'), 'java-external-search-path') match_id = d77df50158a2aafa8af679c590caf559927ea2ab52d3dcae20262f9f72a932553309dddfc7460354e7820a4e2b02a7f76ce983981b029601659951a94f971bff_1
2025-10-07 09:45:56,034 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 5f3f4ce4db4ca4fa1f793a3295a163099bb2243f35fbe09dff6cb9efb33acf9ec183181d5525cb8438f83290ab7a4260185968d5e185ad053751f5d15235d8a9_0
2025-10-07 09:45:56,035 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) sqlStatementTRB.append(username) "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" + username "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 8afc22564fd782277f6f4c3dc0fe51191078f99b326455e0ffcabbe251d427b397cba08507e3589e9722bce9466c342accb09ef9232b1741d14844dec538d6b8_0
2025-10-07 09:45:56,035 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) sqlStatementTRB.append(username) "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" + username "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 8afc22564fd782277f6f4c3dc0fe51191078f99b326455e0ffcabbe251d427b397cba08507e3589e9722bce9466c342accb09ef9232b1741d14844dec538d6b8_0
2025-10-07 09:45:56,035 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) sqlStatementTRB.append(username) "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" + username "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 8afc22564fd782277f6f4c3dc0fe51191078f99b326455e0ffcabbe251d427b397cba08507e3589e9722bce9466c342accb09ef9232b1741d14844dec538d6b8_0
2025-10-07 09:45:56,036 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0b9eccc89805ea45e2e3eff4addbf202a4ad82bd1fbc21de70cf5a863be79883208ee6e2be4fd7dddd397b8d79ad1e29dc23f0aa1099798ec6fd44823e37d3db_0
2025-10-07 09:45:56,036 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(username) "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" + username "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = a433dd66b3cd601799236d984d9db4200d82829e4b66a6c771f9c5df91c2009f1bf871b96f29b42049a1a687ee17bd270befdb78537f193559dc9be0cc7b5f7e_0
2025-10-07 09:45:56,036 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(username) "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" + username "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = a433dd66b3cd601799236d984d9db4200d82829e4b66a6c771f9c5df91c2009f1bf871b96f29b42049a1a687ee17bd270befdb78537f193559dc9be0cc7b5f7e_0
2025-10-07 09:45:56,037 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(username) "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" + username "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = a433dd66b3cd601799236d984d9db4200d82829e4b66a6c771f9c5df91c2009f1bf871b96f29b42049a1a687ee17bd270befdb78537f193559dc9be0cc7b5f7e_0
2025-10-07 09:45:56,037 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 7ff149a271a4f95ab4218d055d69f1592f53136ae13f406426a5d688d9154e61bd7f4a298b0325b7256bc32872ea9a31f7917887598143aa303bdb2776d3c5e7_0
2025-10-07 09:45:56,037 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(username) "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" + username "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = f29edf0cf6acd22802a92801b9d3f1c0da68aefbfa2e00126ee60d858e99778e0305301ba8ab7cace0e5ea39f2b720e4c6e3506257c0b2956d03c53255f6e6fa_0
2025-10-07 09:45:56,037 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(username) "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" + username "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = f29edf0cf6acd22802a92801b9d3f1c0da68aefbfa2e00126ee60d858e99778e0305301ba8ab7cace0e5ea39f2b720e4c6e3506257c0b2956d03c53255f6e6fa_0
2025-10-07 09:45:56,038 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(username) "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" + username "select username, password, password_hint, created_at, last_login, real_name, blab_name from users where username=\'" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = f29edf0cf6acd22802a92801b9d3f1c0da68aefbfa2e00126ee60d858e99778e0305301ba8ab7cace0e5ea39f2b720e4c6e3506257c0b2956d03c53255f6e6fa_0
2025-10-07 09:45:56,038 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 5f3f4ce4db4ca4fa1f793a3295a163099bb2243f35fbe09dff6cb9efb33acf9ec183181d5525cb8438f83290ab7a4260185968d5e185ad053751f5d15235d8a9_0
2025-10-07 09:45:56,038 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) statementTRB.append(username) "SELECT password_hint FROM users WHERE username = \'" + username "SELECT password_hint FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statement.statementQLFUNC(<... "=~/.*TABLE %s$/" ...>) statement.statementQLFUNC(<... "=~/.*TABLE *$/" ...>) statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = fa5ed7af3e024ef64659839e582f0b163ba139dddf3fc95c3b27aea454f98f00d9e0197d1b5fc9c27335657b8d4cd70647c063951ee4cea62baa8213bf2239a5_0
2025-10-07 09:45:56,039 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) statementTRB.append(username) "SELECT password_hint FROM users WHERE username = \'" + username "SELECT password_hint FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statement.statementQLFUNC(<... "=~/.*TABLE %s$/" ...>) statement.statementQLFUNC(<... "=~/.*TABLE *$/" ...>) statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = fa5ed7af3e024ef64659839e582f0b163ba139dddf3fc95c3b27aea454f98f00d9e0197d1b5fc9c27335657b8d4cd70647c063951ee4cea62baa8213bf2239a5_0
2025-10-07 09:45:56,039 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) statementTRB.append(username) "SELECT password_hint FROM users WHERE username = \'" + username "SELECT password_hint FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statement.statementQLFUNC(<... "=~/.*TABLE %s$/" ...>) statement.statementQLFUNC(<... "=~/.*TABLE *$/" ...>) statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = fa5ed7af3e024ef64659839e582f0b163ba139dddf3fc95c3b27aea454f98f00d9e0197d1b5fc9c27335657b8d4cd70647c063951ee4cea62baa8213bf2239a5_0
2025-10-07 09:45:56,039 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0b9eccc89805ea45e2e3eff4addbf202a4ad82bd1fbc21de70cf5a863be79883208ee6e2be4fd7dddd397b8d79ad1e29dc23f0aa1099798ec6fd44823e37d3db_0
2025-10-07 09:45:56,040 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() statementTRB.append(username) "SELECT password_hint FROM users WHERE username = \'" + username "SELECT password_hint FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statement.statementQLFUNC(<... "=~/.*TABLE %s$/" ...>) statement.statementQLFUNC(<... "=~/.*TABLE *$/" ...>) statementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 1f7556dff3ae70ecf3e5e2178bffacb04ac65425ae0aa7b59a44786e222a3646b3c7106414cd17bbb3bd3743ba5a65df2423bd89e56ce97be107623b21a0d8fa_0
2025-10-07 09:45:56,040 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() statementTRB.append(username) "SELECT password_hint FROM users WHERE username = \'" + username "SELECT password_hint FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statement.statementQLFUNC(<... "=~/.*TABLE %s$/" ...>) statement.statementQLFUNC(<... "=~/.*TABLE *$/" ...>) statementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 1f7556dff3ae70ecf3e5e2178bffacb04ac65425ae0aa7b59a44786e222a3646b3c7106414cd17bbb3bd3743ba5a65df2423bd89e56ce97be107623b21a0d8fa_0
2025-10-07 09:45:56,040 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() statementTRB.append(username) "SELECT password_hint FROM users WHERE username = \'" + username "SELECT password_hint FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statement.statementQLFUNC(<... "=~/.*TABLE %s$/" ...>) statement.statementQLFUNC(<... "=~/.*TABLE *$/" ...>) statementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 1f7556dff3ae70ecf3e5e2178bffacb04ac65425ae0aa7b59a44786e222a3646b3c7106414cd17bbb3bd3743ba5a65df2423bd89e56ce97be107623b21a0d8fa_0
2025-10-07 09:45:56,040 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 7ff149a271a4f95ab4218d055d69f1592f53136ae13f406426a5d688d9154e61bd7f4a298b0325b7256bc32872ea9a31f7917887598143aa303bdb2776d3c5e7_0
2025-10-07 09:45:56,041 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() statementTRB.append(username) "SELECT password_hint FROM users WHERE username = \'" + username "SELECT password_hint FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 97064dca6b94d98edf782d9d1ec5b329481ff75661d6f7cb4af71c552bf6f25b2854138262b896b2ae53622a0dd2bfbc371946188f02eb981f4ba6391906f233_0
2025-10-07 09:45:56,041 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() statementTRB.append(username) "SELECT password_hint FROM users WHERE username = \'" + username "SELECT password_hint FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 97064dca6b94d98edf782d9d1ec5b329481ff75661d6f7cb4af71c552bf6f25b2854138262b896b2ae53622a0dd2bfbc371946188f02eb981f4ba6391906f233_0
2025-10-07 09:45:56,041 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() statementTRB.append(username) "SELECT password_hint FROM users WHERE username = \'" + username "SELECT password_hint FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 97064dca6b94d98edf782d9d1ec5b329481ff75661d6f7cb4af71c552bf6f25b2854138262b896b2ae53622a0dd2bfbc371946188f02eb981f4ba6391906f233_0
2025-10-07 09:45:56,042 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 5f3f4ce4db4ca4fa1f793a3295a163099bb2243f35fbe09dff6cb9efb33acf9ec183181d5525cb8438f83290ab7a4260185968d5e185ad053751f5d15235d8a9_0
2025-10-07 09:45:56,042 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) statementTRB.append(username) "SELECT username FROM users WHERE username = \'" + username "SELECT username FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statement.statementQLFUNC(<... "=~/.*TABLE %s$/" ...>) statement.statementQLFUNC(<... "=~/.*TABLE *$/" ...>) statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 73274cd4c7e85ec5a900e7ffd84c8e53de65229ec63f84189e0bfb4fb43f25f1ef268e8566d227482c47f239cd7b73dd2bdcf3f952c8ee4cca65e5fe91091cda_0
2025-10-07 09:45:56,042 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) statementTRB.append(username) "SELECT username FROM users WHERE username = \'" + username "SELECT username FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statement.statementQLFUNC(<... "=~/.*TABLE %s$/" ...>) statement.statementQLFUNC(<... "=~/.*TABLE *$/" ...>) statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 73274cd4c7e85ec5a900e7ffd84c8e53de65229ec63f84189e0bfb4fb43f25f1ef268e8566d227482c47f239cd7b73dd2bdcf3f952c8ee4cca65e5fe91091cda_0
2025-10-07 09:45:56,043 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) statementTRB.append(username) "SELECT username FROM users WHERE username = \'" + username "SELECT username FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statement.statementQLFUNC(<... "=~/.*TABLE %s$/" ...>) statement.statementQLFUNC(<... "=~/.*TABLE *$/" ...>) statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 73274cd4c7e85ec5a900e7ffd84c8e53de65229ec63f84189e0bfb4fb43f25f1ef268e8566d227482c47f239cd7b73dd2bdcf3f952c8ee4cca65e5fe91091cda_0
2025-10-07 09:45:56,043 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0b9eccc89805ea45e2e3eff4addbf202a4ad82bd1fbc21de70cf5a863be79883208ee6e2be4fd7dddd397b8d79ad1e29dc23f0aa1099798ec6fd44823e37d3db_0
2025-10-07 09:45:56,043 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() statementTRB.append(username) "SELECT username FROM users WHERE username = \'" + username "SELECT username FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statement.statementQLFUNC(<... "=~/.*TABLE %s$/" ...>) statement.statementQLFUNC(<... "=~/.*TABLE *$/" ...>) statementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 11fb503ecb0bd76cda10b3a4151a4d2e66b4704237cec5ef7ba5e623bd1bcbc9d4e1194365c7f49b99d8ebc500824012a2c8c9a32ff375bdb03f03a162706e90_0
2025-10-07 09:45:56,044 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() statementTRB.append(username) "SELECT username FROM users WHERE username = \'" + username "SELECT username FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statement.statementQLFUNC(<... "=~/.*TABLE %s$/" ...>) statement.statementQLFUNC(<... "=~/.*TABLE *$/" ...>) statementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 11fb503ecb0bd76cda10b3a4151a4d2e66b4704237cec5ef7ba5e623bd1bcbc9d4e1194365c7f49b99d8ebc500824012a2c8c9a32ff375bdb03f03a162706e90_0
2025-10-07 09:45:56,044 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() statementTRB.append(username) "SELECT username FROM users WHERE username = \'" + username "SELECT username FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statement.statementQLFUNC(<... "=~/.*TABLE %s$/" ...>) statement.statementQLFUNC(<... "=~/.*TABLE *$/" ...>) statementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 11fb503ecb0bd76cda10b3a4151a4d2e66b4704237cec5ef7ba5e623bd1bcbc9d4e1194365c7f49b99d8ebc500824012a2c8c9a32ff375bdb03f03a162706e90_0
2025-10-07 09:45:56,044 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 7ff149a271a4f95ab4218d055d69f1592f53136ae13f406426a5d688d9154e61bd7f4a298b0325b7256bc32872ea9a31f7917887598143aa303bdb2776d3c5e7_0
2025-10-07 09:45:56,045 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() statementTRB.append(username) "SELECT username FROM users WHERE username = \'" + username "SELECT username FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 8bbce669ad1414aefc6ded7df69edd676679bb11e86ccf374913f0c72e8525af771ea208743858333bbdd154a7d4ea5a91a2cc83c8a7729324db0226afc5a602_0
2025-10-07 09:45:56,045 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() statementTRB.append(username) "SELECT username FROM users WHERE username = \'" + username "SELECT username FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 8bbce669ad1414aefc6ded7df69edd676679bb11e86ccf374913f0c72e8525af771ea208743858333bbdd154a7d4ea5a91a2cc83c8a7729324db0226afc5a602_0
2025-10-07 09:45:56,045 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() statementTRB.append(username) "SELECT username FROM users WHERE username = \'" + username "SELECT username FROM users WHERE username = \'" += username (String statementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new statementTRB(..., username, ...) statement.statementQLFUNC("...") statementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .statementQLFUNC(...) (java.sql.Statement statement). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .statementQLFUNC(...) statementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .statementQLFUNC(...) statementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .statementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 8bbce669ad1414aefc6ded7df69edd676679bb11e86ccf374913f0c72e8525af771ea208743858333bbdd154a7d4ea5a91a2cc83c8a7729324db0226afc5a602_0
2025-10-07 09:45:56,045 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 5f3f4ce4db4ca4fa1f793a3295a163099bb2243f35fbe09dff6cb9efb33acf9ec183181d5525cb8438f83290ab7a4260185968d5e185ad053751f5d15235d8a9_0
2025-10-07 09:45:56,046 - semgrep.rule_match - DEBUG - match_key = ('"yyyy-MM-dd HH:mm:ss".concat(...) SimpleDateFormat.append("yyyy-MM-dd HH:mm:ss") $X + "yyyy-MM-dd HH:mm:ss" $X += "yyyy-MM-dd HH:mm:ss" (String sqlStatementTR).concat("yyyy-MM-dd HH:mm:ss") String.format(..., "yyyy-MM-dd HH:mm:ss", ...) String.join(..., "yyyy-MM-dd HH:mm:ss", ...) new SimpleDateFormat(..., "yyyy-MM-dd HH:mm:ss", ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 8ac38bcd55dad81d596338e50b1d60f614692b2422237c9c9f67949fbb1671aa4e33e8d0926645566408b3ab02a338d9455f824d2da0b1eb31a08f65bbe8afc3_0
2025-10-07 09:45:56,046 - semgrep.rule_match - DEBUG - match_key = ('"yyyy-MM-dd HH:mm:ss".concat(...) SimpleDateFormat.append("yyyy-MM-dd HH:mm:ss") $X + "yyyy-MM-dd HH:mm:ss" $X += "yyyy-MM-dd HH:mm:ss" (String sqlStatementTR).concat("yyyy-MM-dd HH:mm:ss") String.format(..., "yyyy-MM-dd HH:mm:ss", ...) String.join(..., "yyyy-MM-dd HH:mm:ss", ...) new SimpleDateFormat(..., "yyyy-MM-dd HH:mm:ss", ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 8ac38bcd55dad81d596338e50b1d60f614692b2422237c9c9f67949fbb1671aa4e33e8d0926645566408b3ab02a338d9455f824d2da0b1eb31a08f65bbe8afc3_0
2025-10-07 09:45:56,046 - semgrep.rule_match - DEBUG - match_key = ('"yyyy-MM-dd HH:mm:ss".concat(...) SimpleDateFormat.append("yyyy-MM-dd HH:mm:ss") $X + "yyyy-MM-dd HH:mm:ss" $X += "yyyy-MM-dd HH:mm:ss" (String sqlStatementTR).concat("yyyy-MM-dd HH:mm:ss") String.format(..., "yyyy-MM-dd HH:mm:ss", ...) String.join(..., "yyyy-MM-dd HH:mm:ss", ...) new SimpleDateFormat(..., "yyyy-MM-dd HH:mm:ss", ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 8ac38bcd55dad81d596338e50b1d60f614692b2422237c9c9f67949fbb1671aa4e33e8d0926645566408b3ab02a338d9455f824d2da0b1eb31a08f65bbe8afc3_0
2025-10-07 09:45:56,047 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0b9eccc89805ea45e2e3eff4addbf202a4ad82bd1fbc21de70cf5a863be79883208ee6e2be4fd7dddd397b8d79ad1e29dc23f0aa1099798ec6fd44823e37d3db_0
2025-10-07 09:45:56,047 - semgrep.rule_match - DEBUG - match_key = ('"yyyy-MM-dd HH:mm:ss".concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() SimpleDateFormat.append("yyyy-MM-dd HH:mm:ss") $X + "yyyy-MM-dd HH:mm:ss" $X += "yyyy-MM-dd HH:mm:ss" (String sqlStatementTR).concat("yyyy-MM-dd HH:mm:ss") String.format(..., "yyyy-MM-dd HH:mm:ss", ...) String.join(..., "yyyy-MM-dd HH:mm:ss", ...) new SimpleDateFormat(..., "yyyy-MM-dd HH:mm:ss", ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 609b10f9f73712e3013a32cf262c45bf4d593f2d2e4a6e05779bc2435c6fb76a4b3fe3746f97f2309460151c953f7b5a1197b13a528625eaab9ee6ac0c9689bd_0
2025-10-07 09:45:56,047 - semgrep.rule_match - DEBUG - match_key = ('"yyyy-MM-dd HH:mm:ss".concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() SimpleDateFormat.append("yyyy-MM-dd HH:mm:ss") $X + "yyyy-MM-dd HH:mm:ss" $X += "yyyy-MM-dd HH:mm:ss" (String sqlStatementTR).concat("yyyy-MM-dd HH:mm:ss") String.format(..., "yyyy-MM-dd HH:mm:ss", ...) String.join(..., "yyyy-MM-dd HH:mm:ss", ...) new SimpleDateFormat(..., "yyyy-MM-dd HH:mm:ss", ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 609b10f9f73712e3013a32cf262c45bf4d593f2d2e4a6e05779bc2435c6fb76a4b3fe3746f97f2309460151c953f7b5a1197b13a528625eaab9ee6ac0c9689bd_0
2025-10-07 09:45:56,048 - semgrep.rule_match - DEBUG - match_key = ('"yyyy-MM-dd HH:mm:ss".concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() SimpleDateFormat.append("yyyy-MM-dd HH:mm:ss") $X + "yyyy-MM-dd HH:mm:ss" $X += "yyyy-MM-dd HH:mm:ss" (String sqlStatementTR).concat("yyyy-MM-dd HH:mm:ss") String.format(..., "yyyy-MM-dd HH:mm:ss", ...) String.join(..., "yyyy-MM-dd HH:mm:ss", ...) new SimpleDateFormat(..., "yyyy-MM-dd HH:mm:ss", ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 609b10f9f73712e3013a32cf262c45bf4d593f2d2e4a6e05779bc2435c6fb76a4b3fe3746f97f2309460151c953f7b5a1197b13a528625eaab9ee6ac0c9689bd_0
2025-10-07 09:45:56,048 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 7ff149a271a4f95ab4218d055d69f1592f53136ae13f406426a5d688d9154e61bd7f4a298b0325b7256bc32872ea9a31f7917887598143aa303bdb2776d3c5e7_0
2025-10-07 09:45:56,048 - semgrep.rule_match - DEBUG - match_key = ('"yyyy-MM-dd HH:mm:ss".concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() SimpleDateFormat.append("yyyy-MM-dd HH:mm:ss") $X + "yyyy-MM-dd HH:mm:ss" $X += "yyyy-MM-dd HH:mm:ss" (String sqlStatementTR).concat("yyyy-MM-dd HH:mm:ss") String.format(..., "yyyy-MM-dd HH:mm:ss", ...) String.join(..., "yyyy-MM-dd HH:mm:ss", ...) new SimpleDateFormat(..., "yyyy-MM-dd HH:mm:ss", ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 01b31fc6b5dd9dbfab3789dd7a7a42504802a902536b253036eb616b20f7988a4433fb725bfaafd68812ade3f66819427c92c81133e0ed3a43fb2afc38768b15_0
2025-10-07 09:45:56,049 - semgrep.rule_match - DEBUG - match_key = ('"yyyy-MM-dd HH:mm:ss".concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() SimpleDateFormat.append("yyyy-MM-dd HH:mm:ss") $X + "yyyy-MM-dd HH:mm:ss" $X += "yyyy-MM-dd HH:mm:ss" (String sqlStatementTR).concat("yyyy-MM-dd HH:mm:ss") String.format(..., "yyyy-MM-dd HH:mm:ss", ...) String.join(..., "yyyy-MM-dd HH:mm:ss", ...) new SimpleDateFormat(..., "yyyy-MM-dd HH:mm:ss", ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 01b31fc6b5dd9dbfab3789dd7a7a42504802a902536b253036eb616b20f7988a4433fb725bfaafd68812ade3f66819427c92c81133e0ed3a43fb2afc38768b15_0
2025-10-07 09:45:56,049 - semgrep.rule_match - DEBUG - match_key = ('"yyyy-MM-dd HH:mm:ss".concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() SimpleDateFormat.append("yyyy-MM-dd HH:mm:ss") $X + "yyyy-MM-dd HH:mm:ss" $X += "yyyy-MM-dd HH:mm:ss" (String sqlStatementTR).concat("yyyy-MM-dd HH:mm:ss") String.format(..., "yyyy-MM-dd HH:mm:ss", ...) String.join(..., "yyyy-MM-dd HH:mm:ss", ...) new SimpleDateFormat(..., "yyyy-MM-dd HH:mm:ss", ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 01b31fc6b5dd9dbfab3789dd7a7a42504802a902536b253036eb616b20f7988a4433fb725bfaafd68812ade3f66819427c92c81133e0ed3a43fb2afc38768b15_0
2025-10-07 09:45:56,049 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java_smtp_rule-SmtpClient') match_id = 064137584132aefc98364227abab2cd845498b74210099f3ed05aad4e5e33a95aea6b22a89731e4546be0603526d0f6eb1b427dc727126b2bd21cc2e3c039882_0
2025-10-07 09:45:56,050 - semgrep.rule_match - DEBUG - match_key = ('getProperty ^get message.addHeader($ARG, env.getProperty(...) + ...) message.addHeader($ARG, env.getProperty(...)) message.addHeader($ARG, ... + env.getProperty(...) + ...) message.addHeader($ARG, ... + env.getProperty(...)) message.addHeader(env.getProperty(...) + ..., $ARG) message.addHeader(env.getProperty(...), $ARG) message.addHeader(... + env.getProperty(...) + ..., $ARG) message.addHeader(... + env.getProperty(...), $ARG) message.setDescription(env.getProperty(...)) message.setDisposition(env.getProperty(...) + ...) message.setDisposition(... + env.getProperty(...) + ...) message.setDisposition(... + env.getProperty(...)) message.setSubject(env.getProperty(...) + ...) message.setSubject(env.getProperty(...)) message.setSubject(... + env.getProperty(...) + ...) message.setSubject(... + env.getProperty(...)) message.addHeader($ARG, $VAR) message.addHeader($VAR, $ARG) message.setDescription($VAR) message.setDisposition($VAR) message.setSubject($VAR) $VAR ^[a-zA-Z_$][a-zA-Z0-9_$]*$ message = new MimeMessage(...);\n...\n', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java_smtp_rule-SmtpClient') match_id = 16062fffdef6be632b2c8e2f0a11c99b77077e0378d6b257e3e7bff7a27af94e9fcad4697dbd51d601b0c1657951f06f0fa9c7fcc162fc89f5dddeed96893184_0
2025-10-07 09:45:56,050 - semgrep.rule_match - DEBUG - match_key = ('getProperty ^get message.addHeader($ARG, env.getProperty(...) + ...) message.addHeader($ARG, env.getProperty(...)) message.addHeader($ARG, ... + env.getProperty(...) + ...) message.addHeader($ARG, ... + env.getProperty(...)) message.addHeader(env.getProperty(...) + ..., $ARG) message.addHeader(env.getProperty(...), $ARG) message.addHeader(... + env.getProperty(...) + ..., $ARG) message.addHeader(... + env.getProperty(...), $ARG) message.setDescription(env.getProperty(...)) message.setDisposition(env.getProperty(...) + ...) message.setDisposition(... + env.getProperty(...) + ...) message.setDisposition(... + env.getProperty(...)) message.setSubject(env.getProperty(...) + ...) message.setSubject(env.getProperty(...)) message.setSubject(... + env.getProperty(...) + ...) message.setSubject(... + env.getProperty(...)) message.addHeader($ARG, $VAR) message.addHeader($VAR, $ARG) message.setDescription($VAR) message.setDisposition($VAR) message.setSubject($VAR) $VAR ^[a-zA-Z_$][a-zA-Z0-9_$]*$ message = new MimeMessage(...);\n...\n', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java_smtp_rule-SmtpClient') match_id = 16062fffdef6be632b2c8e2f0a11c99b77077e0378d6b257e3e7bff7a27af94e9fcad4697dbd51d601b0c1657951f06f0fa9c7fcc162fc89f5dddeed96893184_0
2025-10-07 09:45:56,050 - semgrep.rule_match - DEBUG - match_key = ('getProperty ^get message.addHeader($ARG, env.getProperty(...) + ...) message.addHeader($ARG, env.getProperty(...)) message.addHeader($ARG, ... + env.getProperty(...) + ...) message.addHeader($ARG, ... + env.getProperty(...)) message.addHeader(env.getProperty(...) + ..., $ARG) message.addHeader(env.getProperty(...), $ARG) message.addHeader(... + env.getProperty(...) + ..., $ARG) message.addHeader(... + env.getProperty(...), $ARG) message.setDescription(env.getProperty(...)) message.setDisposition(env.getProperty(...) + ...) message.setDisposition(... + env.getProperty(...) + ...) message.setDisposition(... + env.getProperty(...)) message.setSubject(env.getProperty(...) + ...) message.setSubject(env.getProperty(...)) message.setSubject(... + env.getProperty(...) + ...) message.setSubject(... + env.getProperty(...)) message.addHeader($ARG, $VAR) message.addHeader($VAR, $ARG) message.setDescription($VAR) message.setDisposition($VAR) message.setSubject($VAR) $VAR ^[a-zA-Z_$][a-zA-Z0-9_$]*$ message = new MimeMessage(...);\n...\n', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java_smtp_rule-SmtpClient') match_id = 16062fffdef6be632b2c8e2f0a11c99b77077e0378d6b257e3e7bff7a27af94e9fcad4697dbd51d601b0c1657951f06f0fa9c7fcc162fc89f5dddeed96893184_0
2025-10-07 09:45:56,051 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 5f3f4ce4db4ca4fa1f793a3295a163099bb2243f35fbe09dff6cb9efb33acf9ec183181d5525cb8438f83290ab7a4260185968d5e185ad053751f5d15235d8a9_0
2025-10-07 09:45:56,051 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) sqlStatementTRB.append(username) "select event from users_history where blabber=\\"" + username "select event from users_history where blabber=\\"" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 457ae9e216d53d7a9bedca66e82b0b3ece89ce670b23a62247fa879d4b02718c473926c59b86fc48737821d9972db5a95aaf9b3000f536488ed4db33b0def845_0
2025-10-07 09:45:56,051 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) sqlStatementTRB.append(username) "select event from users_history where blabber=\\"" + username "select event from users_history where blabber=\\"" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 457ae9e216d53d7a9bedca66e82b0b3ece89ce670b23a62247fa879d4b02718c473926c59b86fc48737821d9972db5a95aaf9b3000f536488ed4db33b0def845_0
2025-10-07 09:45:56,052 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) sqlStatementTRB.append(username) "select event from users_history where blabber=\\"" + username "select event from users_history where blabber=\\"" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 457ae9e216d53d7a9bedca66e82b0b3ece89ce670b23a62247fa879d4b02718c473926c59b86fc48737821d9972db5a95aaf9b3000f536488ed4db33b0def845_0
2025-10-07 09:45:56,052 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0b9eccc89805ea45e2e3eff4addbf202a4ad82bd1fbc21de70cf5a863be79883208ee6e2be4fd7dddd397b8d79ad1e29dc23f0aa1099798ec6fd44823e37d3db_0
2025-10-07 09:45:56,052 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(username) "select event from users_history where blabber=\\"" + username "select event from users_history where blabber=\\"" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0faa17789735e097bdeba30308e28e916cf3be070a679023aa14738ee4e348d829aeab9ee61a5e7ff3af04c7a39d5acba7dffd5f67a89d76e0837c912ae7403d_0
2025-10-07 09:45:56,053 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(username) "select event from users_history where blabber=\\"" + username "select event from users_history where blabber=\\"" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0faa17789735e097bdeba30308e28e916cf3be070a679023aa14738ee4e348d829aeab9ee61a5e7ff3af04c7a39d5acba7dffd5f67a89d76e0837c912ae7403d_0
2025-10-07 09:45:56,053 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(username) "select event from users_history where blabber=\\"" + username "select event from users_history where blabber=\\"" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE %s$/" ...>) sqlStatement.sqlStatementQLFUNC(<... "=~/.*TABLE *$/" ...>) sqlStatementQLFUNC ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0faa17789735e097bdeba30308e28e916cf3be070a679023aa14738ee4e348d829aeab9ee61a5e7ff3af04c7a39d5acba7dffd5f67a89d76e0837c912ae7403d_0
2025-10-07 09:45:56,053 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 7ff149a271a4f95ab4218d055d69f1592f53136ae13f406426a5d688d9154e61bd7f4a298b0325b7256bc32872ea9a31f7917887598143aa303bdb2776d3c5e7_0
2025-10-07 09:45:56,054 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(username) "select event from users_history where blabber=\\"" + username "select event from users_history where blabber=\\"" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 07d54990a782a96f6d04911074340eaca8a1d2477755cb3fee6b5ab84f5ee169e18464a350ca1fbb71478b814e2aacf0f20abf4076d8f2f29f86f8edce0aa8e2_0
2025-10-07 09:45:56,054 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(username) "select event from users_history where blabber=\\"" + username "select event from users_history where blabber=\\"" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 07d54990a782a96f6d04911074340eaca8a1d2477755cb3fee6b5ab84f5ee169e18464a350ca1fbb71478b814e2aacf0f20abf4076d8f2f29f86f8edce0aa8e2_0
2025-10-07 09:45:56,054 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() sqlStatementTRB.append(username) "select event from users_history where blabber=\\"" + username "select event from users_history where blabber=\\"" += username (String sqlStatementTR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new sqlStatementTRB(..., username, ...) sqlStatement.sqlStatementQLFUNC("...") sqlStatementQLFUNC addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection $C). ... .createStatement(...). ... .sqlStatementQLFUNC(...) (java.sql.Statement sqlStatement). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .sqlStatementQLFUNC(...) sqlStatementQLFUNC nativeSQL|prepareCall|prepareStatement (java.sql.Connection $C). ... .sqlStatementQLFUNC(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 07d54990a782a96f6d04911074340eaca8a1d2477755cb3fee6b5ab84f5ee169e18464a350ca1fbb71478b814e2aacf0f20abf4076d8f2f29f86f8edce0aa8e2_0
2025-10-07 09:45:56,055 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 5f3f4ce4db4ca4fa1f793a3295a163099bb2243f35fbe09dff6cb9efb33acf9ec183181d5525cb8438f83290ab7a4260185968d5e185ad053751f5d15235d8a9_0
2025-10-07 09:45:56,055 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $STRB.append(username) "SELECT username, real_name, blab_name FROM users WHERE username = \'" + username "SELECT username, real_name, blab_name FROM users WHERE username = \'" += username (String $STR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new $STRB(..., username, ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement createNativeQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = db296c81e3e46141ff09894a40faf07e592fc793932b1fd30e69756e5017e55b3ca5c9c56a51ef8897599d8c751471cb90d5174a079792e5792ba989c6cef789_0
2025-10-07 09:45:56,055 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $STRB.append(username) "SELECT username, real_name, blab_name FROM users WHERE username = \'" + username "SELECT username, real_name, blab_name FROM users WHERE username = \'" += username (String $STR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new $STRB(..., username, ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement createNativeQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = db296c81e3e46141ff09894a40faf07e592fc793932b1fd30e69756e5017e55b3ca5c9c56a51ef8897599d8c751471cb90d5174a079792e5792ba989c6cef789_0
2025-10-07 09:45:56,056 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $STRB.append(username) "SELECT username, real_name, blab_name FROM users WHERE username = \'" + username "SELECT username, real_name, blab_name FROM users WHERE username = \'" += username (String $STR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new $STRB(..., username, ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement createNativeQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = db296c81e3e46141ff09894a40faf07e592fc793932b1fd30e69756e5017e55b3ca5c9c56a51ef8897599d8c751471cb90d5174a079792e5792ba989c6cef789_0
2025-10-07 09:45:56,056 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0b9eccc89805ea45e2e3eff4addbf202a4ad82bd1fbc21de70cf5a863be79883208ee6e2be4fd7dddd397b8d79ad1e29dc23f0aa1099798ec6fd44823e37d3db_0
2025-10-07 09:45:56,056 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append(username) "SELECT username, real_name, blab_name FROM users WHERE username = \'" + username "SELECT username, real_name, blab_name FROM users WHERE username = \'" += username (String $STR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new $STRB(..., username, ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = bf5bec72677371b4ff16c1d2c285ba93a4b71c62d9410ff851b2556cc62ec058d2afe1ee342df347781d60c9900a55a11c3a0f8f710049bf5621d003847a60af_0
2025-10-07 09:45:56,057 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append(username) "SELECT username, real_name, blab_name FROM users WHERE username = \'" + username "SELECT username, real_name, blab_name FROM users WHERE username = \'" += username (String $STR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new $STRB(..., username, ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = bf5bec72677371b4ff16c1d2c285ba93a4b71c62d9410ff851b2556cc62ec058d2afe1ee342df347781d60c9900a55a11c3a0f8f710049bf5621d003847a60af_0
2025-10-07 09:45:56,057 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append(username) "SELECT username, real_name, blab_name FROM users WHERE username = \'" + username "SELECT username, real_name, blab_name FROM users WHERE username = \'" += username (String $STR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new $STRB(..., username, ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = bf5bec72677371b4ff16c1d2c285ba93a4b71c62d9410ff851b2556cc62ec058d2afe1ee342df347781d60c9900a55a11c3a0f8f710049bf5621d003847a60af_0
2025-10-07 09:45:56,057 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 7ff149a271a4f95ab4218d055d69f1592f53136ae13f406426a5d688d9154e61bd7f4a298b0325b7256bc32872ea9a31f7917887598143aa303bdb2776d3c5e7_0
2025-10-07 09:45:56,058 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append(username) "SELECT username, real_name, blab_name FROM users WHERE username = \'" + username "SELECT username, real_name, blab_name FROM users WHERE username = \'" += username (String $STR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new $STRB(..., username, ...) $S.prepareStatement("...") prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = a98af4e6f05e9eab218485f3b2545e9f30e55c57a44b6cbe7cffbe74ba2b08a580fbd403ebe934ed11317a6aca8e568374f2bae9fc33d2bb105f072f3045cff8_0
2025-10-07 09:45:56,058 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append(username) "SELECT username, real_name, blab_name FROM users WHERE username = \'" + username "SELECT username, real_name, blab_name FROM users WHERE username = \'" += username (String $STR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new $STRB(..., username, ...) $S.prepareStatement("...") prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = a98af4e6f05e9eab218485f3b2545e9f30e55c57a44b6cbe7cffbe74ba2b08a580fbd403ebe934ed11317a6aca8e568374f2bae9fc33d2bb105f072f3045cff8_0
2025-10-07 09:45:56,058 - semgrep.rule_match - DEBUG - match_key = ('username.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() $STRB.append(username) "SELECT username, real_name, blab_name FROM users WHERE username = \'" + username "SELECT username, real_name, blab_name FROM users WHERE username = \'" += username (String $STR).concat(username) String.format(..., username, ...) String.join(..., username, ...) new $STRB(..., username, ...) $S.prepareStatement("...") prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = a98af4e6f05e9eab218485f3b2545e9f30e55c57a44b6cbe7cffbe74ba2b08a580fbd403ebe934ed11317a6aca8e568374f2bae9fc33d2bb105f072f3045cff8_0
2025-10-07 09:45:56,059 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 5f3f4ce4db4ca4fa1f793a3295a163099bb2243f35fbe09dff6cb9efb33acf9ec183181d5525cb8438f83290ab7a4260185968d5e185ad053751f5d15235d8a9_0
2025-10-07 09:45:56,059 - semgrep.rule_match - DEBUG - match_key = ('{"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}.concat(...) String.append({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) $X + {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} $X += {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} (String $STR).concat({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) String.format(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) String.join(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) new String(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement createNativeQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 6da8d5aa95a59dc95201ae2d5fbcbbb54757033640841ed222bce3990a806ed4f6f61c5e91a85e8f4e37b272ce469588b6779bfc467fa5ce906650ee96a3430f_0
2025-10-07 09:45:56,060 - semgrep.rule_match - DEBUG - match_key = ('{"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}.concat(...) String.append({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) $X + {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} $X += {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} (String $STR).concat({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) String.format(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) String.join(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) new String(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement createNativeQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 6da8d5aa95a59dc95201ae2d5fbcbbb54757033640841ed222bce3990a806ed4f6f61c5e91a85e8f4e37b272ce469588b6779bfc467fa5ce906650ee96a3430f_0
2025-10-07 09:45:56,060 - semgrep.rule_match - DEBUG - match_key = ('{"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}.concat(...) String.append({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) $X + {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} $X += {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} (String $STR).concat({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) String.format(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) String.join(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) new String(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement createNativeQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-formatted-sql-string') match_id = 6da8d5aa95a59dc95201ae2d5fbcbbb54757033640841ed222bce3990a806ed4f6f61c5e91a85e8f4e37b272ce469588b6779bfc467fa5ce906650ee96a3430f_0
2025-10-07 09:45:56,061 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = 0b9eccc89805ea45e2e3eff4addbf202a4ad82bd1fbc21de70cf5a863be79883208ee6e2be4fd7dddd397b8d79ad1e29dc23f0aa1099798ec6fd44823e37d3db_0
2025-10-07 09:45:56,061 - semgrep.rule_match - DEBUG - match_key = ('{"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() String.append({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) $X + {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} $X += {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} (String $STR).concat({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) String.format(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) String.join(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) new String(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = e31e4057cd5a05c423134788a4075a6127a97c588889eff44e65de15e03f68910b33a7dc0a52cbd0a89a1542eba5eb66d239b4aacc4487efef619d0f2c882043_0
2025-10-07 09:45:56,062 - semgrep.rule_match - DEBUG - match_key = ('{"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() String.append({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) $X + {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} $X += {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} (String $STR).concat({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) String.format(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) String.join(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) new String(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = e31e4057cd5a05c423134788a4075a6127a97c588889eff44e65de15e03f68910b33a7dc0a52cbd0a89a1542eba5eb66d239b4aacc4487efef619d0f2c882043_0
2025-10-07 09:45:56,062 - semgrep.rule_match - DEBUG - match_key = ('{"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}.concat(...) $REQ.getCookies() $REQ.getHeader($KEY) $REQ.getHeaderNames() $REQ.getHeaders($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPart($KEY) $REQ.getParts() $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() String.append({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) $X + {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} $X += {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} (String $STR).concat({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) String.format(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) String.join(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) new String(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) $S.prepareStatement("...") $S.prepareStatement(<... "=~/.*TABLE %s$/" ...>) $S.prepareStatement(<... "=~/.*TABLE *$/" ...>) prepareStatement ^(batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update)$ (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-sql-injection-comprehensive') match_id = e31e4057cd5a05c423134788a4075a6127a97c588889eff44e65de15e03f68910b33a7dc0a52cbd0a89a1542eba5eb66d239b4aacc4487efef619d0f2c882043_0
2025-10-07 09:45:56,062 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 7ff149a271a4f95ab4218d055d69f1592f53136ae13f406426a5d688d9154e61bd7f4a298b0325b7256bc32872ea9a31f7917887598143aa303bdb2776d3c5e7_0
2025-10-07 09:45:56,063 - semgrep.rule_match - DEBUG - match_key = ('{"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() String.append({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) $X + {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} $X += {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} (String $STR).concat({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) String.format(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) String.join(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) new String(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) $S.prepareStatement("...") prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 118e107b3a50330939278be6b729982b6ca583c7d6ec8b525f3175a05c233b0429277647df2cf234e179ba80a7e23ee643a61566226262eb9081fb37bbddda5d_0
2025-10-07 09:45:56,063 - semgrep.rule_match - DEBUG - match_key = ('{"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() String.append({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) $X + {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} $X += {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} (String $STR).concat({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) String.format(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) String.join(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) new String(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) $S.prepareStatement("...") prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 118e107b3a50330939278be6b729982b6ca583c7d6ec8b525f3175a05c233b0429277647df2cf234e179ba80a7e23ee643a61566226262eb9081fb37bbddda5d_0
2025-10-07 09:45:56,064 - semgrep.rule_match - DEBUG - match_key = ('{"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}.concat(...) $REQ.getHeader($KEY) $REQ.getInputStream() $REQ.getParameter($KEY) $REQ.getParameterMap() $REQ.getParameterValues($KEY) $REQ.getPathInfo() $REQ.getQueryString() $REQ.getReader() String.append({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) $X + {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} $X += {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"} (String $STR).concat({"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}) String.format(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) String.join(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) new String(..., {"UPDATE users SET username=? WHERE username=?""UPDATE blabs SET blabber=? WHERE blabber=?""UPDATE comments SET blabber=? WHERE blabber=?""UPDATE listeners SET blabber=? WHERE blabber=?""UPDATE listeners SET listener=? WHERE listener=?""UPDATE users_history SET blabber=? WHERE blabber=?"}, ...) $S.prepareStatement("...") prepareStatement addBatch|execute|executeLargeUpdate|executeQuery|executeUpdate (java.sql.Connection connect). ... .createStatement(...). ... .prepareStatement(...) (java.sql.Statement $S). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.JdbcTemplate $T). ... .prepareStatement(...) prepareStatement batchUpdate|execute|query|queryForList|queryForMap|queryForObject|queryForRowSet|queryForStream|update (org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate $T). ... .prepareStatement(...) prepareStatement createNativeQuery|createQuery (javax.persistence.EntityManager $EM). ... .prepareStatement(...) prepareStatement nativeSQL|prepareCall|prepareStatement (java.sql.Connection connect). ... .prepareStatement(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-spring-dto-sql-injection') match_id = 118e107b3a50330939278be6b729982b6ca583c7d6ec8b525f3175a05c233b0429277647df2cf234e179ba80a7e23ee643a61566226262eb9081fb37bbddda5d_0
2025-10-07 09:45:56,064 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java_smtp_rule-SmtpClient') match_id = 064137584132aefc98364227abab2cd845498b74210099f3ed05aad4e5e33a95aea6b22a89731e4546be0603526d0f6eb1b427dc727126b2bd21cc2e3c039882_0
2025-10-07 09:45:56,064 - semgrep.rule_match - DEBUG - match_key = ('getMessage ^get message.addHeader($ARG, t.getMessage(...) + ...) message.addHeader($ARG, t.getMessage(...)) message.addHeader($ARG, ... + t.getMessage(...) + ...) message.addHeader($ARG, ... + t.getMessage(...)) message.addHeader(t.getMessage(...) + ..., $ARG) message.addHeader(t.getMessage(...), $ARG) message.addHeader(... + t.getMessage(...) + ..., $ARG) message.addHeader(... + t.getMessage(...), $ARG) message.setDescription(t.getMessage(...)) message.setDisposition(t.getMessage(...) + ...) message.setDisposition(... + t.getMessage(...) + ...) message.setDisposition(... + t.getMessage(...)) message.setSubject(t.getMessage(...) + ...) message.setSubject(t.getMessage(...)) message.setSubject(... + t.getMessage(...) + ...) message.setSubject(... + t.getMessage(...)) message.addHeader($ARG, $VAR) message.addHeader($VAR, $ARG) message.setDescription($VAR) message.setDisposition($VAR) message.setSubject($VAR) $VAR ^[a-zA-Z_$][a-zA-Z0-9_$]*$ message = new MimeMessage(...);\n...\n', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java_smtp_rule-SmtpClient') match_id = 153799b804b9094c6d561ad6d75dce862c808856e07210ce146b4eb38b2c8bb2594b134ff0ca47558b3df98c1e40c70d89feab8b604f59ef90dd9e0e3230a39b_0
2025-10-07 09:45:56,065 - semgrep.rule_match - DEBUG - match_key = ('getMessage ^get message.addHeader($ARG, t.getMessage(...) + ...) message.addHeader($ARG, t.getMessage(...)) message.addHeader($ARG, ... + t.getMessage(...) + ...) message.addHeader($ARG, ... + t.getMessage(...)) message.addHeader(t.getMessage(...) + ..., $ARG) message.addHeader(t.getMessage(...), $ARG) message.addHeader(... + t.getMessage(...) + ..., $ARG) message.addHeader(... + t.getMessage(...), $ARG) message.setDescription(t.getMessage(...)) message.setDisposition(t.getMessage(...) + ...) message.setDisposition(... + t.getMessage(...) + ...) message.setDisposition(... + t.getMessage(...)) message.setSubject(t.getMessage(...) + ...) message.setSubject(t.getMessage(...)) message.setSubject(... + t.getMessage(...) + ...) message.setSubject(... + t.getMessage(...)) message.addHeader($ARG, $VAR) message.addHeader($VAR, $ARG) message.setDescription($VAR) message.setDisposition($VAR) message.setSubject($VAR) $VAR ^[a-zA-Z_$][a-zA-Z0-9_$]*$ message = new MimeMessage(...);\n...\n', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java_smtp_rule-SmtpClient') match_id = 153799b804b9094c6d561ad6d75dce862c808856e07210ce146b4eb38b2c8bb2594b134ff0ca47558b3df98c1e40c70d89feab8b604f59ef90dd9e0e3230a39b_0
2025-10-07 09:45:56,065 - semgrep.rule_match - DEBUG - match_key = ('getMessage ^get message.addHeader($ARG, t.getMessage(...) + ...) message.addHeader($ARG, t.getMessage(...)) message.addHeader($ARG, ... + t.getMessage(...) + ...) message.addHeader($ARG, ... + t.getMessage(...)) message.addHeader(t.getMessage(...) + ..., $ARG) message.addHeader(t.getMessage(...), $ARG) message.addHeader(... + t.getMessage(...) + ..., $ARG) message.addHeader(... + t.getMessage(...), $ARG) message.setDescription(t.getMessage(...)) message.setDisposition(t.getMessage(...) + ...) message.setDisposition(... + t.getMessage(...) + ...) message.setDisposition(... + t.getMessage(...)) message.setSubject(t.getMessage(...) + ...) message.setSubject(t.getMessage(...)) message.setSubject(... + t.getMessage(...) + ...) message.setSubject(... + t.getMessage(...)) message.addHeader($ARG, $VAR) message.addHeader($VAR, $ARG) message.setDescription($VAR) message.setDisposition($VAR) message.setSubject($VAR) $VAR ^[a-zA-Z_$][a-zA-Z0-9_$]*$ message = new MimeMessage(...);\n...\n', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java_smtp_rule-SmtpClient') match_id = 153799b804b9094c6d561ad6d75dce862c808856e07210ce146b4eb38b2c8bb2594b134ff0ca47558b3df98c1e40c70d89feab8b604f59ef90dd9e0e3230a39b_0
2025-10-07 09:45:56,066 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-deprecated-digest') match_id = 3e3f906f8d7c0e3f9aa13b674c4b09b8776a40bc06fd8bd132fcaefccc170fb452030e49c5124c8a85c688f66ec4350f3923b4ab11b822a30413e34ae0b6e7b2_0
2025-10-07 09:45:56,066 - semgrep.rule_match - DEBUG - match_key = ('"TLS_RSA_WITH_RC4_.*"|".*RC4_.*"|".*MD5.*"|".*SHA_1.*" MessageDigest.getInstance("MD2") MessageDigest.getInstance("MD5") MessageDigest.getInstance("SHA") MessageDigest.getInstance("SHA-1") MessageDigest.getInstance("SHA0") import java.security.MessageDigest;\n...\n $X.md2(...) $X.md5(...) $X.md5Hex(...) $X.sha1(...) $X.sha1Hex(...) import org.apache.commons.codec.digest.DigestUtils;\n...\n $X.md5() $X.sha1() import com.google.common.hash.Hashing;\n...\n $X.md5Digest(...) $X.md5DigestAsHex(...) $X.sha1Digest(...) $X.sha1DigestAsHex(...) import org.springframework.util.DigestUtils;\n...\n $X.setAlgorithm("MD5") $X.setAlgorithm("SHA-1") new StandardStringDigester(...) import org.jasypt.digest.StandardStringDigester;\n...\n MessageDigestPasswordEncoder(...) import org.springframework.security.crypto.password.MessageDigestPasswordEncoder;\n...\n import org.apache.shiro.authc.credential.Sha1CredentialsMatcher;\n...\n new Sha1CredentialsMatcher(...) import org.apache.shiro.crypto.hash.Md5Hash;\n...\n new Md5Hash(...) import org.bouncycastle.crypto.digests.MD5Digest;\n...\n new MD5Digest(...) import org.bouncycastle.crypto.digests.RIPEMD128Digest;\n...\n new RIPEMD128Digest(...) import org.bouncycastle.crypto.digests.RIPEMD160Digest;\n...\n new RIPEMD160Digest(...) import org.bouncycastle.crypto.digests.SHA1Digest;\n...\n new SHA1Digest(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-deprecated-digest') match_id = 41138859fd04f5f9579677b97010bfe3606482fa8585afb18100761ab8cda3c8a3fbbec97efe2ecb8ddf77979a426124d5ccd65a11ca40b35d1505b0a2af2410_0
2025-10-07 09:45:56,066 - semgrep.rule_match - DEBUG - match_key = ('"TLS_RSA_WITH_RC4_.*"|".*RC4_.*"|".*MD5.*"|".*SHA_1.*" MessageDigest.getInstance("MD2") MessageDigest.getInstance("MD5") MessageDigest.getInstance("SHA") MessageDigest.getInstance("SHA-1") MessageDigest.getInstance("SHA0") import java.security.MessageDigest;\n...\n $X.md2(...) $X.md5(...) $X.md5Hex(...) $X.sha1(...) $X.sha1Hex(...) import org.apache.commons.codec.digest.DigestUtils;\n...\n $X.md5() $X.sha1() import com.google.common.hash.Hashing;\n...\n $X.md5Digest(...) $X.md5DigestAsHex(...) $X.sha1Digest(...) $X.sha1DigestAsHex(...) import org.springframework.util.DigestUtils;\n...\n $X.setAlgorithm("MD5") $X.setAlgorithm("SHA-1") new StandardStringDigester(...) import org.jasypt.digest.StandardStringDigester;\n...\n MessageDigestPasswordEncoder(...) import org.springframework.security.crypto.password.MessageDigestPasswordEncoder;\n...\n import org.apache.shiro.authc.credential.Sha1CredentialsMatcher;\n...\n new Sha1CredentialsMatcher(...) import org.apache.shiro.crypto.hash.Md5Hash;\n...\n new Md5Hash(...) import org.bouncycastle.crypto.digests.MD5Digest;\n...\n new MD5Digest(...) import org.bouncycastle.crypto.digests.RIPEMD128Digest;\n...\n new RIPEMD128Digest(...) import org.bouncycastle.crypto.digests.RIPEMD160Digest;\n...\n new RIPEMD160Digest(...) import org.bouncycastle.crypto.digests.SHA1Digest;\n...\n new SHA1Digest(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-deprecated-digest') match_id = 41138859fd04f5f9579677b97010bfe3606482fa8585afb18100761ab8cda3c8a3fbbec97efe2ecb8ddf77979a426124d5ccd65a11ca40b35d1505b0a2af2410_0
2025-10-07 09:45:56,067 - semgrep.rule_match - DEBUG - match_key = ('"TLS_RSA_WITH_RC4_.*"|".*RC4_.*"|".*MD5.*"|".*SHA_1.*" MessageDigest.getInstance("MD2") MessageDigest.getInstance("MD5") MessageDigest.getInstance("SHA") MessageDigest.getInstance("SHA-1") MessageDigest.getInstance("SHA0") import java.security.MessageDigest;\n...\n $X.md2(...) $X.md5(...) $X.md5Hex(...) $X.sha1(...) $X.sha1Hex(...) import org.apache.commons.codec.digest.DigestUtils;\n...\n $X.md5() $X.sha1() import com.google.common.hash.Hashing;\n...\n $X.md5Digest(...) $X.md5DigestAsHex(...) $X.sha1Digest(...) $X.sha1DigestAsHex(...) import org.springframework.util.DigestUtils;\n...\n $X.setAlgorithm("MD5") $X.setAlgorithm("SHA-1") new StandardStringDigester(...) import org.jasypt.digest.StandardStringDigester;\n...\n MessageDigestPasswordEncoder(...) import org.springframework.security.crypto.password.MessageDigestPasswordEncoder;\n...\n import org.apache.shiro.authc.credential.Sha1CredentialsMatcher;\n...\n new Sha1CredentialsMatcher(...) import org.apache.shiro.crypto.hash.Md5Hash;\n...\n new Md5Hash(...) import org.bouncycastle.crypto.digests.MD5Digest;\n...\n new MD5Digest(...) import org.bouncycastle.crypto.digests.RIPEMD128Digest;\n...\n new RIPEMD128Digest(...) import org.bouncycastle.crypto.digests.RIPEMD160Digest;\n...\n new RIPEMD160Digest(...) import org.bouncycastle.crypto.digests.SHA1Digest;\n...\n new SHA1Digest(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-deprecated-digest') match_id = 41138859fd04f5f9579677b97010bfe3606482fa8585afb18100761ab8cda3c8a3fbbec97efe2ecb8ddf77979a426124d5ccd65a11ca40b35d1505b0a2af2410_0
2025-10-07 09:45:56,067 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java_crypto_rule-WeakMessageDigest') match_id = 28cbbfbd2ce6aa927dfb27c4d1b2c0f7cec3df60afc573666b4d7184e14c53a035444ee22db4380eb1978ec75444c9ece6a207c2fba891c27c613f864af64176_0
2025-10-07 09:45:56,068 - semgrep.rule_match - DEBUG - match_key = ('MD5 MD5 in (\n  "MD2" "MD4" "MD5" "MD5withRSA"\n  "SHA-1" "SHA1withRSA" "SHA1withDSA"\n)\n $PROP = (java.util.Properties $P).getProperty(..., "MD5");\n...\njava.security.MessageDigest.getInstance("MD5", ...);\n $PROP = (java.util.Properties $P).getProperty(..., "MD5");\n...\njava.security.Signature.getInstance("MD5", ...);\n java.security.MessageDigest.getInstance("MD5", ...) java.security.Signature.getInstance("MD5", ...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java_crypto_rule-WeakMessageDigest') match_id = bb0d7d109c07f2fe4049f2c3b043993044165390313ee1caf55ffa0c4e7878e974b36ad735c941ebbe7e597f93ec1b75e7be86c044bc055f060a2c5958af2e05_0
2025-10-07 09:45:56,068 - semgrep.rule_match - DEBUG - match_key = ('MD5 MD5 in (\n  "MD2" "MD4" "MD5" "MD5withRSA"\n  "SHA-1" "SHA1withRSA" "SHA1withDSA"\n)\n $PROP = (java.util.Properties $P).getProperty(..., "MD5");\n...\njava.security.MessageDigest.getInstance("MD5", ...);\n $PROP = (java.util.Properties $P).getProperty(..., "MD5");\n...\njava.security.Signature.getInstance("MD5", ...);\n java.security.MessageDigest.getInstance("MD5", ...) java.security.Signature.getInstance("MD5", ...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java_crypto_rule-WeakMessageDigest') match_id = bb0d7d109c07f2fe4049f2c3b043993044165390313ee1caf55ffa0c4e7878e974b36ad735c941ebbe7e597f93ec1b75e7be86c044bc055f060a2c5958af2e05_0
2025-10-07 09:45:56,068 - semgrep.rule_match - DEBUG - match_key = ('MD5 MD5 in (\n  "MD2" "MD4" "MD5" "MD5withRSA"\n  "SHA-1" "SHA1withRSA" "SHA1withDSA"\n)\n $PROP = (java.util.Properties $P).getProperty(..., "MD5");\n...\njava.security.MessageDigest.getInstance("MD5", ...);\n $PROP = (java.util.Properties $P).getProperty(..., "MD5");\n...\njava.security.Signature.getInstance("MD5", ...);\n java.security.MessageDigest.getInstance("MD5", ...) java.security.Signature.getInstance("MD5", ...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java_crypto_rule-WeakMessageDigest') match_id = bb0d7d109c07f2fe4049f2c3b043993044165390313ee1caf55ffa0c4e7878e974b36ad735c941ebbe7e597f93ec1b75e7be86c044bc055f060a2c5958af2e05_0
2025-10-07 09:45:56,069 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-deprecated-digest') match_id = 3e3f906f8d7c0e3f9aa13b674c4b09b8776a40bc06fd8bd132fcaefccc170fb452030e49c5124c8a85c688f66ec4350f3923b4ab11b822a30413e34ae0b6e7b2_0
2025-10-07 09:45:56,069 - semgrep.rule_match - DEBUG - match_key = ('"TLS_RSA_WITH_RC4_.*"|".*RC4_.*"|".*MD5.*"|".*SHA_1.*" $OBJ.getInstance("MD2") $OBJ.getInstance("MD5") $OBJ.getInstance("SHA") $OBJ.getInstance("SHA-1") $OBJ.getInstance("SHA0") import java.security.MessageDigest;\n...\n $X.md2(...) $X.md5(...) $X.md5Hex(...) $X.sha1(...) $X.sha1Hex(...) import org.apache.commons.codec.digest.DigestUtils;\n...\n $X.md5() $X.sha1() import com.google.common.hash.Hashing;\n...\n $X.md5Digest(...) $X.md5DigestAsHex(...) $X.sha1Digest(...) $X.sha1DigestAsHex(...) import org.springframework.util.DigestUtils;\n...\n $X.setAlgorithm("MD5") $X.setAlgorithm("SHA-1") new StandardStringDigester(...) import org.jasypt.digest.StandardStringDigester;\n...\n MessageDigestPasswordEncoder(...) import org.springframework.security.crypto.password.MessageDigestPasswordEncoder;\n...\n import org.apache.shiro.authc.credential.Sha1CredentialsMatcher;\n...\n new Sha1CredentialsMatcher(...) import org.apache.shiro.crypto.hash.Md5Hash;\n...\n new Md5Hash(...) import org.bouncycastle.crypto.digests.MD5Digest;\n...\n new MD5Digest(...) import org.bouncycastle.crypto.digests.RIPEMD128Digest;\n...\n new RIPEMD128Digest(...) import org.bouncycastle.crypto.digests.RIPEMD160Digest;\n...\n new RIPEMD160Digest(...) import org.bouncycastle.crypto.digests.SHA1Digest;\n...\n new SHA1Digest(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-deprecated-digest') match_id = 984feb5db1b7d7c7cec3a3f815ed42c39e95cf23a19bb4e63f39a2fd3df7758159062f8eea9dc95f17fd6d8ad620e34d2a873567a47c4321e69fb8f6b98a9571_0
2025-10-07 09:45:56,070 - semgrep.rule_match - DEBUG - match_key = ('"TLS_RSA_WITH_RC4_.*"|".*RC4_.*"|".*MD5.*"|".*SHA_1.*" $OBJ.getInstance("MD2") $OBJ.getInstance("MD5") $OBJ.getInstance("SHA") $OBJ.getInstance("SHA-1") $OBJ.getInstance("SHA0") import java.security.MessageDigest;\n...\n $X.md2(...) $X.md5(...) $X.md5Hex(...) $X.sha1(...) $X.sha1Hex(...) import org.apache.commons.codec.digest.DigestUtils;\n...\n $X.md5() $X.sha1() import com.google.common.hash.Hashing;\n...\n $X.md5Digest(...) $X.md5DigestAsHex(...) $X.sha1Digest(...) $X.sha1DigestAsHex(...) import org.springframework.util.DigestUtils;\n...\n $X.setAlgorithm("MD5") $X.setAlgorithm("SHA-1") new StandardStringDigester(...) import org.jasypt.digest.StandardStringDigester;\n...\n MessageDigestPasswordEncoder(...) import org.springframework.security.crypto.password.MessageDigestPasswordEncoder;\n...\n import org.apache.shiro.authc.credential.Sha1CredentialsMatcher;\n...\n new Sha1CredentialsMatcher(...) import org.apache.shiro.crypto.hash.Md5Hash;\n...\n new Md5Hash(...) import org.bouncycastle.crypto.digests.MD5Digest;\n...\n new MD5Digest(...) import org.bouncycastle.crypto.digests.RIPEMD128Digest;\n...\n new RIPEMD128Digest(...) import org.bouncycastle.crypto.digests.RIPEMD160Digest;\n...\n new RIPEMD160Digest(...) import org.bouncycastle.crypto.digests.SHA1Digest;\n...\n new SHA1Digest(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-deprecated-digest') match_id = 984feb5db1b7d7c7cec3a3f815ed42c39e95cf23a19bb4e63f39a2fd3df7758159062f8eea9dc95f17fd6d8ad620e34d2a873567a47c4321e69fb8f6b98a9571_0
2025-10-07 09:45:56,070 - semgrep.rule_match - DEBUG - match_key = ('"TLS_RSA_WITH_RC4_.*"|".*RC4_.*"|".*MD5.*"|".*SHA_1.*" $OBJ.getInstance("MD2") $OBJ.getInstance("MD5") $OBJ.getInstance("SHA") $OBJ.getInstance("SHA-1") $OBJ.getInstance("SHA0") import java.security.MessageDigest;\n...\n $X.md2(...) $X.md5(...) $X.md5Hex(...) $X.sha1(...) $X.sha1Hex(...) import org.apache.commons.codec.digest.DigestUtils;\n...\n $X.md5() $X.sha1() import com.google.common.hash.Hashing;\n...\n $X.md5Digest(...) $X.md5DigestAsHex(...) $X.sha1Digest(...) $X.sha1DigestAsHex(...) import org.springframework.util.DigestUtils;\n...\n $X.setAlgorithm("MD5") $X.setAlgorithm("SHA-1") new StandardStringDigester(...) import org.jasypt.digest.StandardStringDigester;\n...\n MessageDigestPasswordEncoder(...) import org.springframework.security.crypto.password.MessageDigestPasswordEncoder;\n...\n import org.apache.shiro.authc.credential.Sha1CredentialsMatcher;\n...\n new Sha1CredentialsMatcher(...) import org.apache.shiro.crypto.hash.Md5Hash;\n...\n new Md5Hash(...) import org.bouncycastle.crypto.digests.MD5Digest;\n...\n new MD5Digest(...) import org.bouncycastle.crypto.digests.RIPEMD128Digest;\n...\n new RIPEMD128Digest(...) import org.bouncycastle.crypto.digests.RIPEMD160Digest;\n...\n new RIPEMD160Digest(...) import org.bouncycastle.crypto.digests.SHA1Digest;\n...\n new SHA1Digest(...)', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-deprecated-digest') match_id = 984feb5db1b7d7c7cec3a3f815ed42c39e95cf23a19bb4e63f39a2fd3df7758159062f8eea9dc95f17fd6d8ad620e34d2a873567a47c4321e69fb8f6b98a9571_0
2025-10-07 09:45:56,070 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-deprecated-digest-use') match_id = 2633b3f37fe833abf87fb98205831c38ab034fd133607f7f24e965ae4765db4ecf904c84379b1ce63a9473b4dd6cba4c8ec21fb389d8de95167fe3cc3dfeb547_0
2025-10-07 09:45:56,071 - semgrep.rule_match - DEBUG - match_key = ('"MD5"\n "RC2"\n "RC4"\n "SHA"\n "SHA-1"\n MessageDigest.getInstance(...) $SECURITY.MessageDigest.getInstance(...) import java.security.*;\n...\n import java.security.MessageDigest;\n...\n import javax.crypto.*;\n...\n import javax.crypto.Cipher;\n...\n', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-deprecated-digest-use') match_id = 40423d00894b96dbc864bfbdaacf42de6dc809bd76cdd4b8b6ed0a7c20f2ee1a32c8aa7d05752901d7dcdf484fa44f9bd29d462bc89fa68e6599979248ef10a9_0
2025-10-07 09:45:56,071 - semgrep.rule_match - DEBUG - match_key = ('"MD5"\n "RC2"\n "RC4"\n "SHA"\n "SHA-1"\n MessageDigest.getInstance(...) $SECURITY.MessageDigest.getInstance(...) import java.security.*;\n...\n import java.security.MessageDigest;\n...\n import javax.crypto.*;\n...\n import javax.crypto.Cipher;\n...\n', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-deprecated-digest-use') match_id = 40423d00894b96dbc864bfbdaacf42de6dc809bd76cdd4b8b6ed0a7c20f2ee1a32c8aa7d05752901d7dcdf484fa44f9bd29d462bc89fa68e6599979248ef10a9_0
2025-10-07 09:45:56,072 - semgrep.rule_match - DEBUG - match_key = ('"MD5"\n "RC2"\n "RC4"\n "SHA"\n "SHA-1"\n MessageDigest.getInstance(...) $SECURITY.MessageDigest.getInstance(...) import java.security.*;\n...\n import java.security.MessageDigest;\n...\n import javax.crypto.*;\n...\n import javax.crypto.Cipher;\n...\n', PosixPath('app/src/main/java/com/veracode/verademo/controller/UserController.java'), 'java-deprecated-digest-use') match_id = 40423d00894b96dbc864bfbdaacf42de6dc809bd76cdd4b8b6ed0a7c20f2ee1a32c8aa7d05752901d7dcdf484fa44f9bd29d462bc89fa68e6599979248ef10a9_0
2025-10-07 09:45:56,072 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java-deprecated-digest') match_id = 756d145315bab3af518e7927c4e1861fb7d3af31bed47c68ba7d3c429a23ff682dc7942b59e03689c155da8ceea02af5653ab309c7ff12a79e67a9b5f4329ba4_0
2025-10-07 09:45:56,072 - semgrep.rule_match - DEBUG - match_key = ('"TLS_RSA_WITH_RC4_.*"|".*RC4_.*"|".*MD5.*"|".*SHA_1.*" MessageDigest.getInstance("MD2") MessageDigest.getInstance("MD5") MessageDigest.getInstance("SHA") MessageDigest.getInstance("SHA-1") MessageDigest.getInstance("SHA0") import java.security.MessageDigest;\n...\n $X.md2(...) $X.md5(...) $X.md5Hex(...) $X.sha1(...) $X.sha1Hex(...) import org.apache.commons.codec.digest.DigestUtils;\n...\n $X.md5() $X.sha1() import com.google.common.hash.Hashing;\n...\n $X.md5Digest(...) $X.md5DigestAsHex(...) $X.sha1Digest(...) $X.sha1DigestAsHex(...) import org.springframework.util.DigestUtils;\n...\n $X.setAlgorithm("MD5") $X.setAlgorithm("SHA-1") new StandardStringDigester(...) import org.jasypt.digest.StandardStringDigester;\n...\n MessageDigestPasswordEncoder(...) import org.springframework.security.crypto.password.MessageDigestPasswordEncoder;\n...\n import org.apache.shiro.authc.credential.Sha1CredentialsMatcher;\n...\n new Sha1CredentialsMatcher(...) import org.apache.shiro.crypto.hash.Md5Hash;\n...\n new Md5Hash(...) import org.bouncycastle.crypto.digests.MD5Digest;\n...\n new MD5Digest(...) import org.bouncycastle.crypto.digests.RIPEMD128Digest;\n...\n new RIPEMD128Digest(...) import org.bouncycastle.crypto.digests.RIPEMD160Digest;\n...\n new RIPEMD160Digest(...) import org.bouncycastle.crypto.digests.SHA1Digest;\n...\n new SHA1Digest(...)', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java-deprecated-digest') match_id = f5923f1a8c96006668406cf5cd9080451b4534b748248d4806b9efa611f1c0cfa452190c66c77aa214556d5e3c8399bf066cdb9dd55a90ab112e4946e6042c3a_0
2025-10-07 09:45:56,072 - semgrep.rule_match - DEBUG - match_key = ('"TLS_RSA_WITH_RC4_.*"|".*RC4_.*"|".*MD5.*"|".*SHA_1.*" MessageDigest.getInstance("MD2") MessageDigest.getInstance("MD5") MessageDigest.getInstance("SHA") MessageDigest.getInstance("SHA-1") MessageDigest.getInstance("SHA0") import java.security.MessageDigest;\n...\n $X.md2(...) $X.md5(...) $X.md5Hex(...) $X.sha1(...) $X.sha1Hex(...) import org.apache.commons.codec.digest.DigestUtils;\n...\n $X.md5() $X.sha1() import com.google.common.hash.Hashing;\n...\n $X.md5Digest(...) $X.md5DigestAsHex(...) $X.sha1Digest(...) $X.sha1DigestAsHex(...) import org.springframework.util.DigestUtils;\n...\n $X.setAlgorithm("MD5") $X.setAlgorithm("SHA-1") new StandardStringDigester(...) import org.jasypt.digest.StandardStringDigester;\n...\n MessageDigestPasswordEncoder(...) import org.springframework.security.crypto.password.MessageDigestPasswordEncoder;\n...\n import org.apache.shiro.authc.credential.Sha1CredentialsMatcher;\n...\n new Sha1CredentialsMatcher(...) import org.apache.shiro.crypto.hash.Md5Hash;\n...\n new Md5Hash(...) import org.bouncycastle.crypto.digests.MD5Digest;\n...\n new MD5Digest(...) import org.bouncycastle.crypto.digests.RIPEMD128Digest;\n...\n new RIPEMD128Digest(...) import org.bouncycastle.crypto.digests.RIPEMD160Digest;\n...\n new RIPEMD160Digest(...) import org.bouncycastle.crypto.digests.SHA1Digest;\n...\n new SHA1Digest(...)', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java-deprecated-digest') match_id = f5923f1a8c96006668406cf5cd9080451b4534b748248d4806b9efa611f1c0cfa452190c66c77aa214556d5e3c8399bf066cdb9dd55a90ab112e4946e6042c3a_0
2025-10-07 09:45:56,073 - semgrep.rule_match - DEBUG - match_key = ('"TLS_RSA_WITH_RC4_.*"|".*RC4_.*"|".*MD5.*"|".*SHA_1.*" MessageDigest.getInstance("MD2") MessageDigest.getInstance("MD5") MessageDigest.getInstance("SHA") MessageDigest.getInstance("SHA-1") MessageDigest.getInstance("SHA0") import java.security.MessageDigest;\n...\n $X.md2(...) $X.md5(...) $X.md5Hex(...) $X.sha1(...) $X.sha1Hex(...) import org.apache.commons.codec.digest.DigestUtils;\n...\n $X.md5() $X.sha1() import com.google.common.hash.Hashing;\n...\n $X.md5Digest(...) $X.md5DigestAsHex(...) $X.sha1Digest(...) $X.sha1DigestAsHex(...) import org.springframework.util.DigestUtils;\n...\n $X.setAlgorithm("MD5") $X.setAlgorithm("SHA-1") new StandardStringDigester(...) import org.jasypt.digest.StandardStringDigester;\n...\n MessageDigestPasswordEncoder(...) import org.springframework.security.crypto.password.MessageDigestPasswordEncoder;\n...\n import org.apache.shiro.authc.credential.Sha1CredentialsMatcher;\n...\n new Sha1CredentialsMatcher(...) import org.apache.shiro.crypto.hash.Md5Hash;\n...\n new Md5Hash(...) import org.bouncycastle.crypto.digests.MD5Digest;\n...\n new MD5Digest(...) import org.bouncycastle.crypto.digests.RIPEMD128Digest;\n...\n new RIPEMD128Digest(...) import org.bouncycastle.crypto.digests.RIPEMD160Digest;\n...\n new RIPEMD160Digest(...) import org.bouncycastle.crypto.digests.SHA1Digest;\n...\n new SHA1Digest(...)', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java-deprecated-digest') match_id = f5923f1a8c96006668406cf5cd9080451b4534b748248d4806b9efa611f1c0cfa452190c66c77aa214556d5e3c8399bf066cdb9dd55a90ab112e4946e6042c3a_0
2025-10-07 09:45:56,073 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java_crypto_rule-WeakMessageDigest') match_id = 22eeaea7064a815883313e2e5922bfe5ba95326de30a204d6e74203abd7f4dafb7d02b40d6a4153006d862a9cda4af73ba55a1783d86c5c2a870f4c9aa9f7e3a_0
2025-10-07 09:45:56,073 - semgrep.rule_match - DEBUG - match_key = ('MD5 MD5 in (\n  "MD2" "MD4" "MD5" "MD5withRSA"\n  "SHA-1" "SHA1withRSA" "SHA1withDSA"\n)\n $PROP = (java.util.Properties $P).getProperty(..., "MD5");\n...\njava.security.MessageDigest.getInstance("MD5", ...);\n $PROP = (java.util.Properties $P).getProperty(..., "MD5");\n...\njava.security.Signature.getInstance("MD5", ...);\n java.security.MessageDigest.getInstance("MD5", ...) java.security.Signature.getInstance("MD5", ...)', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java_crypto_rule-WeakMessageDigest') match_id = c7ca636bbb611f590a12c51dd9a0d5df7b908eb85b9f8589f502d75cf48749a4f24fc920547cae89ecdcc0ef484c59793000af96fa6716d52760ad2d49b49fbd_0
2025-10-07 09:45:56,073 - semgrep.rule_match - DEBUG - match_key = ('MD5 MD5 in (\n  "MD2" "MD4" "MD5" "MD5withRSA"\n  "SHA-1" "SHA1withRSA" "SHA1withDSA"\n)\n $PROP = (java.util.Properties $P).getProperty(..., "MD5");\n...\njava.security.MessageDigest.getInstance("MD5", ...);\n $PROP = (java.util.Properties $P).getProperty(..., "MD5");\n...\njava.security.Signature.getInstance("MD5", ...);\n java.security.MessageDigest.getInstance("MD5", ...) java.security.Signature.getInstance("MD5", ...)', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java_crypto_rule-WeakMessageDigest') match_id = c7ca636bbb611f590a12c51dd9a0d5df7b908eb85b9f8589f502d75cf48749a4f24fc920547cae89ecdcc0ef484c59793000af96fa6716d52760ad2d49b49fbd_0
2025-10-07 09:45:56,074 - semgrep.rule_match - DEBUG - match_key = ('MD5 MD5 in (\n  "MD2" "MD4" "MD5" "MD5withRSA"\n  "SHA-1" "SHA1withRSA" "SHA1withDSA"\n)\n $PROP = (java.util.Properties $P).getProperty(..., "MD5");\n...\njava.security.MessageDigest.getInstance("MD5", ...);\n $PROP = (java.util.Properties $P).getProperty(..., "MD5");\n...\njava.security.Signature.getInstance("MD5", ...);\n java.security.MessageDigest.getInstance("MD5", ...) java.security.Signature.getInstance("MD5", ...)', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java_crypto_rule-WeakMessageDigest') match_id = c7ca636bbb611f590a12c51dd9a0d5df7b908eb85b9f8589f502d75cf48749a4f24fc920547cae89ecdcc0ef484c59793000af96fa6716d52760ad2d49b49fbd_0
2025-10-07 09:45:56,074 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java-deprecated-digest') match_id = 756d145315bab3af518e7927c4e1861fb7d3af31bed47c68ba7d3c429a23ff682dc7942b59e03689c155da8ceea02af5653ab309c7ff12a79e67a9b5f4329ba4_0
2025-10-07 09:45:56,074 - semgrep.rule_match - DEBUG - match_key = ('"TLS_RSA_WITH_RC4_.*"|".*RC4_.*"|".*MD5.*"|".*SHA_1.*" $OBJ.getInstance("MD2") $OBJ.getInstance("MD5") $OBJ.getInstance("SHA") $OBJ.getInstance("SHA-1") $OBJ.getInstance("SHA0") import java.security.MessageDigest;\n...\n $X.md2(...) $X.md5(...) $X.md5Hex(...) $X.sha1(...) $X.sha1Hex(...) import org.apache.commons.codec.digest.DigestUtils;\n...\n $X.md5() $X.sha1() import com.google.common.hash.Hashing;\n...\n $X.md5Digest(...) $X.md5DigestAsHex(...) $X.sha1Digest(...) $X.sha1DigestAsHex(...) import org.springframework.util.DigestUtils;\n...\n $X.setAlgorithm("MD5") $X.setAlgorithm("SHA-1") new StandardStringDigester(...) import org.jasypt.digest.StandardStringDigester;\n...\n MessageDigestPasswordEncoder(...) import org.springframework.security.crypto.password.MessageDigestPasswordEncoder;\n...\n import org.apache.shiro.authc.credential.Sha1CredentialsMatcher;\n...\n new Sha1CredentialsMatcher(...) import org.apache.shiro.crypto.hash.Md5Hash;\n...\n new Md5Hash(...) import org.bouncycastle.crypto.digests.MD5Digest;\n...\n new MD5Digest(...) import org.bouncycastle.crypto.digests.RIPEMD128Digest;\n...\n new RIPEMD128Digest(...) import org.bouncycastle.crypto.digests.RIPEMD160Digest;\n...\n new RIPEMD160Digest(...) import org.bouncycastle.crypto.digests.SHA1Digest;\n...\n new SHA1Digest(...)', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java-deprecated-digest') match_id = fb73199c3ad85947d6a041d026e53536b32ebffb1c4166fc060d856187927b8e3df1068b88654b201f3499441daa9b8761c98d6792c71f658373057fbb5543fc_0
2025-10-07 09:45:56,074 - semgrep.rule_match - DEBUG - match_key = ('"TLS_RSA_WITH_RC4_.*"|".*RC4_.*"|".*MD5.*"|".*SHA_1.*" $OBJ.getInstance("MD2") $OBJ.getInstance("MD5") $OBJ.getInstance("SHA") $OBJ.getInstance("SHA-1") $OBJ.getInstance("SHA0") import java.security.MessageDigest;\n...\n $X.md2(...) $X.md5(...) $X.md5Hex(...) $X.sha1(...) $X.sha1Hex(...) import org.apache.commons.codec.digest.DigestUtils;\n...\n $X.md5() $X.sha1() import com.google.common.hash.Hashing;\n...\n $X.md5Digest(...) $X.md5DigestAsHex(...) $X.sha1Digest(...) $X.sha1DigestAsHex(...) import org.springframework.util.DigestUtils;\n...\n $X.setAlgorithm("MD5") $X.setAlgorithm("SHA-1") new StandardStringDigester(...) import org.jasypt.digest.StandardStringDigester;\n...\n MessageDigestPasswordEncoder(...) import org.springframework.security.crypto.password.MessageDigestPasswordEncoder;\n...\n import org.apache.shiro.authc.credential.Sha1CredentialsMatcher;\n...\n new Sha1CredentialsMatcher(...) import org.apache.shiro.crypto.hash.Md5Hash;\n...\n new Md5Hash(...) import org.bouncycastle.crypto.digests.MD5Digest;\n...\n new MD5Digest(...) import org.bouncycastle.crypto.digests.RIPEMD128Digest;\n...\n new RIPEMD128Digest(...) import org.bouncycastle.crypto.digests.RIPEMD160Digest;\n...\n new RIPEMD160Digest(...) import org.bouncycastle.crypto.digests.SHA1Digest;\n...\n new SHA1Digest(...)', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java-deprecated-digest') match_id = fb73199c3ad85947d6a041d026e53536b32ebffb1c4166fc060d856187927b8e3df1068b88654b201f3499441daa9b8761c98d6792c71f658373057fbb5543fc_0
2025-10-07 09:45:56,075 - semgrep.rule_match - DEBUG - match_key = ('"TLS_RSA_WITH_RC4_.*"|".*RC4_.*"|".*MD5.*"|".*SHA_1.*" $OBJ.getInstance("MD2") $OBJ.getInstance("MD5") $OBJ.getInstance("SHA") $OBJ.getInstance("SHA-1") $OBJ.getInstance("SHA0") import java.security.MessageDigest;\n...\n $X.md2(...) $X.md5(...) $X.md5Hex(...) $X.sha1(...) $X.sha1Hex(...) import org.apache.commons.codec.digest.DigestUtils;\n...\n $X.md5() $X.sha1() import com.google.common.hash.Hashing;\n...\n $X.md5Digest(...) $X.md5DigestAsHex(...) $X.sha1Digest(...) $X.sha1DigestAsHex(...) import org.springframework.util.DigestUtils;\n...\n $X.setAlgorithm("MD5") $X.setAlgorithm("SHA-1") new StandardStringDigester(...) import org.jasypt.digest.StandardStringDigester;\n...\n MessageDigestPasswordEncoder(...) import org.springframework.security.crypto.password.MessageDigestPasswordEncoder;\n...\n import org.apache.shiro.authc.credential.Sha1CredentialsMatcher;\n...\n new Sha1CredentialsMatcher(...) import org.apache.shiro.crypto.hash.Md5Hash;\n...\n new Md5Hash(...) import org.bouncycastle.crypto.digests.MD5Digest;\n...\n new MD5Digest(...) import org.bouncycastle.crypto.digests.RIPEMD128Digest;\n...\n new RIPEMD128Digest(...) import org.bouncycastle.crypto.digests.RIPEMD160Digest;\n...\n new RIPEMD160Digest(...) import org.bouncycastle.crypto.digests.SHA1Digest;\n...\n new SHA1Digest(...)', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java-deprecated-digest') match_id = fb73199c3ad85947d6a041d026e53536b32ebffb1c4166fc060d856187927b8e3df1068b88654b201f3499441daa9b8761c98d6792c71f658373057fbb5543fc_0
2025-10-07 09:45:56,075 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java-deprecated-digest-use') match_id = 9143d33b97a94539a9a91f34319d197aed6282ddb79d9dae6938bd87ab3c9bff8fcc96440ff7a42941f07cad2870b183778437680e7c2a35c18db90a2a72de8a_0
2025-10-07 09:45:56,075 - semgrep.rule_match - DEBUG - match_key = ('"MD5"\n "RC2"\n "RC4"\n "SHA"\n "SHA-1"\n MessageDigest.getInstance(...) $SECURITY.MessageDigest.getInstance(...) import java.security.*;\n...\n import java.security.MessageDigest;\n...\n import javax.crypto.*;\n...\n import javax.crypto.Cipher;\n...\n', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java-deprecated-digest-use') match_id = 5bcaed952cc17610569ece2d7c9475011a81a5e33421bfd4be44a6224bbecfde9fbf48c5f171e5cd78b00f20e9762ccdb34b0f8a9bbea5b756301ca95fb05271_0
2025-10-07 09:45:56,075 - semgrep.rule_match - DEBUG - match_key = ('"MD5"\n "RC2"\n "RC4"\n "SHA"\n "SHA-1"\n MessageDigest.getInstance(...) $SECURITY.MessageDigest.getInstance(...) import java.security.*;\n...\n import java.security.MessageDigest;\n...\n import javax.crypto.*;\n...\n import javax.crypto.Cipher;\n...\n', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java-deprecated-digest-use') match_id = 5bcaed952cc17610569ece2d7c9475011a81a5e33421bfd4be44a6224bbecfde9fbf48c5f171e5cd78b00f20e9762ccdb34b0f8a9bbea5b756301ca95fb05271_0
2025-10-07 09:45:56,076 - semgrep.rule_match - DEBUG - match_key = ('"MD5"\n "RC2"\n "RC4"\n "SHA"\n "SHA-1"\n MessageDigest.getInstance(...) $SECURITY.MessageDigest.getInstance(...) import java.security.*;\n...\n import java.security.MessageDigest;\n...\n import javax.crypto.*;\n...\n import javax.crypto.Cipher;\n...\n', PosixPath('app/src/main/java/com/veracode/verademo/utils/User.java'), 'java-deprecated-digest-use') match_id = 5bcaed952cc17610569ece2d7c9475011a81a5e33421bfd4be44a6224bbecfde9fbf48c5f171e5cd78b00f20e9762ccdb34b0f8a9bbea5b756301ca95fb05271_0
2025-10-07 09:45:56,076 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/java/com/veracode/verademo/utils/UserFactory.java'), 'java-privacy-violation') match_id = c3d00509bc2e38cfe1933c4a0af2c65967fd9f2522c404b4feef2904445581763e081f6003b19af95113177af02bc5a8afeca3d9c75fc716a9c4a096473916b4_0
2025-10-07 09:45:56,076 - semgrep.rule_match - DEBUG - match_key = ('$FW.write($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* Logger.getLogger($ANY).info($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* Logger.getLogger($ANY).warning($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* System.err.println($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* System.out.println($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* throw new RuntimeException($MSG); COOKIE_NAME (?i).*(email|password|ssn|token|name).* private static final String COOKIE_NAME = "user";', PosixPath('app/src/main/java/com/veracode/verademo/utils/UserFactory.java'), 'java-privacy-violation') match_id = 2bab5adb34c0f183a7c8d39907df21fcd0e4ce84660d20f8d1a3e457a709f6e6fbea9884d8209f43ee26b5086ccc0e673293418f5fcc0ebb13caddf2302a44e3_0
2025-10-07 09:45:56,077 - semgrep.rule_match - DEBUG - match_key = ('$FW.write($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* Logger.getLogger($ANY).info($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* Logger.getLogger($ANY).warning($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* System.err.println($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* System.out.println($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* throw new RuntimeException($MSG); COOKIE_NAME (?i).*(email|password|ssn|token|name).* private static final String COOKIE_NAME = "user";', PosixPath('app/src/main/java/com/veracode/verademo/utils/UserFactory.java'), 'java-privacy-violation') match_id = 2bab5adb34c0f183a7c8d39907df21fcd0e4ce84660d20f8d1a3e457a709f6e6fbea9884d8209f43ee26b5086ccc0e673293418f5fcc0ebb13caddf2302a44e3_0
2025-10-07 09:45:56,077 - semgrep.rule_match - DEBUG - match_key = ('$FW.write($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* Logger.getLogger($ANY).info($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* Logger.getLogger($ANY).warning($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* System.err.println($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* System.out.println($MSG); $MSG (?i)^(?!.*hash).*(email|password|ssn|token|name).* throw new RuntimeException($MSG); COOKIE_NAME (?i).*(email|password|ssn|token|name).* private static final String COOKIE_NAME = "user";', PosixPath('app/src/main/java/com/veracode/verademo/utils/UserFactory.java'), 'java-privacy-violation') match_id = 2bab5adb34c0f183a7c8d39907df21fcd0e4ce84660d20f8d1a3e457a709f6e6fbea9884d8209f43ee26b5086ccc0e673293418f5fcc0ebb13caddf2302a44e3_0
2025-10-07 09:45:56,077 - semgrep.rule_match - DEBUG - match_key = ('', PosixPath('app/src/main/webapp/resources/js/bootstrap.js'), 'rules_lgpl_javascript_dos_rule-regex-dos') match_id = fe61588030ab5bc530c3c259830b9c123d3756d86a05872a1995cc7ba46761b1bec1e3c9c0e3dfd105d4ed75824356f14b8f618cbf37df2128f7267fc0dece91_0
2025-10-07 09:45:56,078 - semgrep.rule_match - DEBUG - match_key = ('$APP.$METHOD(..., function $FUNC(placement, pos, ...) {...}) Tooltip.prototype.getViewportAdjustedDelta = function $FUNC(placement, pos, ...) {...} function $FUNC(placement, pos, ...) {...} function (placement, pos, ...) {...} var Tooltip.prototype.getViewportAdjustedDelta = function $FUNC(placement, pos, ...) {...}; $INP = <... placement ...>;\n...\n/right|left/.test(<... $INP ...>)\n $INP = <... placement ...>;\n...\n/.../.exec(<... $INP ...>)\n $INP = <... placement.$BODY.$PARAM ...>;\n...\n/right|left/.test(<... $INP ...>)\n $INP = <... placement.$BODY.$PARAM ...>;\n...\n/.../.exec(<... $INP ...>)\n $INP = <... placement.$QUERY ...>;\n...\n/right|left/.test(<... $INP ...>)\n $INP = <... placement.$QUERY ...>;\n...\n/.../.exec(<... $INP ...>)\n $RE = /.../;\n...\n$RE.exec(<... placement ...>)\n $RE = /.../;\n...\n$RE.exec(<... placement.$BODY.$PARAM ...>)\n $RE = /.../;\n...\n$RE.exec(<... placement.$QUERY ...>)\n /right|left/.test(<... placement ...>)\n /right|left/.test(<... placement.$BODY.$PARAM ...>)\n /right|left/.test(<... placement.$QUERY ...>)\n /.../.exec(<... placement.$BODY.$PARAM ...>)\n /.../g.exec(<... placement ...>)\n /.../g.exec(<... placement.$QUERY ...>)\n', PosixPath('app/src/main/webapp/resources/js/bootstrap.js'), 'rules_lgpl_javascript_dos_rule-regex-dos') match_id = 0f330ec0e5b107656cc2c20707c3d332294dd4783ac1206499fbeb72c2567a7412cc88a838ffe1182498f1bf1c99ea4306623227ff967202b6f5bdabaef34bec_0
2025-10-07 09:45:56,078 - semgrep.rule_match - DEBUG - match_key = ('$APP.$METHOD(..., function $FUNC(placement, pos, ...) {...}) Tooltip.prototype.getViewportAdjustedDelta = function $FUNC(placement, pos, ...) {...} function $FUNC(placement, pos, ...) {...} function (placement, pos, ...) {...} var Tooltip.prototype.getViewportAdjustedDelta = function $FUNC(placement, pos, ...) {...}; $INP = <... placement ...>;\n...\n/right|left/.test(<... $INP ...>)\n $INP = <... placement ...>;\n...\n/.../.exec(<... $INP ...>)\n $INP = <... placement.$BODY.$PARAM ...>;\n...\n/right|left/.test(<... $INP ...>)\n $INP = <... placement.$BODY.$PARAM ...>;\n...\n/.../.exec(<... $INP ...>)\n $INP = <... placement.$QUERY ...>;\n...\n/right|left/.test(<... $INP ...>)\n $INP = <... placement.$QUERY ...>;\n...\n/.../.exec(<... $INP ...>)\n $RE = /.../;\n...\n$RE.exec(<... placement ...>)\n $RE = /.../;\n...\n$RE.exec(<... placement.$BODY.$PARAM ...>)\n $RE = /.../;\n...\n$RE.exec(<... placement.$QUERY ...>)\n /right|left/.test(<... placement ...>)\n /right|left/.test(<... placement.$BODY.$PARAM ...>)\n /right|left/.test(<... placement.$QUERY ...>)\n /.../.exec(<... placement.$BODY.$PARAM ...>)\n /.../g.exec(<... placement ...>)\n /.../g.exec(<... placement.$QUERY ...>)\n', PosixPath('app/src/main/webapp/resources/js/bootstrap.js'), 'rules_lgpl_javascript_dos_rule-regex-dos') match_id = 0f330ec0e5b107656cc2c20707c3d332294dd4783ac1206499fbeb72c2567a7412cc88a838ffe1182498f1bf1c99ea4306623227ff967202b6f5bdabaef34bec_0
2025-10-07 09:45:56,079 - semgrep.rule_match - DEBUG - match_key = ('$APP.$METHOD(..., function $FUNC(placement, pos, ...) {...}) Tooltip.prototype.getViewportAdjustedDelta = function $FUNC(placement, pos, ...) {...} function $FUNC(placement, pos, ...) {...} function (placement, pos, ...) {...} var Tooltip.prototype.getViewportAdjustedDelta = function $FUNC(placement, pos, ...) {...}; $INP = <... placement ...>;\n...\n/right|left/.test(<... $INP ...>)\n $INP = <... placement ...>;\n...\n/.../.exec(<... $INP ...>)\n $INP = <... placement.$BODY.$PARAM ...>;\n...\n/right|left/.test(<... $INP ...>)\n $INP = <... placement.$BODY.$PARAM ...>;\n...\n/.../.exec(<... $INP ...>)\n $INP = <... placement.$QUERY ...>;\n...\n/right|left/.test(<... $INP ...>)\n $INP = <... placement.$QUERY ...>;\n...\n/.../.exec(<... $INP ...>)\n $RE = /.../;\n...\n$RE.exec(<... placement ...>)\n $RE = /.../;\n...\n$RE.exec(<... placement.$BODY.$PARAM ...>)\n $RE = /.../;\n...\n$RE.exec(<... placement.$QUERY ...>)\n /right|left/.test(<... placement ...>)\n /right|left/.test(<... placement.$BODY.$PARAM ...>)\n /right|left/.test(<... placement.$QUERY ...>)\n /.../.exec(<... placement.$BODY.$PARAM ...>)\n /.../g.exec(<... placement ...>)\n /.../g.exec(<... placement.$QUERY ...>)\n', PosixPath('app/src/main/webapp/resources/js/bootstrap.js'), 'rules_lgpl_javascript_dos_rule-regex-dos') match_id = 0f330ec0e5b107656cc2c20707c3d332294dd4783ac1206499fbeb72c2567a7412cc88a838ffe1182498f1bf1c99ea4306623227ff967202b6f5bdabaef34bec_0
2025-10-07 09:45:56,081 - semgrep.core_runner - DEBUG - semgrep ran in 0:00:05.330548 on 113 files
2025-10-07 09:45:56,082 - semgrep.core_runner - DEBUG - findings summary: 10 warning, 55 error, 0 info
2025-10-07 09:45:56,083 - semgrep.app.auth - DEBUG - Getting API token from settings file
2025-10-07 09:45:56,083 - semgrep.app.auth - DEBUG - No API token found in settings file
2025-10-07 09:45:56,762 - semgrep.output - VERBOSE - 
========================================
Files skipped:
========================================

  Always skipped by Opengrep:

   • <none>

  Skipped by .gitignore:
  (Disable by passing --no-git-ignore)

   • <all files not listed by `git ls-files` were skipped>

  Skipped by .semgrepignore:
  - https://semgrep.dev/docs/ignoring-files-folders-code/#understand-semgrep-defaults

   • /Users/roberthaynes/endor/EL2Demo/app/src/main/webapp/resources/js/bootstrap.min.js
   • /Users/roberthaynes/endor/EL2Demo/app/src/main/webapp/resources/js/jquery-1.11.2.min.js

  Skipped by --include patterns:

   • <none>

  Skipped by --exclude patterns:

   • <none>

  Files skipped due to insufficient read permissions:

   • <none>

  Skipped by limiting to files smaller than 1000000 bytes:
  (Adjust with the --max-target-bytes flag)

   • /Users/roberthaynes/endor/EL2Demo/docs/scan_results/results.json

  Partially analyzed due to parsing or internal Opengrep errors

   • <none>

2025-10-07 09:45:56,763 - semgrep.output - INFO - Some files were skipped or only partially analyzed.
  Scan was limited to files tracked by git.
  Scan skipped: 1 files larger than 1.0 MB, 2 files matching .semgrepignore patterns
  For a full list of skipped files, run opengrep with the --verbose flag.

Ran 261 rules on 113 files: 65 findings.
